{"version":3,"file":"list.min.js","sources":["../../../apps/frappe/frappe/public/js/frappe/model/indicator.js","../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter.js","../../../apps/frappe/frappe/public/js/frappe/ui/filters/filter_list.js","../../../apps/frappe/frappe/public/js/frappe/ui/filters/field_select.js","../../../apps/frappe/frappe/public/js/frappe/ui/tags.js","../../../apps/frappe/frappe/public/js/frappe/ui/tag_editor.js","../../../apps/frappe/frappe/public/js/frappe/ui/like.js","../../../apps/frappe/frappe/public/js/frappe/list/base_list.js","../../../apps/frappe/frappe/public/js/frappe/list/bulk_operations.js","../../../apps/frappe/frappe/public/js/frappe/list/list_settings.js","../../../apps/frappe/frappe/public/js/frappe/list/list_view.js","../../../apps/frappe/frappe/public/js/frappe/list/list_factory.js","../../../apps/frappe/frappe/public/js/frappe/list/list_view_select.js","../../../apps/frappe/frappe/public/js/frappe/list/list_filter.js","../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar.js","../../../apps/frappe/frappe/public/js/frappe/list/list_sidebar_group_by.js","../../../apps/frappe/frappe/public/js/frappe/views/gantt/gantt_view.js","../../../apps/frappe/frappe/public/js/frappe/views/calendar/calendar.js","../../../apps/frappe/frappe/public/js/frappe/views/dashboard/dashboard_view.js","../../../apps/frappe/frappe/public/js/frappe/views/image/image_view.js","../../../apps/frappe/frappe/public/js/frappe/views/map/map_view.js","../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_settings.js","../../../apps/frappe/frappe/public/js/frappe/views/file/file_view.js","../../../apps/frappe/frappe/public/js/frappe/views/interaction.js","../../../apps/frappe/frappe/public/js/frappe/views/kanban/kanban_view.js","../../../apps/frappe/frappe/public/js/frappe/views/inbox/inbox_view.js","../../../apps/frappe/frappe/public/js/frappe/views/treeview.js"],"sourcesContent":["// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n\nfrappe.has_indicator = function(doctype) {\n\t// returns true if indicator is present\n\tif(frappe.model.is_submittable(doctype)) {\n\t\treturn true;\n\t} else if((frappe.listview_settings[doctype] || {}).get_indicator\n\t\t|| frappe.workflow.get_state_fieldname(doctype)) {\n\t\treturn true;\n\t} else if(frappe.meta.has_field(doctype, 'enabled')\n\t\t|| frappe.meta.has_field(doctype, 'disabled')) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\nfrappe.get_indicator = function(doc, doctype) {\n\tif(doc.__unsaved) {\n\t\treturn [__(\"Not Saved\"), \"orange\"];\n\t}\n\n\tif(!doctype) doctype = doc.doctype;\n\n\tvar workflow = frappe.workflow.workflows[doctype];\n\tvar without_workflow = workflow ? workflow['override_status'] : true;\n\n\tvar settings = frappe.listview_settings[doctype] || {};\n\n\tvar is_submittable = frappe.model.is_submittable(doctype),\n\t\tworkflow_fieldname = frappe.workflow.get_state_fieldname(doctype);\n\n\t// workflow\n\tif(workflow_fieldname && !without_workflow) {\n\t\tvar value = doc[workflow_fieldname];\n\t\tif(value) {\n\t\t\tvar colour = \"\";\n\n\t\t\tif(locals[\"Workflow State\"][value] && locals[\"Workflow State\"][value].style) {\n\t\t\t\tvar colour = {\n\t\t\t\t\t\"Success\": \"green\",\n\t\t\t\t\t\"Warning\": \"orange\",\n\t\t\t\t\t\"Danger\": \"red\",\n\t\t\t\t\t\"Primary\": \"blue\",\n\t\t\t\t\t\"Inverse\": \"black\",\n\t\t\t\t\t\"Info\": \"light-blue\",\n\t\t\t\t}[locals[\"Workflow State\"][value].style];\n\t\t\t}\n\t\t\tif (!colour) colour = \"gray\";\n\n\t\t\treturn [__(value), colour, workflow_fieldname + ',=,' + value];\n\t\t}\n\t}\n\n\t// draft if document is submittable\n\tif(is_submittable && doc.docstatus==0 && !settings.has_indicator_for_draft) {\n\t\treturn [__(\"Draft\"), \"red\", \"docstatus,=,0\"];\n\t}\n\n\t// cancelled\n\tif(is_submittable && doc.docstatus==2 && !settings.has_indicator_for_cancelled) {\n\t\treturn [__(\"Cancelled\"), \"red\", \"docstatus,=,2\"];\n\t}\n\n\tif(settings.get_indicator) {\n\t\tvar indicator = settings.get_indicator(doc);\n\t\tif(indicator) return indicator;\n\t}\n\n\t// if submittable\n\tif(is_submittable && doc.docstatus==1) {\n\t\treturn [__(\"Submitted\"), \"blue\", \"docstatus,=,1\"];\n\t}\n\n\t// based on status\n\tif(doc.status) {\n\t\treturn [__(doc.status), frappe.utils.guess_colour(doc.status)];\n\t}\n\n\t// based on enabled\n\tif(frappe.meta.has_field(doctype, 'enabled')) {\n\t\tif(doc.enabled) {\n\t\t\treturn [__('Enabled'), 'blue', 'enabled,=,1'];\n\t\t} else {\n\t\t\treturn [__('Disabled'), 'grey', 'enabled,=,0'];\n\t\t}\n\t}\n\n\t// based on disabled\n\tif(frappe.meta.has_field(doctype, 'disabled')) {\n\t\tif(doc.disabled) {\n\t\t\treturn [__('Disabled'), 'grey', 'disabled,=,1'];\n\t\t} else {\n\t\t\treturn [__('Enabled'), 'blue', 'disabled,=,0'];\n\t\t}\n\t}\n}\n","frappe.ui.Filter = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tif (this.value === null || this.value === undefined) {\n\t\t\tthis.value = '';\n\t\t}\n\n\t\tthis.utils = frappe.ui.filter_utils;\n\t\tthis.set_conditions();\n\t\tthis.set_conditions_from_config();\n\t\tthis.make();\n\t}\n\n\tset_conditions() {\n\t\tthis.conditions = [\n\t\t\t['=', __('Equals')],\n\t\t\t['!=', __('Not Equals')],\n\t\t\t['like', __('Like')],\n\t\t\t['not like', __('Not Like')],\n\t\t\t['in', __('In')],\n\t\t\t['not in', __('Not In')],\n\t\t\t['is', __('Is')],\n\t\t\t['>', '>'],\n\t\t\t['<', '<'],\n\t\t\t['>=', '>='],\n\t\t\t['<=', '<='],\n\t\t\t['Between', __('Between')],\n\t\t\t['Timespan', __('Timespan')],\n\t\t];\n\n\t\tthis.nested_set_conditions = [\n\t\t\t['descendants of', __('Descendants Of')],\n\t\t\t['not descendants of', __('Not Descendants Of')],\n\t\t\t['ancestors of', __('Ancestors Of')],\n\t\t\t['not ancestors of', __('Not Ancestors Of')],\n\t\t];\n\n\t\tthis.conditions.push(...this.nested_set_conditions);\n\n\t\tthis.invalid_condition_map = {\n\t\t\tDate: ['like', 'not like'],\n\t\t\tDatetime: ['like', 'not like', 'in', 'not in', '=', '!='],\n\t\t\tData: ['Between', 'Timespan'],\n\t\t\tSelect: ['like', 'not like', 'Between', 'Timespan'],\n\t\t\tLink: ['Between', 'Timespan', '>', '<', '>=', '<='],\n\t\t\tCurrency: ['Between', 'Timespan'],\n\t\t\tColor: ['Between', 'Timespan'],\n\t\t\tCheck: this.conditions.map((c) => c[0]).filter((c) => c !== '='),\n\t\t\tCode: ['Between', 'Timespan', '>', '<', '>=', '<=', 'in', 'not in'],\n\t\t\t'HTML Editor': ['Between', 'Timespan', '>', '<', '>=', '<=', 'in', 'not in'],\n\t\t\t'Markdown Editor': ['Between', 'Timespan', '>', '<', '>=', '<=', 'in', 'not in'],\n\t\t\tPassword: ['Between', 'Timespan', '>', '<', '>=', '<=', 'in', 'not in'],\n\t\t\tRating: ['like', 'not like', 'Between', 'in', 'not in', 'Timespan'],\n\t\t};\n\t}\n\n\tset_conditions_from_config() {\n\t\tif (frappe.boot.additional_filters_config) {\n\t\t\tthis.filters_config = frappe.boot.additional_filters_config;\n\t\t\tfor (let key of Object.keys(this.filters_config)) {\n\t\t\t\tconst filter = this.filters_config[key];\n\t\t\t\tthis.conditions.push([key, __(filter.label)]);\n\t\t\t\tfor (let fieldtype of Object.keys(this.invalid_condition_map)) {\n\t\t\t\t\tif (!filter.valid_for_fieldtypes.includes(fieldtype)) {\n\t\t\t\t\t\tthis.invalid_condition_map[fieldtype].push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmake() {\n\t\tthis.filter_edit_area = $(\n\t\t\tfrappe.render_template('edit_filter', {\n\t\t\t\tconditions: this.conditions,\n\t\t\t})\n\t\t);\n\t\tthis.parent && this.filter_edit_area.appendTo(this.parent.find('.filter-edit-area'));\n\t\tthis.make_select();\n\t\tthis.set_events();\n\t\tthis.setup();\n\t}\n\n\tmake_select() {\n\t\tthis.fieldselect = new frappe.ui.FieldSelect({\n\t\t\tparent: this.filter_edit_area.find('.fieldname-select-area'),\n\t\t\tdoctype: this.parent_doctype,\n\t\t\tparent_doctype: this._parent_doctype,\n\t\t\tfilter_fields: this.filter_fields,\n\t\t\tinput_class: 'input-xs',\n\t\t\tselect: (doctype, fieldname) => {\n\t\t\t\tthis.set_field(doctype, fieldname);\n\t\t\t},\n\t\t});\n\n\t\tif (this.fieldname) {\n\t\t\tthis.fieldselect.set_value(this.doctype, this.fieldname);\n\t\t}\n\t}\n\n\tset_events() {\n\t\tthis.filter_edit_area.find('span.remove-filter').on('click', () => {\n\t\t\tthis.remove();\n\t\t\tthis.on_change();\n\t\t});\n\n\t\tthis.filter_edit_area.find('.condition').change(() => {\n\t\t\tif (!this.field) return;\n\n\t\t\tlet condition = this.get_condition();\n\t\t\tlet fieldtype = null;\n\n\t\t\tif (['in', 'like', 'not in', 'not like'].includes(condition)) {\n\t\t\t\tfieldtype = 'Data';\n\t\t\t\tthis.add_condition_help(condition);\n\t\t\t} else {\n\t\t\t\tthis.filter_edit_area.find('.filter-description').empty();\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\t['Select', 'MultiSelect'].includes(this.field.df.fieldtype) &&\n\t\t\t\t['in', 'not in'].includes(condition)\n\t\t\t) {\n\t\t\t\tfieldtype = 'MultiSelect';\n\t\t\t}\n\n\t\t\tthis.set_field(\n\t\t\t\tthis.field.df.parent,\n\t\t\t\tthis.field.df.fieldname,\n\t\t\t\tfieldtype,\n\t\t\t\tcondition\n\t\t\t);\n\t\t});\n\t}\n\n\tsetup() {\n\t\tconst fieldname = this.fieldname || 'name';\n\t\t// set the field\n\t\treturn this.set_values(this.doctype, fieldname, this.condition, this.value);\n\t}\n\n\tsetup_state(is_new) {\n\t\tlet promise = Promise.resolve();\n\t\tif (is_new) {\n\t\t\tthis.filter_edit_area.addClass('new-filter');\n\t\t} else {\n\t\t\tpromise = this.update_filter_tag();\n\t\t}\n\n\t\tif (this.hidden) {\n\t\t\tpromise.then(() => this.$filter_tag.hide());\n\t\t}\n\t}\n\n\tfreeze() {\n\t\tthis.update_filter_tag();\n\t}\n\n\tupdate_filter_tag() {\n\t\tif (this._filter_value_set) {\n\t\t\treturn this._filter_value_set.then(() => {\n\t\t\t\t!this.$filter_tag ? this.make_tag() : this.set_filter_button_text();\n\t\t\t\tthis.filter_edit_area.hide();\n\t\t\t});\n\t\t} else {\n\t\t\treturn Promise.resolve();\n\t\t}\n\t}\n\n\tremove() {\n\t\tthis.filter_edit_area.remove();\n\t\tthis.field = null;\n\t\t// this.on_change(true);\n\t}\n\n\tset_values(doctype, fieldname, condition, value) {\n\t\t// presents given (could be via tags!)\n\t\tif (this.set_field(doctype, fieldname) === false) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (this.field.df.original_type === 'Check') {\n\t\t\tvalue = value == 1 ? 'Yes' : 'No';\n\t\t}\n\t\tif (condition) this.set_condition(condition, true);\n\n\t\t// set value can be asynchronous, so update_filter_tag should happen after field is set\n\t\tthis._filter_value_set = Promise.resolve();\n\n\t\tif (['in', 'not in'].includes(condition) && Array.isArray(value)) {\n\t\t\tvalue = value.join(',');\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tthis._filter_value_set = this.field.set_value(value);\n\t\t} else if (value !== undefined || value !== null) {\n\t\t\tthis._filter_value_set = this.field.set_value((value + '').trim());\n\t\t}\n\t\treturn this._filter_value_set;\n\t}\n\n\tset_field(doctype, fieldname, fieldtype, condition) {\n\t\t// set in fieldname (again)\n\t\tlet cur = {};\n\t\tif (this.field) for (let k in this.field.df) cur[k] = this.field.df[k];\n\n\t\tlet original_docfield = (this.fieldselect.fields_by_name[doctype] || {})[\n\t\t\tfieldname\n\t\t];\n\n\t\tif (!original_docfield) {\n\t\t\tconsole.warn(`Field ${fieldname} is not selectable.`);\n\t\t\tthis.remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tlet df = copy_dict(original_docfield);\n\n\t\t// filter field shouldn't be read only or hidden\n\t\tdf.read_only = 0;\n\t\tdf.hidden = 0;\n\t\tdf.is_filter = true;\n\t\tdelete df.hidden_due_to_dependency;\n\n\t\tlet c = condition ? condition : this.utils.get_default_condition(df);\n\t\tthis.set_condition(c);\n\n\t\tthis.utils.set_fieldtype(df, fieldtype, this.get_condition());\n\n\t\t// called when condition is changed,\n\t\t// don't change if all is well\n\t\tif (\n\t\t\tthis.field &&\n\t\t\tcur.fieldname == fieldname &&\n\t\t\tdf.fieldtype == cur.fieldtype &&\n\t\t\tdf.parent == cur.parent &&\n\t\t\tdf.options == cur.options\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\t// clear field area and make field\n\t\tthis.fieldselect.selected_doctype = doctype;\n\t\tthis.fieldselect.selected_fieldname = fieldname;\n\n\t\tif (\n\t\t\tthis.filters_config &&\n\t\t\tthis.filters_config[condition] &&\n\t\t\tthis.filters_config[condition].valid_for_fieldtypes.includes(df.fieldtype)\n\t\t) {\n\t\t\tlet args = {};\n\t\t\tif (this.filters_config[condition].depends_on) {\n\t\t\t\tconst field_name = this.filters_config[condition].depends_on;\n\t\t\t\tconst filter_value = this.filter_list.get_filter_value(fieldname);\n\t\t\t\targs[field_name] = filter_value;\n\t\t\t}\n\t\t\tfrappe\n\t\t\t\t.xcall(this.filters_config[condition].get_field, args)\n\t\t\t\t.then(field => {\n\t\t\t\t\tdf.fieldtype = field.fieldtype;\n\t\t\t\t\tdf.options = field.options;\n\t\t\t\t\tdf.fieldname = fieldname;\n\t\t\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t\t\t});\n\t\t} else {\n\t\t\tthis.make_field(df, cur.fieldtype);\n\t\t}\n\t}\n\n\tmake_field(df, old_fieldtype) {\n\t\tlet old_text = this.field ? this.field.get_value() : null;\n\t\tthis.hide_invalid_conditions(df.fieldtype, df.original_type);\n\t\tthis.toggle_nested_set_conditions(df);\n\t\tlet field_area = this.filter_edit_area\n\t\t\t.find('.filter-field')\n\t\t\t.empty()\n\t\t\t.get(0);\n\t\tdf.input_class = 'input-xs';\n\t\tlet f = frappe.ui.form.make_control({\n\t\t\tdf: df,\n\t\t\tparent: field_area,\n\t\t\tonly_input: true,\n\t\t});\n\t\tf.refresh();\n\n\t\tthis.field = f;\n\t\tif (old_text && f.fieldtype === old_fieldtype) {\n\t\t\tthis.field.set_value(old_text);\n\t\t}\n\n\t\tthis.bind_filter_field_events();\n\t}\n\n\tbind_filter_field_events() {\n\t\t// Apply filter on input focus out\n\t\tthis.field.$input.on('focusout', () => this.on_change());\n\n\t\t// run on enter\n\t\t$(this.field.wrapper)\n\t\t\t.find(':input')\n\t\t\t.keydown(e => {\n\t\t\t\tif (e.which == 13 && this.field.df.fieldtype !== 'MultiSelect') {\n\t\t\t\t\tthis.on_change();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tget_value() {\n\t\treturn [\n\t\t\tthis.fieldselect.selected_doctype,\n\t\t\tthis.field.df.fieldname,\n\t\t\tthis.get_condition(),\n\t\t\tthis.get_selected_value(),\n\t\t\tthis.hidden,\n\t\t];\n\t}\n\n\tget_selected_value() {\n\t\treturn this.utils.get_selected_value(this.field, this.get_condition());\n\t}\n\n\tget_condition() {\n\t\treturn this.filter_edit_area.find('.condition').val();\n\t}\n\n\tset_condition(condition, trigger_change = false) {\n\t\tlet $condition_field = this.filter_edit_area.find('.condition');\n\t\t$condition_field.val(condition);\n\t\tif (trigger_change) $condition_field.change();\n\t}\n\n\tadd_condition_help(condition) {\n\t\tconst description = ['in', 'not in'].includes(condition)\n\t\t\t? __('values separated by commas')\n\t\t\t: __('use % as wildcard');\n\n\t\tthis.filter_edit_area.find('.filter-description').html(description);\n\t}\n\n\tmake_tag() {\n\t\tif (!this.field) return;\n\t\tthis.$filter_tag = this.get_filter_tag_element().insertAfter(\n\t\t\tthis.parent.find('.active-tag-filters .clear-filters')\n\t\t);\n\t\tthis.set_filter_button_text();\n\t\tthis.bind_tag();\n\t}\n\n\tbind_tag() {\n\t\tthis.$filter_tag.find('.remove-filter').on('click', this.remove.bind(this));\n\n\t\tlet filter_button = this.$filter_tag.find('.toggle-filter');\n\t\tfilter_button.on('click', () => {\n\t\t\tfilter_button\n\t\t\t\t.closest('.tag-filters-area')\n\t\t\t\t.find('.filter-edit-area')\n\t\t\t\t.show();\n\t\t\tthis.filter_edit_area.toggle();\n\t\t});\n\t}\n\n\tset_filter_button_text() {\n\t\tthis.$filter_tag.find('.toggle-filter').html(this.get_filter_button_text());\n\t}\n\n\tget_filter_button_text() {\n\t\tlet value = this.utils.get_formatted_value(\n\t\t\tthis.field,\n\t\t\tthis.get_selected_value()\n\t\t);\n\t\treturn `${__(this.field.df.label)} ${__(this.get_condition())} ${__(\n\t\t\tvalue\n\t\t)}`;\n\t}\n\n\tget_filter_tag_element() {\n\t\treturn $(`<div class=\"filter-tag btn-group\">\n\t\t\t<button class=\"btn btn-default btn-xs toggle-filter\"\n\t\t\t\ttitle=\"${__('Edit Filter')}\">\n\t\t\t</button>\n\t\t\t<button class=\"btn btn-default btn-xs remove-filter\"\n\t\t\t\ttitle=\"${__('Remove Filter')}\">\n\t\t\t\t${frappe.utils.icon('close')}\n\t\t\t</button>\n\t\t</div>`);\n\t}\n\n\thide_invalid_conditions(fieldtype, original_type) {\n\t\tlet invalid_conditions =\n\t\t\tthis.invalid_condition_map[original_type] ||\n\t\t\tthis.invalid_condition_map[fieldtype] ||\n\t\t\t[];\n\n\t\tfor (let condition of this.conditions) {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(!invalid_conditions.includes(condition[0]));\n\t\t}\n\t}\n\n\ttoggle_nested_set_conditions(df) {\n\t\tlet show_condition =\n\t\t\tdf.fieldtype === 'Link' &&\n\t\t\tfrappe.boot.nested_set_doctypes.includes(df.options);\n\t\tthis.nested_set_conditions.forEach((condition) => {\n\t\t\tthis.filter_edit_area\n\t\t\t\t.find(`.condition option[value=\"${condition[0]}\"]`)\n\t\t\t\t.toggle(show_condition);\n\t\t});\n\t}\n};\n\nfrappe.ui.filter_utils = {\n\tget_formatted_value(field, value) {\n\t\tif (field.df.fieldname === 'docstatus') {\n\t\t\tvalue = { 0: 'Draft', 1: 'Submitted', 2: 'Cancelled' }[value] || value;\n\t\t} else if (field.df.original_type === 'Check') {\n\t\t\tvalue = { 0: 'No', 1: 'Yes' }[cint(value)];\n\t\t}\n\t\treturn frappe.format(value, field.df, { only_value: 1 });\n\t},\n\n\tget_selected_value(field, condition) {\n\t\tif (!field) return;\n\n\t\tlet val = field.get_value();\n\n\t\tif (typeof val === 'string') {\n\t\t\tval = strip(val);\n\t\t}\n\n\t\tif (condition == 'is' && !val) {\n\t\t\tval = field.df.options[0].value;\n\t\t}\n\n\t\tif (field.df.original_type == 'Check') {\n\t\t\tval = val == 'Yes' ? 1 : 0;\n\t\t}\n\n\t\tif (condition.indexOf('like', 'not like') !== -1) {\n\t\t\t// automatically append wildcards\n\t\t\tif (val && !(val.startsWith('%') || val.endsWith('%'))) {\n\t\t\t\tval = '%' + val + '%';\n\t\t\t}\n\t\t} else if (in_list(['in', 'not in'], condition)) {\n\t\t\tif (val) {\n\t\t\t\tval = val.split(',').map((v) => strip(v));\n\t\t\t}\n\t\t}\n\t\tif (val === '%') {\n\t\t\tval = '';\n\t\t}\n\n\t\treturn val;\n\t},\n\n\tget_default_condition(df) {\n\t\tif (df.fieldtype == 'Data') {\n\t\t\treturn 'like';\n\t\t} else if (df.fieldtype == 'Date' || df.fieldtype == 'Datetime') {\n\t\t\treturn 'Between';\n\t\t} else {\n\t\t\treturn '=';\n\t\t}\n\t},\n\n\tset_fieldtype(df, fieldtype, condition) {\n\t\t// reset\n\t\tif (df.original_type) df.fieldtype = df.original_type;\n\t\telse df.original_type = df.fieldtype;\n\n\t\tdf.description = '';\n\t\tdf.reqd = 0;\n\t\tdf.ignore_link_validation = true;\n\n\t\t// given\n\t\tif (fieldtype) {\n\t\t\tdf.fieldtype = fieldtype;\n\t\t\treturn;\n\t\t}\n\n\t\t// scrub\n\t\tif (df.fieldname == 'docstatus') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ value: 0, label: __('Draft') },\n\t\t\t\t{ value: 1, label: __('Submitted') },\n\t\t\t\t{ value: 2, label: __('Cancelled') },\n\t\t\t];\n\t\t} else if (df.fieldtype == 'Check') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ label: __('Yes', null, 'Checkbox is checked'), value: 'Yes' },\n\t\t\t\t{ label: __('No', null, 'Checkbox is not checked'), value: 'No' },\n\t\t\t];\n\t\t} else if (\n\t\t\t[\n\t\t\t\t'Text',\n\t\t\t\t'Small Text',\n\t\t\t\t'Text Editor',\n\t\t\t\t'Code',\n\t\t\t\t'Attach',\n\t\t\t\t'Attach Image',\n\t\t\t\t'Markdown Editor',\n\t\t\t\t'HTML Editor',\n\t\t\t\t'Tag',\n\t\t\t\t'Comments',\n\t\t\t\t'Barcode',\n\t\t\t\t'Dynamic Link',\n\t\t\t\t'Read Only',\n\t\t\t\t'Assign',\n\t\t\t\t'Color',\n\t\t\t].indexOf(df.fieldtype) != -1\n\t\t) {\n\t\t\tdf.fieldtype = 'Data';\n\t\t} else if (\n\t\t\tdf.fieldtype == 'Link' &&\n\t\t\t[\n\t\t\t\t'=',\n\t\t\t\t'!=',\n\t\t\t\t'descendants of',\n\t\t\t\t'ancestors of',\n\t\t\t\t'not descendants of',\n\t\t\t\t'not ancestors of',\n\t\t\t].indexOf(condition) == -1\n\t\t) {\n\t\t\tdf.fieldtype = 'Data';\n\t\t}\n\t\tif (\n\t\t\tdf.fieldtype === 'Data' &&\n\t\t\t(df.options || '').toLowerCase() === 'email'\n\t\t) {\n\t\t\tdf.options = null;\n\t\t}\n\t\tif (\n\t\t\tcondition == 'Between' &&\n\t\t\t(df.fieldtype == 'Date' || df.fieldtype == 'Datetime')\n\t\t) {\n\t\t\tdf.fieldtype = 'DateRange';\n\t\t}\n\t\tif (\n\t\t\tcondition == 'Timespan' &&\n\t\t\t['Date', 'Datetime', 'DateRange', 'Select'].includes(df.fieldtype)\n\t\t) {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = this.get_timespan_options(['Last', 'Yesterday', 'Today', 'Tomorrow', 'This', 'Next']);\n\t\t}\n\t\tif (condition === 'is') {\n\t\t\tdf.fieldtype = 'Select';\n\t\t\tdf.options = [\n\t\t\t\t{ label: __('Set', null, 'Field value is set'), value: 'set' },\n\t\t\t\t{ label: __('Not Set', null, 'Field value is not set'), value: 'not set' },\n\t\t\t];\n\t\t}\n\t\treturn;\n\t},\n\n\tget_timespan_options(periods) {\n\t\tconst period_map = {\n\t\t\tLast: ['Week', 'Month', 'Quarter', '6 months', 'Year'],\n\t\t\tThis: ['Week', 'Month', 'Quarter', 'Year'],\n\t\t\tNext: ['Week', 'Month', 'Quarter', '6 months', 'Year'],\n\t\t};\n\t\tlet options = [];\n\t\tperiods.forEach((period) => {\n\t\t\tif (period_map[period]) {\n\t\t\t\tperiod_map[period].forEach((p) => {\n\t\t\t\t\toptions.push({\n\t\t\t\t\t\tlabel: `${period} ${p}`,\n\t\t\t\t\t\tvalue: `${period.toLowerCase()} ${p.toLowerCase()}`,\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\toptions.push({\n\t\t\t\t\tlabel: __(period),\n\t\t\t\t\tvalue: `${period.toLowerCase()}`,\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn options;\n\t},\n};\n","frappe.ui.FilterGroup = class {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.filters = [];\n\t\twindow.fltr = this;\n\t\tif (!this.filter_button) {\n\t\t\tthis.wrapper = this.parent;\n\t\t\tthis.wrapper.append(this.get_filter_area_template());\n\t\t\tthis.set_filter_events();\n\t\t} else {\n\t\t\tthis.make_popover();\n\t\t}\n\t}\n\n\tmake_popover() {\n\t\tthis.init_filter_popover();\n\t\tthis.set_clear_all_filters_event();\n\t\tthis.set_popover_events();\n\t}\n\n\tset_clear_all_filters_event() {\n\t\tif (!this.filter_x_button) return;\n\n\t\tthis.filter_x_button.on(\"click\", () => {\n\t\t\tthis.toggle_empty_filters(true);\n\t\t\tif (typeof this.base_list !== \"undefined\") {\n\t\t\t\t// It's a list view. Clear all the filters, also the ones in the\n\t\t\t\t// FilterArea outside this FilterGroup\n\t\t\t\tthis.base_list.filter_area.clear();\n\t\t\t} else {\n\t\t\t\t// Not a list view, just clear the filters in this FilterGroup\n\t\t\t\tthis.clear_filters();\n\t\t\t}\n\t\t\tthis.update_filter_button();\n\t\t});\n\t}\n\n\thide_popover() {\n\t\tthis.filter_button.popover(\"hide\");\n\t}\n\n\tinit_filter_popover() {\n\t\tthis.filter_button.popover({\n\t\t\tcontent: this.get_filter_area_template(),\n\t\t\ttemplate: `\n\t\t\t\t<div class=\"filter-popover popover\">\n\t\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t\t<div class=\"popover-body popover-content\">\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t`,\n\t\t\thtml: true,\n\t\t\ttrigger: 'manual',\n\t\t\tcontainer: 'body',\n\t\t\tplacement: 'bottom',\n\t\t\toffset: '-100px, 0'\n\t\t});\n\t}\n\n\ttoggle_empty_filters(show) {\n\t\tthis.wrapper &&\n\t\t\tthis.wrapper.find('.empty-filters').toggle(show);\n\t}\n\n\tset_popover_events() {\n\t\t$(document.body).on('click', (e) => {\n\t\t\tif (this.wrapper && this.wrapper.is(':visible')) {\n\t\t\t\tconst in_datepicker = $(e.target).is('.datepicker--cell')\n\t\t\t\t\t|| $(e.target).closest('.datepicker--nav-title').length !== 0\n\t\t\t\t\t|| $(e.target).parents('.datepicker--nav-action').length !== 0;\n\n\t\t\t\tif (\n\t\t\t\t\t$(e.target).parents('.filter-popover').length === 0\n\t\t\t\t\t&& $(e.target).parents('.filter-box').length === 0\n\t\t\t\t\t&& this.filter_button.find($(e.target)).length === 0\n\t\t\t\t\t&& !$(e.target).is(this.filter_button)\n\t\t\t\t\t&& !in_datepicker\n\t\t\t\t) {\n\t\t\t\t\tthis.wrapper && this.hide_popover();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tthis.filter_button.on('click', () => {\n\t\t\tthis.filter_button.popover('toggle');\n\t\t});\n\n\t\tthis.filter_button.on('shown.bs.popover', () => {\n\t\t\tlet hide_empty_filters = this.filters && this.filters.length > 0;\n\n\t\t\tif (!this.wrapper) {\n\t\t\t\tthis.wrapper = $('.filter-popover');\n\t\t\t\tif (hide_empty_filters) {\n\t\t\t\t\tthis.toggle_empty_filters(false);\n\t\t\t\t\tthis.add_filters_to_popover(this.filters);\n\t\t\t\t}\n\t\t\t\tthis.set_filter_events();\n\t\t\t}\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\t!hide_empty_filters && this.add_filter(this.doctype, 'name');\n\t\t});\n\n\t\tthis.filter_button.on('hidden.bs.popover', () => {\n\t\t\tthis.apply();\n\t\t});\n\n\t\t// REDESIGN-TODO: (Temporary) Review and find best solution for this\n\t\tfrappe.router.on(\"change\", () => {\n\t\t\tif (this.wrapper && this.wrapper.is(\":visible\")) {\n\t\t\t\tthis.hide_popover();\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_filters_to_popover(filters) {\n\t\tfilters.forEach(filter => {\n\t\t\tfilter.parent = this.wrapper;\n\t\t\tfilter.field = null;\n\t\t\tfilter.make();\n\t\t});\n\t}\n\n\tapply() {\n\t\tthis.update_filters();\n\t\tthis.on_change();\n\t}\n\n\tupdate_filter_button() {\n\t\tconst filters_applied = this.filters.length > 0;\n\t\tconst button_label = filters_applied\n\t\t\t? this.filters.length > 1\n\t\t\t\t? __(\"{0} filters\", [this.filters.length])\n\t\t\t\t: __(\"{0} filter\", [this.filters.length])\n\t\t\t: __('Filter');\n\n\n\t\tthis.filter_button\n\t\t\t.toggleClass('btn-default', !filters_applied)\n\t\t\t.toggleClass('btn-primary-light', filters_applied);\n\n\t\tthis.filter_button.find('.filter-icon')\n\t\t\t.toggleClass('active', filters_applied);\n\n\t\tthis.filter_button.find('.button-label').html(button_label);\n\t}\n\n\tset_filter_events() {\n\t\tthis.wrapper.find('.add-filter').on('click', () => {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tthis.add_filter(this.doctype, 'name');\n\t\t});\n\n\t\tthis.wrapper.find('.clear-filters').on('click', () => {\n\t\t\tthis.toggle_empty_filters(true);\n\t\t\tthis.clear_filters();\n\t\t\tthis.on_change();\n\t\t\tthis.hide_popover();\n\t\t});\n\n\t\tthis.wrapper.find(\".apply-filters\").on(\"click\", () => this.hide_popover());\n\t}\n\n\tadd_filters(filters) {\n\t\tlet promises = [];\n\n\t\tfor (const filter of filters) {\n\t\t\tpromises.push(() => this.add_filter(...filter));\n\t\t}\n\n\t\treturn frappe.run_serially(promises).then(() => this.update_filters());\n\t}\n\n\tadd_filter(doctype, fieldname, condition, value, hidden) {\n\t\tif (!fieldname) return Promise.resolve();\n\t\t// adds a new filter, returns true if filter has been added\n\n\t\t// {}: Add in page filter by fieldname if exists ('=' => 'like')\n\n\t\tif (!this.validate_args(doctype, fieldname)) return false;\n\t\tconst is_new_filter = arguments.length < 2;\n\t\tif (is_new_filter && this.wrapper.find('.new-filter:visible').length) {\n\t\t\t// only allow 1 new filter at a time!\n\t\t\treturn Promise.resolve();\n\t\t} else {\n\t\t\tlet args = [doctype, fieldname, condition, value, hidden];\n\t\t\tconst promise = this.push_new_filter(args, is_new_filter);\n\t\t\treturn (promise && promise.then) ? promise : Promise.resolve();\n\t\t}\n\t}\n\n\tvalidate_args(doctype, fieldname) {\n\t\tif (doctype && fieldname\n\t\t\t&& !frappe.meta.has_field(doctype, fieldname)\n\t\t\t&& !frappe.model.std_fields_list.includes(fieldname)) {\n\n\t\t\tfrappe.msgprint({\n\t\t\t\tmessage: __('Invalid filter: {0}', [fieldname.bold()]),\n\t\t\t\tindicator: 'red',\n\t\t\t});\n\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpush_new_filter(args) {\n\t\t// args: [doctype, fieldname, condition, value]\n\t\tif (this.filter_exists(args)) return;\n\n\t\t// {}: Clear page filter fieldname field\n\n\t\tlet filter = this._push_new_filter(...args);\n\n\t\tif (filter && filter.value) {\n\t\t\t// filter.setup_state(is_new_filter);\n\t\t\treturn filter._filter_value_set; // internal promise\n\t\t}\n\t}\n\n\t_push_new_filter(doctype, fieldname, condition, value, hidden = false) {\n\t\tlet args = {\n\t\t\tparent: this.wrapper,\n\t\t\tparent_doctype: this.doctype,\n\t\t\tdoctype: doctype,\n\t\t\t_parent_doctype: this.parent_doctype,\n\t\t\tfieldname: fieldname,\n\t\t\tcondition: condition,\n\t\t\tvalue: value,\n\t\t\thidden: hidden,\n\t\t\tindex: this.filters.length + 1,\n\t\t\ton_change: (update) => {\n\t\t\t\tif (update) this.update_filters();\n\t\t\t\tthis.on_change();\n\t\t\t},\n\t\t\tfilter_items: (doctype, fieldname) => {\n\t\t\t\treturn !this.filter_exists([doctype, fieldname]);\n\t\t\t},\n\t\t\tfilter_list: this.base_list || this,\n\t\t};\n\t\tlet filter = new frappe.ui.Filter(args);\n\t\tthis.filters.push(filter);\n\t\treturn filter;\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tlet filter_obj = this.filters.find(f => f.fieldname == fieldname) || {};\n\t\treturn filter_obj.value;\n\t}\n\n\tfilter_exists(filter_value) {\n\t\t// filter_value of form: [doctype, fieldname, condition, value]\n\t\tlet exists = false;\n\t\tthis.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\tlet f_value = f.get_value();\n\t\t\t\tif (filter_value.length === 2) {\n\t\t\t\t\texists =\n\t\t\t\t\t\tfilter_value[0] === f_value[0] && filter_value[1] === f_value[1];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tlet value = filter_value[3];\n\t\t\t\tlet equal = frappe.utils.arrays_equal;\n\n\t\t\t\tif (\n\t\t\t\t\tequal(f_value.slice(0, 4), filter_value.slice(0, 4)) ||\n\t\t\t\t\t(Array.isArray(value) && equal(value, f_value[3]))\n\t\t\t\t) {\n\t\t\t\t\texists = true;\n\t\t\t\t}\n\t\t\t});\n\t\treturn exists;\n\t}\n\n\tget_filters() {\n\t\treturn this.filters\n\t\t\t.filter((f) => f.field)\n\t\t\t.map((f) => {\n\t\t\t\treturn f.get_value();\n\t\t\t});\n\t\t// {}: this.list.update_standard_filters(values);\n\t}\n\n\tupdate_filters() {\n\t\t// remove hidden filters and undefined filters\n\t\tconst filter_exists = (f) => ![undefined, null].includes(f.get_selected_value());\n\t\tthis.filters.map(f => !filter_exists(f) && f.remove());\n\t\tthis.filters = this.filters.filter(f => filter_exists(f) && f.field);\n\t\tthis.update_filter_button();\n\t\tthis.filters.length === 0 &&\n\t\t\tthis.toggle_empty_filters(true);\n\t}\n\n\tclear_filters() {\n\t\tthis.filters.map((f) => f.remove(true));\n\t\t// {}: Clear page filters, .date-range-picker (called list run())\n\t\tthis.filters = [];\n\t}\n\n\tget_filter(fieldname) {\n\t\treturn this.filters.filter((f) => {\n\t\t\treturn f.field && f.field.df.fieldname == fieldname;\n\t\t})[0];\n\t}\n\n\tget_filter_area_template() {\n\t\t/* eslint-disable indent */\n\t\treturn $(`\n\t\t\t<div class=\"filter-area\">\n\t\t\t\t<div class=\"filter-edit-area\">\n\t\t\t\t\t<div class=\"text-muted empty-filters text-center\">\n\t\t\t\t\t\t${__('No filters selected')}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<hr class=\"divider\"></hr>\n\t\t\t\t<div class=\"filter-action-buttons\">\n\t\t\t\t\t<button class=\"text-muted add-filter btn btn-xs\">\n\t\t\t\t\t\t+ ${__('Add a Filter')}\n\t\t\t\t\t</button>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<button class=\"btn btn-secondary btn-xs clear-filters\">\n\t\t\t\t\t\t\t${__('Clear Filters')}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t${this.filter_button ?\n\t\t\t\t\t\t\t`<button class=\"btn btn-primary btn-xs apply-filters\">\n\t\t\t\t\t\t\t\t${__('Apply Filters')}\n\t\t\t\t\t\t\t</button>`\n\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t);\n\t\t/* eslint-disable indent */\n\t}\n\n\tget_filters_as_object() {\n\t\tlet filters = this.get_filters().reduce((acc, filter) => {\n\t\t\treturn Object.assign(acc, {\n\t\t\t\t[filter[1]]: [filter[2], filter[3]],\n\t\t\t});\n\t\t}, {});\n\t\treturn filters;\n\t}\n\n\tadd_filters_to_filter_group(filters) {\n\t\tif (filters.length) {\n\t\t\tthis.toggle_empty_filters(false);\n\t\t\tfilters.forEach((filter) => {\n\t\t\t\tthis.add_filter(filter[0], filter[1], filter[2], filter[3]);\n\t\t\t});\n\t\t}\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0))\n\t\t\treturn Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(\n\t\t\tfilters\n\t\t);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n};\n","// <select> widget with all fields of a doctype as options\nfrappe.ui.FieldSelect = Class.extend({\n\t// opts parent, doctype, filter_fields, with_blank, select\n\tinit(opts) {\n\t\tvar me = this;\n\t\t$.extend(this, opts);\n\t\tthis.fields_by_name = {};\n\t\tthis.options = [];\n\t\tthis.$input = $('<input class=\"form-control\">')\n\t\t\t.appendTo(this.parent)\n\t\t\t.on(\"click\", function () { $(this).select(); });\n\t\tthis.input_class && this.$input.addClass(this.input_class);\n\t\tthis.select_input = this.$input.get(0);\n\t\tthis.awesomplete = new Awesomplete(this.select_input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tautoFirst: true,\n\t\t\tlist: me.options,\n\t\t\titem(item) {\n\t\t\t\treturn $(repl('<li class=\"filter-field-select\"><p>%(label)s</p></li>', item))\n\t\t\t\t\t.data(\"item.autocomplete\", item)\n\t\t\t\t\t.get(0);\n\t\t\t}\n\t\t});\n\t\tthis.$input.on(\"awesomplete-select\", function(e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.selected_doctype = item.doctype;\n\t\t\tme.selected_fieldname = item.fieldname;\n\t\t\tif(me.select) me.select(item.doctype, item.fieldname);\n\t\t});\n\t\tthis.$input.on(\"awesomplete-selectcomplete\", function(e) {\n\t\t\tvar o = e.originalEvent;\n\t\t\tvar value = o.text.value;\n\t\t\tvar item = me.awesomplete.get_item(value);\n\t\t\tme.$input.val(item.label);\n\t\t});\n\n\t\tif(this.filter_fields) {\n\t\t\tfor(var i in this.filter_fields)\n\t\t\t\tthis.add_field_option(this.filter_fields[i]);\n\t\t} else {\n\t\t\tthis.build_options();\n\t\t}\n\t\tthis.set_value(this.doctype, \"name\");\n\t},\n\tget_value() {\n\t\treturn this.selected_doctype ? this.selected_doctype + \".\" + this.selected_fieldname : null;\n\t},\n\tval(value) {\n\t\tif(value===undefined) {\n\t\t\treturn this.get_value();\n\t\t} else {\n\t\t\tthis.set_value(value);\n\t\t}\n\t},\n\tclear() {\n\t\tthis.selected_doctype = null;\n\t\tthis.selected_fieldname = null;\n\t\tthis.$input.val(\"\");\n\t},\n\tset_value(doctype, fieldname) {\n\t\tvar me = this;\n\t\tthis.clear();\n\t\tif(!doctype) return;\n\n\t\t// old style\n\t\tif(doctype.indexOf(\".\")!==-1) {\n\t\t\tvar parts = doctype.split(\".\");\n\t\t\tdoctype = parts[0];\n\t\t\tfieldname = parts[1];\n\t\t}\n\n\t\t$.each(this.options, function(i, v) {\n\t\t\tif(v.doctype===doctype && v.fieldname===fieldname) {\n\t\t\t\tme.selected_doctype = doctype;\n\t\t\t\tme.selected_fieldname = fieldname;\n\t\t\t\tme.$input.val(v.label);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t},\n\tbuild_options() {\n\t\tvar me = this;\n\t\tme.table_fields = [];\n\t\tvar std_filters = $.map(frappe.model.std_fields, function(d) {\n\t\t\tvar opts = {parent: me.doctype};\n\t\t\tif(d.fieldname==\"name\") opts.options = me.doctype;\n\t\t\treturn $.extend(copy_dict(d), opts);\n\t\t});\n\n\t\t// add parenttype column\n\t\tvar doctype_obj = locals['DocType'][me.doctype];\n\t\tif(doctype_obj && cint(doctype_obj.istable)) {\n\t\t\tstd_filters = std_filters.concat([{\n\t\t\t\tfieldname: 'parent',\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tlabel: 'Parent',\n\t\t\t\tparent: me.doctype,\n\t\t\t}]);\n\t\t}\n\n\t\t// blank\n\t\tif(this.with_blank) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel:\"\",\n\t\t\t\tvalue:\"\",\n\t\t\t});\n\t\t}\n\n\t\t// main table\n\t\tvar main_table_fields = std_filters.concat(frappe.meta.docfield_list[me.doctype]);\n\t\t$.each(frappe.utils.sort(main_table_fields, \"label\", \"string\"), function(i, df) {\n\t\t\tlet doctype = frappe.get_meta(me.doctype).istable && me.parent_doctype ?\n\t\t\t\tme.parent_doctype : me.doctype;\n\n\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\tme.add_field_option(df);\n\t\t});\n\n\t\t// child tables\n\t\t$.each(me.table_fields, function(i, table_df) {\n\t\t\tif(table_df.options) {\n\t\t\t\tlet child_table_fields = [].concat(frappe.meta.docfield_list[table_df.options]);\n\n\t\t\t\tif (table_df.fieldtype === \"Table MultiSelect\") {\n\t\t\t\t\tconst link_field = frappe.meta.get_docfields(table_df.options)\n\t\t\t\t\t\t.find(df => df.fieldtype === 'Link');\n\t\t\t\t\tchild_table_fields = link_field ? [link_field] : [];\n\t\t\t\t}\n\n\t\t\t\t$.each(frappe.utils.sort(child_table_fields, \"label\", \"string\"), function(i, df) {\n\t\t\t\t\tlet doctype = frappe.get_meta(me.doctype).istable && me.parent_doctype ?\n\t\t\t\t\t\tme.parent_doctype : me.doctype;\n\n\t\t\t\t\t// show fields where user has read access and if report hide flag is not set\n\t\t\t\t\tif (frappe.perm.has_perm(doctype, df.permlevel, \"read\"))\n\t\t\t\t\t\tme.add_field_option(df);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t},\n\n\tadd_field_option(df) {\n\t\tlet me = this;\n\n\t\tif (df.fieldname == 'docstatus' && !frappe.model.is_submittable(me.doctype))\n\t\t\treturn;\n\n\t\tif (frappe.model.table_fields.includes(df.fieldtype)) {\n\t\t\tme.table_fields.push(df);\n\t\t\treturn;\n\t\t}\n\n\t\tlet label = null;\n\t\tlet table = null;\n\n\t\tif(me.doctype && df.parent==me.doctype) {\n\t\t\tlabel = __(df.label);\n\t\t\ttable = me.doctype;\n\t\t} else {\n\t\t\tlabel = __(df.label) + ' (' + __(df.parent) + ')';\n\t\t\ttable = df.parent;\n\t\t}\n\n\t\tif(frappe.model.no_value_type.indexOf(df.fieldtype) == -1 &&\n\t\t\t!(me.fields_by_name[df.parent] && me.fields_by_name[df.parent][df.fieldname])) {\n\t\t\tthis.options.push({\n\t\t\t\tlabel: label,\n\t\t\t\tvalue: table + \".\" + df.fieldname,\n\t\t\t\tfieldname: df.fieldname,\n\t\t\t\tdoctype: df.parent\n\t\t\t});\n\t\t\tif(!me.fields_by_name[df.parent]) me.fields_by_name[df.parent] = {};\n\t\t\tme.fields_by_name[df.parent][df.fieldname] = df;\n\t\t}\n\t},\n});\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.Tags = class {\n\tconstructor({\n\t\tparent, placeholder, tagsList,\n\t\tonTagAdd,\n\t\tonTagRemove,\n\t\tonTagClick,\n\t\tonChange\n\t}) {\n\t\tthis.tagsList = tagsList || [];\n\t\tthis.onTagAdd = onTagAdd;\n\t\tthis.onTagRemove = onTagRemove;\n\t\tthis.onTagClick = onTagClick;\n\t\tthis.onChange = onChange;\n\n\t\tthis.setup(parent, placeholder);\n\t}\n\n\tsetup(parent, placeholder) {\n\t\tthis.$ul = parent;\n\t\tthis.$input = $(`<input class=\"tags-input form-control\"></input>`);\n\n\t\tthis.$inputWrapper = this.get_list_element(this.$input);\n\t\tthis.$placeholder = this.get_list_element($(`<span class=\"tags-placeholder text-muted\">${placeholder}</span>`));\n\t\tthis.$inputWrapper.appendTo(this.$ul);\n\t\tthis.$placeholder.appendTo(this.$ul);\n\n\t\tthis.deactivate();\n\t\tthis.bind();\n\t\tthis.boot();\n\t}\n\n\tbind() {\n\t\tconst me = this;\n\t\tconst select_tag = function() {\n\t\t\tconst tagValue = frappe.utils.xss_sanitise(me.$input.val());\n\t\t\tme.addTag(tagValue);\n\t\t\tme.$input.val('');\n\t\t};\n\n\t\tthis.$input.keypress((e) => {\n\t\t\tif (e.which == 13 || e.keyCode == 13) select_tag();\n\t\t});\n\t\tthis.$input.focusout(select_tag);\n\n\t\tthis.$input.on('blur', () => {\n\t\t\tthis.deactivate();\n\t\t});\n\n\t\tthis.$placeholder.on('click', () => {\n\t\t\tthis.activate();\n\t\t\tthis.$input.focus(); // focus only when clicked\n\t\t});\n\t}\n\n\tboot() {\n\t\tthis.addTags(this.tagsList);\n\t}\n\n\tactivate() {\n\t\tthis.$placeholder.hide();\n\t\tthis.$inputWrapper.show();\n\t}\n\n\tdeactivate() {\n\t\tthis.$inputWrapper.hide();\n\t\tthis.$placeholder.show();\n\t}\n\n\taddTag(label) {\n\t\tif (label && label!== '' && !this.tagsList.includes(label)) {\n\t\t\tlet $tag = this.get_tag(label);\n\t\t\tlet row = this.get_list_element($tag, 'form-tag-row');\n\t\t\trow.insertBefore(this.$inputWrapper);\n\t\t\tthis.tagsList.push(label);\n\t\t\tthis.onTagAdd && this.onTagAdd(label);\n\t\t}\n\t}\n\n\tremoveTag(label) {\n\t\tlabel = frappe.utils.xss_sanitise(label);\n\t\tif(this.tagsList.includes(label)) {\n\t\t\tthis.tagsList.splice(this.tagsList.indexOf(label), 1);\n\t\t\tthis.onTagRemove && this.onTagRemove(label);\n\t\t}\n\t}\n\n\taddTags(labels) {\n\t\tlabels.map(this.addTag.bind(this));\n\t}\n\n\tclearTags() {\n\t\tthis.$ul.find('.form-tag-row').remove();\n\t\tthis.tagsList = [];\n\t}\n\n\tget_list_element($element, class_name=\"\") {\n\t\tlet $li = $(`<li class=\"${class_name}\"></li>`);\n\t\t$element.appendTo($li);\n\t\treturn $li;\n\t}\n\n\tget_tag(label) {\n\t\tlet $tag = frappe.get_data_pill(label, label, (target, pill_wrapper) => {\n\t\t\tthis.removeTag(target);\n\t\t\tpill_wrapper.closest('.form-tag-row').remove();\n\t\t});\n\n\t\tif (this.onTagClick) {\n\t\t\t$tag.on('click', '.pill-label', () => {\n\t\t\t\tthis.onTagClick(label);\n\t\t\t});\n\t\t}\n\n\t\treturn $tag;\n\t}\n}\n","frappe.ui.TagEditor = Class.extend({\n\tinit: function(opts) {\n\t\t/* docs:\n\t\tArguments\n\n\t\t- parent\n\t\t- user_tags\n\t\t- doctype\n\t\t- docname\n\t\t*/\n\t\t$.extend(this, opts);\n\n\t\tthis.setup_tags();\n\n\t\tif (!this.user_tags) {\n\t\t\tthis.user_tags = \"\";\n\t\t}\n\t\tthis.initialized = true;\n\t\tthis.refresh(this.user_tags);\n\t},\n\tsetup_tags: function() {\n\t\tvar me = this;\n\n\t\t// hidden form, does not have parent\n\t\tif (!this.parent) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.wrapper = this.parent;\n\t\tif (!this.wrapper.length) return;\n\n\t\tthis.tags = new frappe.ui.Tags({\n\t\t\tparent: this.wrapper,\n\t\t\tplaceholder: __(\"Add a tag ...\"),\n\t\t\tonTagAdd: (tag) => {\n\t\t\t\tif(me.initialized && !me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags ? me.user_tags.split(\",\") : [];\n\t\t\t\t\t\t\tuser_tags.push(tag)\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tonTagRemove: (tag) => {\n\t\t\t\tif(!me.refreshing) {\n\t\t\t\t\treturn frappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.remove_tag\",\n\t\t\t\t\t\targs: me.get_args(tag),\n\t\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\t\tvar user_tags = me.user_tags.split(\",\");\n\t\t\t\t\t\t\tuser_tags.splice(user_tags.indexOf(tag), 1);\n\t\t\t\t\t\t\tme.user_tags = user_tags.join(\",\");\n\t\t\t\t\t\t\tme.on_change && me.on_change(me.user_tags);\n\t\t\t\t\t\t\tfrappe.tags.utils.fetch_tags();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\tthis.setup_awesomplete();\n\t\tthis.setup_complete = true;\n\t},\n\tsetup_awesomplete: function() {\n\t\tvar me = this;\n\t\tvar $input = this.wrapper.find(\"input.tags-input\");\n\t\tvar input = $input.get(0);\n\t\tthis.awesomplete = new Awesomplete(input, {\n\t\t\tminChars: 0,\n\t\t\tmaxItems: 99,\n\t\t\tlist: []\n\t\t});\n\t\t$input.on(\"awesomplete-open\", function(e){\n\t\t\t$input.attr('state', 'open');\n\t\t});\n\t\t$input.on(\"awesomplete-close\", function(e){\n\t\t\t$input.attr('state', 'closed');\n\t\t});\n\t\t$input.on(\"input\", function(e) {\n\t\t\tvar value = e.target.value;\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.get_tags\",\n\t\t\t\targs:{\n\t\t\t\t\tdoctype: me.frm.doctype,\n\t\t\t\t\ttxt: value.toLowerCase(),\n\t\t\t\t},\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tme.awesomplete.list = r.message;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t\t$input.on(\"focus\", function(e) {\n\t\t\tif($input.attr('state') != 'open') {\n\t\t\t\t$input.trigger(\"input\");\n\t\t\t}\n\t\t});\n\t},\n\tget_args: function(tag) {\n\t\treturn {\n\t\t\ttag: tag,\n\t\t\tdt: this.frm.doctype,\n\t\t\tdn: this.frm.docname,\n\t\t}\n\t},\n\trefresh: function(user_tags) {\n\t\tvar me = this;\n\t\tif (!this.initialized || !this.setup_complete || this.refreshing) return;\n\n\t\tme.refreshing = true;\n\t\ttry {\n\t\t\tme.tags.clearTags();\n\t\t\tif(user_tags) {\n\t\t\t\tme.user_tags = user_tags;\n\t\t\t\tme.tags.addTags(user_tags.split(','));\n\t\t\t}\n\t\t} catch(e) {\n\t\t\tme.refreshing = false;\n\t\t\t// wtf bug\n\t\t\tsetTimeout( function() { me.refresh(); }, 100);\n\t\t}\n\t\tme.refreshing = false;\n\n\t}\n})\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.ui.is_liked = function(doc) {\n\tvar liked = frappe.ui.get_liked_by(doc);\n\treturn liked.indexOf(frappe.session.user)===-1 ? false : true;\n}\n\nfrappe.ui.get_liked_by = function(doc) {\n\tvar liked = doc._liked_by;\n\tif(liked) {\n\t\tliked = JSON.parse(liked);\n\t}\n\n\treturn liked || [];\n}\n\nfrappe.ui.toggle_like = function($btn, doctype, name, callback) {\n\tvar add = $btn.hasClass(\"not-liked\") ? \"Yes\" : \"No\";\n\t// disable click\n\t$btn.css('pointer-events', 'none');\n\n\tfrappe.call({\n\t\tmethod: \"frappe.desk.like.toggle_like\",\n\t\tquiet: true,\n\t\targs: {\n\t\t\tdoctype: doctype,\n\t\t\tname: name,\n\t\t\tadd: add,\n\t\t},\n\t\tcallback: function(r) {\n\t\t\t// renable click\n\t\t\t$btn.css('pointer-events', 'auto');\n\n\t\t\tif (!r.exc) {\n\t\t\t\tfor (const like of document.querySelectorAll(\".like-action\")) {\n\t\t\t\t\tif (like.dataset.name === name && like.dataset.doctype === doctype) {\n\t\t\t\t\t\tlike.classList.toggle(\"not-liked\", add === \"No\");\n\t\t\t\t\t\tlike.classList.toggle(\"liked\", add === \"Yes\");\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// update in locals (form)\n\t\t\t\tvar doc = locals[doctype] && locals[doctype][name];\n\t\t\t\tif(doc) {\n\t\t\t\t\tvar liked_by = JSON.parse(doc._liked_by || \"[]\"),\n\t\t\t\t\t\tidx = liked_by.indexOf(frappe.session.user);\n\t\t\t\t\tif(add===\"Yes\") {\n\t\t\t\t\t\tif(idx===-1)\n\t\t\t\t\t\t\tliked_by.push(frappe.session.user);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif(idx!==-1) {\n\t\t\t\t\t\t\tliked_by = liked_by.slice(0,idx).concat(liked_by.slice(idx+1))\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdoc._liked_by = JSON.stringify(liked_by);\n\t\t\t\t}\n\n\t\t\t\tif(callback) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\nfrappe.ui.click_toggle_like = function() {\n\tvar $btn = $(this);\n\tvar $count = $btn.siblings(\".likes-count\");\n\tvar not_liked = $btn.hasClass(\"not-liked\");\n\tvar doctype = $btn.attr(\"data-doctype\");\n\tvar name = $btn.attr(\"data-name\");\n\n\tfrappe.ui.toggle_like($btn, doctype, name, function() {\n\t\tif (not_liked) {\n\t\t\t$count.text(cint($count.text()) + 1);\n\t\t} else {\n\t\t\t$count.text(cint($count.text()) - 1);\n\t\t}\n\t});\n\n\treturn false;\n}\n\nfrappe.ui.setup_like_popover = ($parent, selector, check_not_liked=true) => {\n\tif (frappe.dom.is_touchscreen()) {\n\t\treturn;\n\t}\n\n\t$parent.on('mouseover', selector, function() {\n\t\tconst target_element = $(this);\n\t\ttarget_element.popover({\n\t\t\tanimation: true,\n\t\t\tplacement: 'bottom',\n\t\t\ttrigger: 'manual',\n\t\t\ttemplate: `<div class=\"liked-by-popover popover\">\n\t\t\t\t<div class=\"arrow\"></div>\n\t\t\t\t<div class=\"popover-body popover-content\"></div>\n\t\t\t</div>`,\n\t\t\tcontent: () => {\n\t\t\t\tlet liked_by = target_element.parents(\".liked-by\").attr('data-liked-by');\n\t\t\t\tliked_by = liked_by ? decodeURI(liked_by) : '[]';\n\t\t\t\tliked_by = JSON.parse(liked_by);\n\n\t\t\t\tconst user = frappe.session.user;\n\t\t\t\t// hack\n\t\t\t\tif (check_not_liked) {\n\t\t\t\t\tif (target_element.parents(\".liked-by\").find(\".not-liked\").length) {\n\t\t\t\t\t\tif (liked_by.indexOf(user)!==-1) {\n\t\t\t\t\t\t\tliked_by.splice(liked_by.indexOf(user), 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (liked_by.indexOf(user)===-1) {\n\t\t\t\t\t\t\tliked_by.push(user);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!liked_by.length) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\n\t\t\t\tlet liked_by_list = $(`<ul class=\"list-unstyled\"></ul>`);\n\n\t\t\t\t// to show social profile of the user\n\t\t\t\tlet link_base = '/app/user-profile/';\n\n\t\t\t\tliked_by.forEach(user => {\n\t\t\t\t\t// append user list item\n\t\t\t\t\tliked_by_list.append(`\n\t\t\t\t\t\t<li data-user=${user}>${frappe.avatar(user, \"avatar-xs\")}\n\t\t\t\t\t\t\t<span>${frappe.user.full_name(user)}</span>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t`);\n\t\t\t\t});\n\n\t\t\t\tliked_by_list.children('li').click(ev => {\n\t\t\t\t\tlet user = ev.currentTarget.dataset.user;\n\t\t\t\t\ttarget_element.popover('hide');\n\t\t\t\t\tfrappe.set_route(link_base + user);\n\t\t\t\t});\n\n\t\t\t\treturn liked_by_list;\n\t\t\t},\n\t\t\thtml: true,\n\t\t\tcontainer: 'body'\n\t\t});\n\n\t\ttarget_element.popover('show');\n\n\t\t$(\".popover\").on(\"mouseleave\", () => {\n\t\t\ttarget_element.popover('hide');\n\t\t});\n\n\t\ttarget_element.on('mouseout', () => {\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (!$('.popover:hover').length) {\n\t\t\t\t\ttarget_element.popover('hide');\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t});\n\t});\n\n};\n","frappe.provide(\"frappe.views\");\n\nfrappe.views.BaseList = class BaseList {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t}\n\n\tshow() {\n\t\tfrappe.run_serially([\n\t\t\t() => this.init(),\n\t\t\t() => this.before_refresh(),\n\t\t\t() => this.refresh(),\n\t\t]);\n\t}\n\n\tinit() {\n\t\tif (this.init_promise) return this.init_promise;\n\n\t\tlet tasks = [\n\t\t\tthis.setup_defaults,\n\t\t\tthis.set_stats,\n\t\t\tthis.setup_fields,\n\t\t\t// make view\n\t\t\tthis.setup_page,\n\t\t\tthis.setup_side_bar,\n\t\t\tthis.setup_main_section,\n\t\t\tthis.setup_view,\n\t\t\tthis.setup_view_menu,\n\t\t].map((fn) => fn.bind(this));\n\n\t\tthis.init_promise = frappe.run_serially(tasks);\n\t\treturn this.init_promise;\n\t}\n\n\tsetup_defaults() {\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.page_title = this.page_title || frappe.router.doctype_layout || __(this.doctype);\n\t\tthis.meta = frappe.get_meta(this.doctype);\n\t\tthis.settings = frappe.listview_settings[this.doctype] || {};\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\n\t\tthis.start = 0;\n\t\tthis.page_length = 20;\n\t\tthis.data = [];\n\t\tthis.method = \"frappe.desk.reportview.get\";\n\n\t\tthis.can_create = frappe.model.can_create(this.doctype);\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\n\t\tthis.fields = [];\n\t\tthis.filters = [];\n\t\tthis.sort_by = this.meta.sort_field || \"modified\";\n\t\tthis.sort_order = this.meta.sort_order || \"desc\";\n\n\t\t// Setup buttons\n\t\tthis.primary_action = null;\n\t\tthis.secondary_action = null;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Refresh\"),\n\t\t\t\taction: () => this.refresh(),\n\t\t\t\tclass: \"visible-xs\",\n\t\t\t},\n\t\t];\n\t}\n\n\tget_list_view_settings() {\n\t\treturn frappe\n\t\t\t.call(\"frappe.desk.listview.get_list_settings\", {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((doc) => (this.list_view_settings = doc.message || {}));\n\t}\n\n\tsetup_fields() {\n\t\tthis.set_fields();\n\t\tthis.build_fields();\n\t}\n\n\tset_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.meta.title_field\n\t\t);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\t}\n\n\tget_fields_in_list_view() {\n\t\treturn this.meta.fields.filter((df) => {\n\t\t\treturn (\n\t\t\t\t(frappe.model.is_value_type(df.fieldtype) &&\n\t\t\t\t\t(df.in_list_view &&\n\t\t\t\t\t\tfrappe.perm.has_perm(\n\t\t\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\t\tdf.permlevel,\n\t\t\t\t\t\t\t\"read\"\n\t\t\t\t\t\t))) ||\n\t\t\t\t(df.fieldtype === \"Currency\" &&\n\t\t\t\t\tdf.options &&\n\t\t\t\t\t!df.options.includes(\":\")) ||\n\t\t\t\tdf.fieldname === \"status\"\n\t\t\t);\n\t\t});\n\t}\n\n\tbuild_fields() {\n\t\t// fill in missing doctype\n\t\tthis.fields = this.fields.map((f) => {\n\t\t\tif (typeof f === \"string\") {\n\t\t\t\tf = [f, this.doctype];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t\t// remove null or undefined values\n\t\tthis.fields = this.fields.filter(Boolean);\n\t\t//de-duplicate\n\t\tthis.fields = this.fields.uniqBy((f) => f[0] + f[1]);\n\t}\n\n\t_add_field(fieldname, doctype) {\n\t\tif (!fieldname) return;\n\n\t\tif (!doctype) doctype = this.doctype;\n\n\t\tif (typeof fieldname === \"object\") {\n\t\t\t// df is passed\n\t\t\tconst df = fieldname;\n\t\t\tfieldname = df.fieldname;\n\t\t\tdoctype = df.parent || doctype;\n\t\t}\n\n\t\tif (!this.fields) this.fields = [];\n\t\tconst is_valid_field =\n\t\t\tfrappe.model.std_fields_list.includes(fieldname) ||\n\t\t\tfrappe.meta.has_field(doctype, fieldname) ||\n\t\t\tfieldname === \"_seen\";\n\n\t\tif (!is_valid_field) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.fields.push([fieldname, doctype]);\n\t}\n\n\tset_stats() {\n\t\tthis.stats = [\"_user_tags\"];\n\t\t// add workflow field (as priority)\n\t\tthis.workflow_state_fieldname = frappe.workflow.get_state_fieldname(\n\t\t\tthis.doctype\n\t\t);\n\t\tif (this.workflow_state_fieldname) {\n\t\t\tif (!frappe.workflow.workflows[this.doctype][\"override_status\"]) {\n\t\t\t\tthis._add_field(this.workflow_state_fieldname);\n\t\t\t}\n\t\t\tthis.stats.push(this.workflow_state_fieldname);\n\t\t}\n\t}\n\n\tsetup_page() {\n\t\tthis.page = this.parent.page;\n\t\tthis.$page = $(this.parent);\n\t\t!this.hide_card_layout && this.page.main.addClass('frappe-card');\n\t\tthis.page.page_form.removeClass(\"row\").addClass(\"flex\");\n\t\tthis.hide_page_form && this.page.page_form.hide();\n\t\tthis.hide_sidebar && this.$page.addClass('no-list-sidebar');\n\t\tthis.setup_page_head();\n\t}\n\n\tsetup_page_head() {\n\t\tthis.set_title();\n\t\tthis.set_menu_items();\n\t\tthis.set_breadcrumbs();\n\t}\n\n\tset_title() {\n\t\tthis.page.set_title(this.page_title);\n\t}\n\n\tsetup_view_menu() {\n\t\t// TODO: add all icons\n\t\tconst icon_map = {\n\t\t\t'Image': 'image-view',\n\t\t\t'List': 'list',\n\t\t\t'Report': 'small-file',\n\t\t\t'Calendar': 'calendar',\n\t\t\t'Gantt': 'gantt',\n\t\t\t'Kanban': 'kanban',\n\t\t\t'Dashboard': 'dashboard',\n\t\t\t'Map': 'map',\n\t\t};\n\n\t\tif (frappe.boot.desk_settings.view_switcher) {\n\t\t\t/* @preserve\n\t\t\tfor translation, don't remove\n\t\t\t__(\"List View\") __(\"Report View\") __(\"Dashboard View\") __(\"Gantt View\"),\n\t\t\t__(\"Kanban View\") __(\"Calendar View\") __(\"Image View\") __(\"Inbox View\"),\n\t\t\t__(\"Tree View\") __(\"Map View\") */\n\t\t\tthis.views_menu = this.page.add_custom_button_group(__('{0} View', [this.view_name]),\n\t\t\t\ticon_map[this.view_name] || 'list');\n\t\t\tthis.views_list = new frappe.views.ListViewSelect({\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tparent: this.views_menu,\n\t\t\t\tpage: this.page,\n\t\t\t\tlist_view: this,\n\t\t\t\tsidebar: this.list_sidebar,\n\t\t\t\ticon_map: icon_map\n\t\t\t});\n\t\t}\n\t}\n\n\tset_default_secondary_action() {\n\t\tif (this.secondary_action) {\n\t\t\tconst $secondary_action = this.page.set_secondary_action(\n\t\t\t\tthis.secondary_action.label,\n\t\t\t\tthis.secondary_action.action,\n\t\t\t\tthis.secondary_action.icon\n\t\t\t);\n\t\t\tif (!this.secondary_action.icon) {\n\t\t\t\t$secondary_action.addClass(\"hidden-xs\");\n\t\t\t} else if (!this.secondary_action.label) {\n\t\t\t\t$secondary_action.addClass(\"visible-xs\");\n\t\t\t}\n\t\t} else {\n\t\t\tthis.refresh_button = this.page.add_action_icon(\"refresh\", () => {\n\t\t\t\tthis.refresh();\n\t\t\t});\n\t\t}\n\t}\n\n\tset_menu_items() {\n\t\tthis.set_default_secondary_action();\n\n\t\tthis.menu_items && this.menu_items.map((item) => {\n\t\t\tif (item.condition && item.condition() === false) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst $item = this.page.add_menu_item(\n\t\t\t\titem.label,\n\t\t\t\titem.action,\n\t\t\t\titem.standard,\n\t\t\t\titem.shortcut\n\t\t\t);\n\t\t\tif (item.class) {\n\t\t\t\t$item[0] && $item.addClass(item.class);\n\t\t\t}\n\t\t});\n\t}\n\n\tset_breadcrumbs() {\n\t\tfrappe.breadcrumbs.add(this.meta.module, this.doctype);\n\t}\n\n\tsetup_side_bar() {\n\t\tif (this.hide_sidebar || !frappe.boot.desk_settings.list_sidebar) return;\n\t\tthis.list_sidebar = new frappe.views.ListSidebar({\n\t\t\tdoctype: this.doctype,\n\t\t\tstats: this.stats,\n\t\t\tparent: this.$page.find(\".layout-side-section\"),\n\t\t\t// set_filter: this.set_filter.bind(this),\n\t\t\tpage: this.page,\n\t\t\tlist_view: this,\n\t\t});\n\t}\n\n\ttoggle_side_bar(show) {\n\t\tlet show_sidebar = show || JSON.parse(localStorage.show_sidebar || \"true\");\n\t\tshow_sidebar = !show_sidebar;\n\t\tlocalStorage.show_sidebar = show_sidebar;\n\t\tthis.show_or_hide_sidebar();\n\t\t$(document.body).trigger(\"toggleListSidebar\");\n\t}\n\n\tshow_or_hide_sidebar() {\n\t\tlet show_sidebar = JSON.parse(localStorage.show_sidebar || \"true\");\n\t\t$(document.body).toggleClass(\"no-list-sidebar\", !show_sidebar);\n\t}\n\n\tsetup_main_section() {\n\t\treturn frappe.run_serially(\n\t\t\t[\n\t\t\t\tthis.setup_list_wrapper,\n\t\t\t\tthis.show_or_hide_sidebar,\n\t\t\t\tthis.setup_filter_area,\n\t\t\t\tthis.setup_sort_selector,\n\t\t\t\tthis.setup_result_area,\n\t\t\t\tthis.setup_no_result_area,\n\t\t\t\tthis.setup_freeze_area,\n\t\t\t\tthis.setup_paging_area,\n\t\t\t].map((fn) => fn.bind(this))\n\t\t);\n\t}\n\n\tsetup_list_wrapper() {\n\t\tthis.$frappe_list = $('<div class=\"frappe-list\">').appendTo(\n\t\t\tthis.page.main\n\t\t);\n\t}\n\n\tsetup_filter_area() {\n\t\tif (this.hide_filters) return;\n\t\tthis.filter_area = new FilterArea(this);\n\n\t\tif (this.filters && this.filters.length > 0) {\n\t\t\treturn this.filter_area.set(this.filters);\n\t\t}\n\t}\n\n\tsetup_sort_selector() {\n\t\tif (this.hide_sort_selector) return;\n\t\tthis.sort_selector = new frappe.ui.SortSelector({\n\t\t\tparent: this.$filter_section,\n\t\t\tdoctype: this.doctype,\n\t\t\targs: {\n\t\t\t\tsort_by: this.sort_by,\n\t\t\t\tsort_order: this.sort_order,\n\t\t\t},\n\t\t\tonchange: this.on_sort_change.bind(this),\n\t\t});\n\t}\n\n\ton_sort_change() {\n\t\tthis.refresh();\n\t}\n\n\tsetup_result_area() {\n\t\tthis.$result = $(`<div class=\"result\">`);\n\t\tthis.$frappe_list.append(this.$result);\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $('<div class=\"freeze\"></div>').hide();\n\t\tthis.$frappe_list.append(this.$freeze);\n\t}\n\n\tget_no_result_message() {\n\t\treturn __(\"Nothing to show\");\n\t}\n\n\tsetup_paging_area() {\n\t\tconst paging_values = [20, 100, 500];\n\t\tthis.$paging_area = $(\n\t\t\t`<div class=\"list-paging-area level\">\n\t\t\t\t<div class=\"level-left\">\n\t\t\t\t\t<div class=\"btn-group\">\n\t\t\t\t\t\t${paging_values.map((value) => `\n\t\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-default btn-sm btn-paging\"\n\t\t\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t\t\t${value}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t`).join(\"\")}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t<button class=\"btn btn-default btn-more btn-sm\">\n\t\t\t\t\t\t${__(\"Load More\")}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$frappe_list.append(this.$paging_area);\n\n\t\t// set default paging btn active\n\t\tthis.$paging_area\n\t\t\t.find(`.btn-paging[data-value=\"${this.page_length}\"]`)\n\t\t\t.addClass(\"btn-info\");\n\n\t\tthis.$paging_area.on(\"click\", \".btn-paging, .btn-more\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\n\t\t\tif ($this.is(\".btn-paging\")) {\n\t\t\t\t// set active button\n\t\t\t\tthis.$paging_area.find(\".btn-paging\").removeClass(\"btn-info\");\n\t\t\t\t$this.addClass(\"btn-info\");\n\n\t\t\t\tthis.start = 0;\n\t\t\t\tthis.page_length = this.selected_page_count = $this.data().value;\n\t\t\t} else if ($this.is(\".btn-more\")) {\n\t\t\t\tthis.start = this.start + this.page_length;\n\t\t\t\tthis.page_length = this.selected_page_count || 20;\n\t\t\t}\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\t// convert [fieldname, Doctype] => tabDoctype.fieldname\n\t\treturn this.fields.map((f) =>\n\t\t\tfrappe.model.get_full_column_name(f[0], f[1])\n\t\t);\n\t}\n\n\tget_group_by() {\n\t\tlet name_field = this.fields && this.fields.find(f => f[0] == 'name');\n\t\tif (name_field) {\n\t\t\treturn frappe.model.get_full_column_name(name_field[0], name_field[1]);\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetup_view() {\n\t\t// for child classes\n\t}\n\n\tget_filter_value(fieldname) {\n\t\tconst filter = this.get_filters_for_args().filter(f => f[1] == fieldname)[0];\n\t\tif (!filter) return;\n\t\treturn {\n\t\t\t'like': filter[3].replace(/^%?|%$/g, ''),\n\t\t\t'not set': null\n\t\t}[filter[2]] || filter[3];\n\t}\n\n\tget_filters_for_args() {\n\t\t// filters might have a fifth param called hidden,\n\t\t// we don't want to pass that server side\n\t\treturn this.filter_area\n\t\t\t? this.filter_area.get().map((filter) => filter.slice(0, 4))\n\t\t\t: [];\n\t}\n\n\tget_args() {\n\t\treturn {\n\t\t\tdoctype: this.doctype,\n\t\t\tfields: this.get_fields(),\n\t\t\tfilters: this.get_filters_for_args(),\n\t\t\torder_by: this.sort_selector && this.sort_selector.get_sql_string(),\n\t\t\tstart: this.start,\n\t\t\tpage_length: this.page_length,\n\t\t\tview: this.view,\n\t\t\tgroup_by: this.get_group_by()\n\t\t};\n\t}\n\n\tget_call_args() {\n\t\tconst args = this.get_args();\n\t\treturn {\n\t\t\tmethod: this.method,\n\t\t\targs: args,\n\t\t\tfreeze: this.freeze_on_refresh || false,\n\t\t\tfreeze_message: this.freeze_message || __(\"Loading\") + \"...\",\n\t\t};\n\t}\n\n\tbefore_refresh() {\n\t\t// modify args here just before making the request\n\t\t// see list_view.js\n\t}\n\n\trefresh() {\n\t\tthis.freeze(true);\n\t\t// fetch data from server\n\t\treturn frappe.call(this.get_call_args()).then((r) => {\n\t\t\t// render\n\t\t\tthis.prepare_data(r);\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.before_render();\n\t\t\tthis.render();\n\t\t\tthis.after_render();\n\t\t\tthis.freeze(false);\n\t\t\tthis.reset_defaults();\n\t\t\tif (this.settings.refresh) {\n\t\t\t\tthis.settings.refresh(this);\n\t\t\t}\n\t\t});\n\t}\n\n\tprepare_data(r) {\n\t\tlet data = r.message || {};\n\t\tdata = !Array.isArray(data)\n\t\t\t? frappe.utils.dict(data.keys, data.values)\n\t\t\t: data;\n\n\t\tif (this.start === 0) {\n\t\t\tthis.data = data;\n\t\t} else {\n\t\t\tthis.data = this.data.concat(data);\n\t\t}\n\n\t\tthis.data = this.data.uniqBy((d) => d.name);\n\t}\n\n\treset_defaults() {\n\t\tthis.page_length = this.page_length + this.start;\n\t\tthis.start = 0;\n\t}\n\n\tfreeze() {\n\t\t// show a freeze message while data is loading\n\t}\n\n\tbefore_render() {}\n\n\tafter_render() {}\n\n\trender() {\n\t\t// for child classes\n\t}\n\n\ton_filter_change() {\n\t\t// fired when filters are added or removed\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t\tthis.$paging_area.toggle(this.data.length > 0);\n\t\tthis.$no_result.toggle(this.data.length == 0);\n\n\t\tconst show_more = this.start + this.page_length <= this.data.length;\n\t\tthis.$paging_area.find(\".btn-more\").toggle(show_more);\n\t}\n\n\tcall_for_selected_items(method, args = {}) {\n\t\targs.names = this.get_checked_items(true);\n\n\t\tfrappe.call({\n\t\t\tmethod: method,\n\t\t\targs: args,\n\t\t\tfreeze: true,\n\t\t\tcallback: (r) => {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n};\n\nclass FilterArea {\n\tconstructor(list_view) {\n\t\tthis.list_view = list_view;\n\t\tthis.list_view.page.page_form.append(`<div class=\"standard-filter-section flex\"></div>`);\n\n\t\tconst filter_area = this.list_view.hide_page_form\n\t\t\t? this.list_view.page.custom_actions\n\t\t\t: this.list_view.page.page_form;\n\n\t\tthis.list_view.$filter_section = $('<div class=\"filter-section flex\">').appendTo(\n\t\t\tfilter_area\n\t\t);\n\n\t\tthis.$filter_list_wrapper = this.list_view.$filter_section;\n\t\tthis.trigger_refresh = true;\n\t\tthis.setup();\n\t}\n\n\tsetup() {\n\t\tif (!this.list_view.hide_page_form) this.make_standard_filters();\n\t\tthis.make_filter_list();\n\t}\n\n\tget() {\n\t\tlet filters = this.filter_list.get_filters();\n\t\tlet standard_filters = this.get_standard_filters();\n\n\t\treturn filters.concat(standard_filters).uniqBy(JSON.stringify);\n\t}\n\n\tset(filters) {\n\t\t// use to method to set filters without triggering refresh\n\t\tthis.trigger_refresh = false;\n\t\treturn this.add(filters, false).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t\tthis.filter_list.update_filter_button();\n\t\t});\n\t}\n\n\tadd(filters, refresh = true) {\n\t\tif (!filters || (Array.isArray(filters) && filters.length === 0))\n\t\t\treturn Promise.resolve();\n\n\t\tif (typeof filters[0] === \"string\") {\n\t\t\t// passed in the format of doctype, field, condition, value\n\t\t\tconst filter = Array.from(arguments);\n\t\t\tfilters = [filter];\n\t\t}\n\n\t\tfilters = filters.filter((f) => {\n\t\t\treturn !this.exists(f);\n\t\t});\n\n\t\tconst { non_standard_filters, promise } = this.set_standard_filter(\n\t\t\tfilters\n\t\t);\n\n\t\treturn promise\n\t\t\t.then(() => {\n\t\t\t\treturn (\n\t\t\t\t\tnon_standard_filters.length > 0 &&\n\t\t\t\t\tthis.filter_list.add_filters(non_standard_filters)\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\trefresh && this.list_view.refresh();\n\t\t\t});\n\t}\n\n\trefresh_list_view() {\n\t\tif (this.trigger_refresh) {\n\t\t\tthis.list_view.start = 0;\n\t\t\tthis.list_view.refresh();\n\t\t\tthis.list_view.on_filter_change();\n\t\t}\n\t}\n\n\texists(f) {\n\t\tlet exists = false;\n\t\t// check in standard filters\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tif (f[2] === \"=\" && f[1] in fields_dict) {\n\t\t\tconst value = fields_dict[f[1]].get_value();\n\t\t\tif (value) {\n\t\t\t\texists = true;\n\t\t\t}\n\t\t}\n\n\t\t// check in filter area\n\t\tif (!exists) {\n\t\t\texists = this.filter_list.filter_exists(f);\n\t\t}\n\n\t\treturn exists;\n\t}\n\n\tset_standard_filter(filters) {\n\t\tif (filters.length === 0) {\n\t\t\treturn {\n\t\t\t\tnon_standard_filters: [],\n\t\t\t\tpromise: Promise.resolve(),\n\t\t\t};\n\t\t}\n\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tlet out = filters.reduce((out, filter) => {\n\t\t\t// eslint-disable-next-line\n\t\t\tconst [dt, fieldname, condition, value] = filter;\n\t\t\tout.promise = out.promise || Promise.resolve();\n\t\t\tout.non_standard_filters = out.non_standard_filters || [];\n\n\t\t\tif (\n\t\t\t\tfields_dict[fieldname] &&\n\t\t\t\t(condition === \"=\" || condition === \"like\")\n\t\t\t) {\n\t\t\t\t// standard filter\n\t\t\t\tout.promise = out.promise.then(() =>\n\t\t\t\t\tfields_dict[fieldname].set_value(value)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// filter out non standard filters\n\t\t\t\tout.non_standard_filters.push(filter);\n\t\t\t}\n\t\t\treturn out;\n\t\t}, {});\n\n\t\treturn out;\n\t}\n\n\tremove_filters(filters) {\n\t\tfilters.map(f => {\n\t\t\tthis.remove(f[1]);\n\t\t});\n\t}\n\n\tremove(fieldname) {\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\n\t\tif (fieldname in fields_dict) {\n\t\t\tfields_dict[fieldname].set_value(\"\");\n\t\t}\n\n\t\tlet filter = this.filter_list.get_filter(fieldname);\n\t\tif (filter) filter.remove();\n\t\tthis.filter_list.apply();\n\t\treturn Promise.resolve();\n\t}\n\n\tclear(refresh = true) {\n\t\tif (!refresh) {\n\t\t\tthis.trigger_refresh = false;\n\t\t}\n\n\t\tthis.filter_list.clear_filters();\n\n\t\tconst promises = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tconst field = this.list_view.page.fields_dict[key];\n\t\t\tpromises.push(() => field.set_value(\"\"));\n\t\t}\n\t\treturn frappe.run_serially(promises).then(() => {\n\t\t\tthis.trigger_refresh = true;\n\t\t});\n\t}\n\n\tmake_standard_filters() {\n\t\tthis.standard_filters_wrapper = this.list_view.page.page_form.find('.standard-filter-section');\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: \"Name\",\n\t\t\t\tcondition: \"like\",\n\t\t\t\tfieldname: \"name\",\n\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t},\n\t\t];\n\n\t\tif (this.list_view.custom_filter_configs) {\n\t\t\tthis.list_view.custom_filter_configs.forEach((config) => {\n\t\t\t\tconfig.onchange = () => this.refresh_list_view();\n\t\t\t});\n\n\t\t\tfields = fields.concat(this.list_view.custom_filter_configs);\n\t\t}\n\n\t\tconst doctype_fields = this.list_view.meta.fields;\n\t\tconst title_field = this.list_view.meta.title_field;\n\n\t\tfields = fields.concat(\n\t\t\tdoctype_fields\n\t\t\t\t.filter(\n\t\t\t\t\t(df) =>\n\t\t\t\t\t\tdf.fieldname === title_field ||\n\t\t\t\t\t\t(df.in_standard_filter &&\n\t\t\t\t\t\t\tfrappe.model.is_value_type(df.fieldtype))\n\t\t\t\t)\n\t\t\t\t.map((df) => {\n\t\t\t\t\tlet options = df.options;\n\t\t\t\t\tlet condition = \"=\";\n\t\t\t\t\tlet fieldtype = df.fieldtype;\n\t\t\t\t\tif (\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\"Text\",\n\t\t\t\t\t\t\t\"Small Text\",\n\t\t\t\t\t\t\t\"Text Editor\",\n\t\t\t\t\t\t\t\"HTML Editor\",\n\t\t\t\t\t\t\t\"Data\",\n\t\t\t\t\t\t\t\"Code\",\n\t\t\t\t\t\t\t\"Read Only\",\n\t\t\t\t\t\t].includes(fieldtype)\n\t\t\t\t\t) {\n\t\t\t\t\t\tfieldtype = \"Data\";\n\t\t\t\t\t\tcondition = \"like\";\n\t\t\t\t\t}\n\t\t\t\t\tif (df.fieldtype == \"Select\" && df.options) {\n\t\t\t\t\t\toptions = df.options.split(\"\\n\");\n\t\t\t\t\t\tif (options.length > 0 && options[0] != \"\") {\n\t\t\t\t\t\t\toptions.unshift(\"\");\n\t\t\t\t\t\t\toptions = options.join(\"\\n\");\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tlet default_value =\n\t\t\t\t\t\tfieldtype === \"Link\"\n\t\t\t\t\t\t\t? frappe.defaults.get_user_default(options)\n\t\t\t\t\t\t\t: null;\n\t\t\t\t\tif ([\"__default\", \"__global\"].includes(default_value)) {\n\t\t\t\t\t\tdefault_value = null;\n\t\t\t\t\t}\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfieldtype: fieldtype,\n\t\t\t\t\t\tlabel: __(df.label),\n\t\t\t\t\t\toptions: options,\n\t\t\t\t\t\tfieldname: df.fieldname,\n\t\t\t\t\t\tcondition: condition,\n\t\t\t\t\t\tdefault: default_value,\n\t\t\t\t\t\tonchange: () => this.refresh_list_view(),\n\t\t\t\t\t\tignore_link_validation: fieldtype === \"Dynamic Link\",\n\t\t\t\t\t\tis_filter: 1,\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t);\n\n\t\tfields.map(df => {\n\t\t\tthis.list_view.page.add_field(df, this.standard_filters_wrapper);\n\t\t});\n\t}\n\n\tget_standard_filters() {\n\t\tconst filters = [];\n\t\tconst fields_dict = this.list_view.page.fields_dict;\n\t\tfor (let key in fields_dict) {\n\t\t\tlet field = fields_dict[key];\n\t\t\tlet value = field.get_value();\n\t\t\tif (value) {\n\t\t\t\tif (field.df.condition === \"like\" && !value.includes(\"%\")) {\n\t\t\t\t\tvalue = \"%\" + value + \"%\";\n\t\t\t\t}\n\t\t\t\tfilters.push([\n\t\t\t\t\tthis.list_view.doctype,\n\t\t\t\t\tfield.df.fieldname,\n\t\t\t\t\tfield.df.condition || \"=\",\n\t\t\t\t\tvalue,\n\t\t\t\t]);\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tmake_filter_list() {\n\t\t$(`<div class=\"filter-selector\">\n\t\t\t<div class=\"btn-group\">\n\t\t\t\t<button class=\"btn btn-default btn-sm filter-button\">\n\t\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t\t${frappe.utils.icon(\"filter\")}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span class=\"button-label hidden-xs\">\n\t\t\t\t\t${__(\"Filter\")}\n\t\t\t\t\t<span>\n\t\t\t\t</button>\n\t\t\t\t<button class=\"btn btn-default btn-sm filter-x-button\" title=\"${__(\"Clear all filters\")}\">\n\t\t\t\t\t<span class=\"filter-icon\">\n\t\t\t\t\t\t${frappe.utils.icon(\"filter-x\")}\n\t\t\t\t\t</span>\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>`).appendTo(this.$filter_list_wrapper);\n\n\t\tthis.filter_button = this.$filter_list_wrapper.find(\".filter-button\");\n\t\tthis.filter_x_button = this.$filter_list_wrapper.find(\".filter-x-button\");\n\t\tthis.filter_list = new frappe.ui.FilterGroup({\n\t\t\tbase_list: this.list_view,\n\t\t\tparent: this.$filter_list_wrapper,\n\t\t\tdoctype: this.list_view.doctype,\n\t\t\tfilter_button: this.filter_button,\n\t\t\tfilter_x_button: this.filter_x_button,\n\t\t\tdefault_filters: [],\n\t\t\ton_change: () => this.refresh_list_view(),\n\t\t});\n\t}\n\n\tis_being_edited() {\n\t\t// returns true if user is currently editing filters\n\t\treturn (\n\t\t\tthis.filter_list &&\n\t\t\tthis.filter_list.wrapper &&\n\t\t\tthis.filter_list.wrapper.find(\".filter-box:visible\").length > 0\n\t\t);\n\t}\n}\n\n// utility function to validate view modes\nfrappe.views.view_modes = [\n\t\"List\",\n\t\"Report\",\n\t\"Dashboard\",\n\t\"Gantt\",\n\t\"Kanban\",\n\t\"Calendar\",\n\t\"Image\",\n\t\"Inbox\",\n\t\"Tree\",\n\t\"Map\",\n];\nfrappe.views.is_valid = (view_mode) =>\n\tfrappe.views.view_modes.includes(view_mode);\n","export default class BulkOperations {\n\tconstructor({ doctype }) {\n\t\tif (!doctype) frappe.throw(__('Doctype required'));\n\t\tthis.doctype = doctype;\n\t}\n\n\tprint (docs) {\n\t\tconst print_settings = frappe.model.get_doc(':Print Settings', 'Print Settings');\n\t\tconst allow_print_for_draft = cint(print_settings.allow_print_for_draft);\n\t\tconst is_submittable = frappe.model.is_submittable(this.doctype);\n\t\tconst allow_print_for_cancelled = cint(print_settings.allow_print_for_cancelled);\n\n\t\tconst valid_docs = docs.filter(doc => {\n\t\t\treturn !is_submittable || doc.docstatus === 1 ||\n\t\t\t\t(allow_print_for_cancelled && doc.docstatus == 2) ||\n\t\t\t\t(allow_print_for_draft && doc.docstatus == 0) ||\n\t\t\t\tfrappe.user.has_role('Administrator');\n\t\t}).map(doc => doc.name);\n\n\t\tconst invalid_docs = docs.filter(doc => !valid_docs.includes(doc.name));\n\n\t\tif (invalid_docs.length > 0) {\n\t\t\tfrappe.msgprint(__('You selected Draft or Cancelled documents'));\n\t\t\treturn;\n\t\t}\n\n\t\tif (valid_docs.length === 0) {\n\t\t\tfrappe.msgprint(__('Select atleast 1 record for printing'));\n\t\t\treturn;\n\t\t}\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Print Documents'),\n\t\t\tfields: [{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Letter Head'),\n\t\t\t\tfieldname: 'letter_sel',\n\t\t\t\tdefault: __('No Letterhead'),\n\t\t\t\toptions: this.get_letterhead_options()\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Print Format'),\n\t\t\t\tfieldname: 'print_sel',\n\t\t\t\toptions: frappe.meta.get_print_formats(this.doctype)\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Select',\n\t\t\t\tlabel: __('Page Size'),\n\t\t\t\tfieldname: 'page_size',\n\t\t\t\toptions: frappe.meta.get_print_sizes(),\n\t\t\t\tdefault: print_settings.pdf_page_size\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Float',\n\t\t\t\tlabel: __('Page Height (in mm)'),\n\t\t\t\tfieldname: 'page_height',\n\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\tdefault: print_settings.pdf_page_height\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: 'Float',\n\t\t\t\tlabel: __('Page Width (in mm)'),\n\t\t\t\tfieldname: 'page_width',\n\t\t\t\tdepends_on: 'eval:doc.page_size == \"Custom\"',\n\t\t\t\tdefault: print_settings.pdf_page_width\n\t\t\t}]\n\t\t});\n\n\t\tdialog.set_primary_action(__('Print'), args => {\n\t\t\tif (!args) return;\n\t\t\tconst default_print_format = frappe.get_meta(this.doctype).default_print_format;\n\t\t\tconst with_letterhead = args.letter_sel == __(\"No Letterhead\") ? 0 : 1;\n\t\t\tconst print_format = args.print_sel ? args.print_sel : default_print_format;\n\t\t\tconst json_string = JSON.stringify(valid_docs);\n\t\t\tconst letterhead = args.letter_sel;\n\n\t\t\tlet pdf_options;\n\t\t\tif (args.page_size === \"Custom\") {\n\t\t\t\tif (args.page_height === 0 || args.page_width === 0) {\n\t\t\t\t\tfrappe.throw(__('Page height and width cannot be zero'));\n\t\t\t\t}\n\t\t\t\tpdf_options = JSON.stringify({ \"page-height\": args.page_height, \"page-width\": args.page_width });\n\t\t\t} else {\n\t\t\t\tpdf_options = JSON.stringify({ \"page-size\": args.page_size });\n\t\t\t}\n\n\t\t\tconst w = window.open(\n\t\t\t\t'/api/method/frappe.utils.print_format.download_multi_pdf?' +\n\t\t\t\t'doctype=' + encodeURIComponent(this.doctype) +\n\t\t\t\t'&name=' + encodeURIComponent(json_string) +\n\t\t\t\t'&format=' + encodeURIComponent(print_format) +\n\t\t\t\t'&no_letterhead=' + (with_letterhead ? '0' : '1') +\n\t\t\t\t'&letterhead=' + encodeURIComponent(letterhead) +\n\t\t\t\t'&options=' + encodeURIComponent(pdf_options)\n\t\t\t);\n\n\t\t\tif (!w) {\n\t\t\t\tfrappe.msgprint(__('Please enable pop-ups'));\n\t\t\t\treturn;\n\t\t\t}\n\t\t});\n\n\t\tdialog.show();\n\t}\n\n\tget_letterhead_options () {\n\t\tconst letterhead_options = [__(\"No Letterhead\")];\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.get_list\",\n\t\t\targs: {\n\t\t\t\tdoctype: 'Letter Head',\n\t\t\t\tfields: ['name', 'is_default'],\n\t\t\t\tlimit_page_length: 0\n\t\t\t},\n\t\t\tasync: false,\n\t\t\tcallback (r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tr.message.forEach(letterhead => {\n\t\t\t\t\t\tletterhead_options.push(letterhead.name);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn letterhead_options;\n\t}\n\n\tdelete (docnames, done = null) {\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: 'frappe.desk.reportview.delete_items',\n\t\t\t\tfreeze: true,\n\t\t\t\tfreeze_message:\n\t\t\t\t\tdocnames.length <= 10\n\t\t\t\t\t\t? __(\"Deleting {0} records...\", [docnames.length])\n\t\t\t\t\t\t: null,\n\t\t\t\targs: {\n\t\t\t\t\titems: docnames,\n\t\t\t\t\tdoctype: this.doctype\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(__('Cannot delete {0}', [failed.map(f => f.bold()).join(', ')]));\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound('delete');\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tassign (docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tconst assign_to = new frappe.ui.form.AssignToDialog({\n\t\t\t\tobj: this,\n\t\t\t\tmethod: 'frappe.desk.form.assign_to.add_multiple',\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocname: docnames,\n\t\t\t\tbulk_assign: true,\n\t\t\t\tre_assign: true,\n\t\t\t\tcallback: done\n\t\t\t});\n\t\t\tassign_to.dialog.clear();\n\t\t\tassign_to.dialog.show();\n\t\t} else {\n\t\t\tfrappe.msgprint(__('Select records for assignment'));\n\t\t}\n\t}\n\n\tapply_assignment_rule (docnames, done) {\n\t\tif (docnames.length > 0) {\n\t\t\tfrappe.call('frappe.automation.doctype.assignment_rule.assignment_rule.bulk_apply', {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tdocnames: docnames\n\t\t\t}).then(() => done());\n\t\t}\n\t}\n\n\tsubmit_or_cancel (docnames, action = 'submit', done = null) {\n\t\taction = action.toLowerCase();\n\t\tfrappe\n\t\t\t.call({\n\t\t\t\tmethod: 'frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\taction: action,\n\t\t\t\t\tdocnames: docnames\n\t\t\t\t},\n\t\t\t})\n\t\t\t.then((r) => {\n\t\t\t\tlet failed = r.message;\n\t\t\t\tif (!failed) failed = [];\n\n\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\tfrappe.throw(__('Cannot {0} {1}', [action, failed.map(f => f.bold()).join(', ')]));\n\t\t\t\t}\n\t\t\t\tif (failed.length < docnames.length) {\n\t\t\t\t\tfrappe.utils.play_sound(action);\n\t\t\t\t\tif (done) done();\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tedit (docnames, field_mappings, done) {\n\t\tlet field_options = Object.keys(field_mappings).sort();\n\t\tconst status_regex = /status/i;\n\n\t\tconst default_field = field_options.find(value => status_regex.test(value));\n\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Bulk Edit'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\t'fieldtype': 'Select',\n\t\t\t\t\t'options': field_options,\n\t\t\t\t\t'default': default_field,\n\t\t\t\t\t'label': __('Field'),\n\t\t\t\t\t'fieldname': 'field',\n\t\t\t\t\t'reqd': 1,\n\t\t\t\t\t'onchange': () => {\n\t\t\t\t\t\tset_value_field(dialog);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\t'fieldtype': 'Data',\n\t\t\t\t\t'label': __('Value'),\n\t\t\t\t\t'fieldname': 'value',\n\t\t\t\t\tonchange() {\n\t\t\t\t\t\tshow_help_text();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t],\n\t\t\tprimary_action: ({ value }) => {\n\t\t\t\tconst fieldname = field_mappings[dialog.get_value('field')].fieldname;\n\t\t\t\tdialog.disable_primary_action();\n\t\t\t\tfrappe.call({\n\t\t\t\t\tmethod: 'frappe.desk.doctype.bulk_update.bulk_update.submit_cancel_or_update_docs',\n\t\t\t\t\targs: {\n\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\tfreeze: true,\n\t\t\t\t\t\tdocnames: docnames,\n\t\t\t\t\t\taction: 'update',\n\t\t\t\t\t\tdata: {\n\t\t\t\t\t\t\t[fieldname]: value || null\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}).then(r => {\n\t\t\t\t\tlet failed = r.message || [];\n\n\t\t\t\t\tif (failed.length && !r._server_messages) {\n\t\t\t\t\t\tdialog.enable_primary_action();\n\t\t\t\t\t\tfrappe.throw(__('Cannot update {0}', [failed.map(f => f.bold ? f.bold() : f).join(', ')]));\n\t\t\t\t\t}\n\t\t\t\t\tdone();\n\t\t\t\t\tdialog.hide();\n\t\t\t\t\tfrappe.show_alert(__('Updated successfully'));\n\t\t\t\t});\n\t\t\t},\n\t\t\tprimary_action_label: __('Update {0} records', [docnames.length]),\n\t\t});\n\n\t\tif (default_field) set_value_field(dialog); // to set `Value` df based on default `Field`\n\t\tshow_help_text();\n\n\t\tfunction set_value_field (dialogObj) {\n\t\t\tconst new_df = Object.assign({},\n\t\t\t\tfield_mappings[dialogObj.get_value('field')]);\n\t\t\t/* if the field label has status in it and\n\t\t\tif it has select fieldtype with no default value then\n\t\t\tset a default value from the available option. */\n\t\t\tif (new_df.label.match(status_regex) &&\n\t\t\t\tnew_df.fieldtype === 'Select' && !new_df.default) {\n\t\t\t\tlet options = [];\n\t\t\t\tif (typeof new_df.options === \"string\") {\n\t\t\t\t\toptions = new_df.options.split(\"\\n\");\n\t\t\t\t}\n\t\t\t\t//set second option as default if first option is an empty string\n\t\t\t\tnew_df.default = options[0] || options[1];\n\t\t\t}\n\t\t\tnew_df.label = __('Value');\n\t\t\tnew_df.onchange = show_help_text;\n\n\t\t\tdelete new_df.depends_on;\n\t\t\tdialogObj.replace_field('value', new_df);\n\t\t\tshow_help_text();\n\t\t}\n\n\t\tfunction show_help_text() {\n\t\t\tlet value = dialog.get_value('value');\n\t\t\tif (value == null || value === '') {\n\t\t\t\tdialog.set_df_property('value', 'description', __('You have not entered a value. The field will be set to empty.'));\n\t\t\t} else {\n\t\t\t\tdialog.set_df_property('value', 'description', '');\n\t\t\t}\n\t\t}\n\n\t\tdialog.refresh();\n\t\tdialog.show();\n\t}\n\n\n\tadd_tags (docnames, done) {\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Add Tags'),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: 'MultiSelectPills',\n\t\t\t\t\tfieldname: 'tags',\n\t\t\t\t\tlabel: __(\"Tags\"),\n\t\t\t\t\treqd: true,\n\t\t\t\t\tget_data: function (txt) {\n\t\t\t\t\t\treturn frappe.db.get_link_options(\"Tag\", txt);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Add\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tlet args = dialog.get_values();\n\t\t\t\tif (args && args.tags) {\n\t\t\t\t\tdialog.set_message(\"Adding Tags...\");\n\n\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\tmethod: \"frappe.desk.doctype.tag.tag.add_tags\",\n\t\t\t\t\t\targs: {\n\t\t\t\t\t\t\t'tags': args.tags,\n\t\t\t\t\t\t\t'dt': this.doctype,\n\t\t\t\t\t\t\t'docs': docnames,\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcallback: () => {\n\t\t\t\t\t\t\tdialog.hide();\n\t\t\t\t\t\t\tdone();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t\tdialog.show();\n\t}\n}","export default class ListSettings {\n\tconstructor({ listview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw('DocType required');\n\t\t}\n\n\t\tthis.listview = listview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields = this.settings && this.settings.fields ? JSON.parse(this.settings.fields) : [];\n\t\tthis.subject_field = null;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_listview_fields(meta);\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\n\t\tlet list_view_settings = frappe.get_meta(\"List View Settings\");\n\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(me.doctype)]),\n\t\t\tfields: list_view_settings.fields\n\t\t});\n\t\tme.dialog.set_values(me.settings);\n\t\tme.dialog.set_primary_action(__('Save'), () => {\n\t\t\tlet values = me.dialog.get_values();\n\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\"\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.desk.doctype.list_view_settings.list_view_settings.save_listview_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\tlistview_settings: values,\n\t\t\t\t\tremoved_listview_fields: me.removed_fields || []\n\t\t\t\t},\n\t\t\t\tcallback: function (r) {\n\t\t\t\t\tme.listview.refresh_columns(r.message.meta, r.message.listview_settings);\n\t\t\t\t\tme.dialog.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\tme.dialog.fields_dict[\"total_fields\"].df.onchange = () => me.refresh();\n\t}\n\n\trefresh() {\n\t\tlet me = this;\n\n\t\tme.setup_fields();\n\t\tme.add_new_fields();\n\t\tme.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tlet me = this;\n\n\t\tif (!this.settings.fields) {\n\t\t\tme.update_fields();\n\t\t}\n\n\t\tif (!me.dialog.get_value(\"total_fields\")) {\n\t\t\tlet field_count = me.fields.length;\n\n\t\t\tif (field_count < 4) {\n\t\t\t\tfield_count = 4;\n\t\t\t} else if (field_count > 10) {\n\t\t\t\tfield_count = 4;\n\t\t\t}\n\n\t\t\tme.dialog.set_value(\"total_fields\", field_count);\n\t\t}\n\n\t\tme.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tfunction is_status_field(field) {\n\t\t\treturn field.fieldname === \"status_field\";\n\t\t}\n\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\t\tlet fields = ``;\n\t\tlet total_fields = me.dialog.get_values().total_fields || me.settings.total_fields;\n\n\t\tfor (let idx in me.fields) {\n\t\t\tif (idx == parseInt(total_fields)) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tlet is_sortable = (idx == 0) ? `` : `sortable`;\n\t\t\tlet show_sortable_handle = (idx == 0) ? `hide` : ``;\n\t\t\tlet can_remove = (idx == 0 || is_status_field(me.fields[idx])) ? `hide` : ``;\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order ${is_sortable}\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\" data-fieldname=\"${me.fields[idx].fieldname}\"\n\t\t\t\t\tdata-label=\"${me.fields[idx].label}\" data-type=\"${me.fields[idx].type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle \" + show_sortable_handle)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${me.fields[idx].label}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1 ${can_remove}\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${me.fields[idx].fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted hidden-xs\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(wrapper.getElementsByClassName(\"control-input-wrapper\")[0], {\n\t\t\thandle: '.sortable-handle',\n\t\t\tdraggable: '.sortable',\n\t\t\tonUpdate: () => {\n\t\t\t\tme.update_fields();\n\t\t\t\tme.refresh();\n\t\t\t}\n\t\t});\n\t}\n\n\tadd_new_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet add_new_fields = fields_html.$wrapper[0].getElementsByClassName(\"add-new-fields\")[0];\n\t\tadd_new_fields.onclick = () => me.column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet remove_fields = fields_html.$wrapper[0].getElementsByClassName(\"remove-field\");\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () => me.remove_fields(remove_fields.item(idx).getAttribute(\"data-fieldname\"));\n\t\t}\n\t}\n\n\tremove_fields(fieldname) {\n\t\tlet me = this;\n\t\tlet existing_fields = me.fields.map(f => f.fieldname);\n\n\t\tfor (let idx in me.fields) {\n\t\t\tlet field = me.fields[idx];\n\n\t\t\tif (field.fieldname == fieldname) {\n\t\t\t\tme.fields.splice(idx, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tme.set_removed_fields(me.get_removed_listview_fields(me.fields.map(f => f.fieldname), existing_fields));\n\t\tme.refresh();\n\t\tme.update_fields();\n\t}\n\n\tupdate_fields() {\n\t\tlet me = this;\n\n\t\tlet fields_html = me.dialog.get_field(\"fields_html\");\n\t\tlet wrapper = fields_html.$wrapper[0];\n\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tme.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tme.fields.push({\n\t\t\t\tfieldname: fields_order.item(idx).getAttribute(\"data-fieldname\"),\n\t\t\t\tlabel: fields_order.item(idx).getAttribute(\"data-label\")\n\t\t\t});\n\t\t}\n\n\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\tme.dialog.get_value(\"fields\");\n\t}\n\n\tcolumn_selector() {\n\t\tlet me = this;\n\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(me.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Reset Fields\"),\n\t\t\t\t\tfieldtype: \"Button\",\n\t\t\t\t\tfieldname: \"reset_fields\",\n\t\t\t\t\tclick: () => me.reset_listview_fields(d)\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: me.get_doctype_fields(me.meta, me.fields.map(f => f.fieldname)),\n\t\t\t\t\tcolumns: 2\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\td.set_primary_action(__('Save'), () => {\n\t\t\tlet values = d.get_values().fields;\n\n\t\t\tme.set_removed_fields(me.get_removed_listview_fields(values, me.fields.map(f => f.fieldname)));\n\n\t\t\tme.fields = [];\n\t\t\tme.set_subject_field(me.meta);\n\t\t\tme.set_status_field();\n\n\t\t\tfor (let idx in values) {\n\t\t\t\tlet value = values[idx];\n\n\t\t\t\tif (me.fields.length === parseInt(me.dialog.get_values().total_fields)) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (value != me.subject_field.fieldname) {\n\t\t\t\t\tlet field = frappe.meta.get_docfield(me.doctype, value);\n\t\t\t\t\tif (field) {\n\t\t\t\t\t\tme.fields.push({\n\t\t\t\t\t\t\tlabel: field.label,\n\t\t\t\t\t\t\tfieldname: field.fieldname\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tme.refresh();\n\t\t\tme.dialog.set_value(\"fields\", JSON.stringify(me.fields));\n\t\t\td.hide();\n\t\t});\n\t\td.show();\n\t}\n\n\treset_listview_fields(dialog) {\n\t\tlet me = this;\n\n\t\tfrappe.xcall(\"frappe.desk.doctype.list_view_settings.list_view_settings.get_default_listview_fields\", {\n\t\t\tdoctype: me.doctype\n\t\t}).then((fields) => {\n\t\t\tlet field = dialog.get_field(\"fields\");\n\t\t\tfield.df.options = me.get_doctype_fields(me.meta, fields);\n\t\t\tdialog.refresh();\n\t\t});\n\n\t}\n\n\tget_listview_fields(meta) {\n\t\tlet me = this;\n\n\t\tif (!me.settings.fields) {\n\t\t\tme.set_list_view_fields(meta);\n\t\t} else {\n\t\t\tme.fields = JSON.parse(this.settings.fields);\n\t\t}\n\n\t\tme.fields.uniqBy(f => f.fieldname);\n\t}\n\n\tset_list_view_fields(meta) {\n\t\tlet me = this;\n\n\t\tme.set_subject_field(meta);\n\t\tme.set_status_field();\n\n\t\tmeta.fields.forEach(field => {\n\t\t\tif (field.in_list_view && !in_list(frappe.model.no_value_type, field.fieldtype) &&\n\t\t\t\tme.subject_field.fieldname != field.fieldname) {\n\n\t\t\t\tme.fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tfieldname: field.fieldname\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tset_subject_field(meta) {\n\t\tlet me = this;\n\n\t\tme.subject_field = {\n\t\t\tlabel: \"Name\",\n\t\t\tfieldname: \"name\"\n\t\t};\n\n\t\tif (meta.title_field) {\n\t\t\tlet field = frappe.meta.get_docfield(me.doctype, meta.title_field.trim());\n\n\t\t\tme.subject_field = {\n\t\t\t\tlabel: field.label,\n\t\t\t\tfieldname: field.fieldname\n\t\t\t};\n\t\t}\n\n\t\tme.fields.push(me.subject_field);\n\t}\n\n\tset_status_field() {\n\t\tlet me = this;\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tme.fields.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t\tlabel: \"Status\",\n\t\t\t\tfieldname: \"status_field\"\n\t\t\t});\n\t\t}\n\t}\n\n\tget_doctype_fields(meta, fields) {\n\t\tlet multiselect_fields = [];\n\n\t\tmeta.fields.forEach(field => {\n\t\t\tif (!in_list(frappe.model.no_value_type, field.fieldtype)) {\n\t\t\t\tmultiselect_fields.push({\n\t\t\t\t\tlabel: field.label,\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: in_list(fields, field.fieldname)\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\treturn multiselect_fields;\n\t}\n\n\tget_removed_listview_fields(new_fields, existing_fields) {\n\t\tlet me = this;\n\t\tlet removed_fields = [];\n\n\t\tif (frappe.has_indicator(me.doctype)) {\n\t\t\tnew_fields.push(\"status_field\");\n\t\t}\n\n\t\texisting_fields.forEach(column => {\n\t\t\tif (!in_list(new_fields, column)) {\n\t\t\t\tremoved_fields.push(column);\n\t\t\t}\n\t\t});\n\n\t\treturn removed_fields;\n\t}\n\n\tset_removed_fields(fields) {\n\t\tlet me = this;\n\n\t\tif (me.removed_fields) {\n\t\t\tme.removed_fields.concat(fields);\n\t\t} else {\n\t\t\tme.removed_fields = fields;\n\t\t}\n\t}\n}\n","import BulkOperations from \"./bulk_operations\";\nimport ListSettings from \"./list_settings\";\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ListView = class ListView extends frappe.views.BaseList {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tconst doctype = route[1];\n\n\t\tif (route.length === 2) {\n\t\t\tconst user_settings = frappe.get_user_settings(doctype);\n\t\t\tconst last_view = user_settings.last_view;\n\t\t\tfrappe.set_route(\n\t\t\t\t\"list\",\n\t\t\t\tfrappe.router.doctype_layout || doctype,\n\t\t\t\tfrappe.views.is_valid(last_view) ? last_view.toLowerCase() : \"list\"\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tconstructor(opts) {\n\t\tsuper(opts);\n\t\tthis.show();\n\t}\n\n\thas_permissions() {\n\t\tconst can_read = frappe.perm.has_perm(this.doctype, 0, \"read\");\n\t\treturn can_read;\n\t}\n\n\tshow() {\n\t\tthis.parent.disable_scroll_to_top = true;\n\n\t\tif (!this.has_permissions()) {\n\t\t\tfrappe.set_route('');\n\t\t\tfrappe.msgprint(__(\"Not permitted to view {0}\", [this.doctype]));\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.show();\n\t}\n\n\tget view_name() {\n\t\treturn \"List\";\n\t}\n\n\tget view_user_settings() {\n\t\treturn this.user_settings[this.view_name] || {};\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\tthis.view = \"List\";\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || this.sort_by || \"modified\";\n\t\tthis.sort_order = this.view_user_settings.sort_order || this.sort_order || \"desc\";\n\n\t\t// set filters from user_settings or list_settings\n\t\tif (\n\t\t\tthis.view_user_settings.filters &&\n\t\t\tthis.view_user_settings.filters.length\n\t\t) {\n\t\t\t// Priority 1: user_settings\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\t// build menu items\n\t\tthis.menu_items = this.menu_items.concat(this.get_menu_items());\n\n\t\tif (\n\t\t\tthis.view_user_settings.filters &&\n\t\t\tthis.view_user_settings.filters.length\n\t\t) {\n\t\t\t// Priority 1: saved filters\n\t\t\tconst saved_filters = this.view_user_settings.filters;\n\t\t\tthis.filters = this.validate_filters(saved_filters);\n\t\t} else {\n\t\t\t// Priority 2: filters in listview_settings\n\t\t\tthis.filters = (this.settings.filters || []).map((f) => {\n\t\t\t\tif (f.length === 3) {\n\t\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t\t}\n\t\t\t\treturn f;\n\t\t\t});\n\t\t}\n\n\t\tif (this.view_name == 'List') this.toggle_paging = true;\n\n\t\tthis.patch_refresh_and_load_lib();\n\t\treturn this.get_list_view_settings();\n\t}\n\n\ton_sort_change(sort_by, sort_order) {\n\t\tthis.sort_by = sort_by;\n\t\tthis.sort_order = sort_order;\n\t\tsuper.on_sort_change();\n\t}\n\n\tvalidate_filters(filters) {\n\t\tlet valid_fields = this.meta.fields.map(df => df.fieldname);\n\t\tvalid_fields = valid_fields.concat(frappe.model.std_fields_list);\n\t\treturn filters\n\t\t\t.filter((f) => valid_fields.includes(f[1]))\n\t\t\t.uniqBy((f) => f[1]);\n\t}\n\n\tsetup_page() {\n\t\tthis.parent.list_view = this;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_page_head() {\n\t\tsuper.setup_page_head();\n\t\tthis.set_primary_action();\n\t\tthis.set_actions_menu_items();\n\t}\n\n\tset_actions_menu_items() {\n\t\tthis.actions_menu_items = this.get_actions_menu_items();\n\t\tthis.workflow_action_menu_items = this.get_workflow_action_menu_items();\n\t\tthis.workflow_action_items = {};\n\n\t\tconst actions = this.actions_menu_items.concat(\n\t\t\tthis.workflow_action_menu_items\n\t\t);\n\t\tactions.map((item) => {\n\t\t\tconst $item = this.page.add_actions_menu_item(\n\t\t\t\titem.label,\n\t\t\t\titem.action,\n\t\t\t\titem.standard\n\t\t\t);\n\t\t\tif (item.class) {\n\t\t\t\t$item.addClass(item.class);\n\t\t\t}\n\t\t\tif (item.is_workflow_action && $item) {\n\t\t\t\t// can be used to dynamically show or hide action\n\t\t\t\tthis.workflow_action_items[item.name] = $item;\n\t\t\t}\n\t\t});\n\t}\n\n\tshow_restricted_list_indicator_if_applicable() {\n\t\tconst match_rules_list = frappe.perm.get_match_rules(this.doctype);\n\t\tif (match_rules_list.length) {\n\t\t\tthis.restricted_list = $(\n\t\t\t\t`<button class=\"btn btn-xs restricted-button flex align-center\">\n\t\t\t\t\t${frappe.utils.icon('restriction', 'xs')}\n\t\t\t\t</button>`\n\t\t\t).click(() => this.show_restrictions(match_rules_list)).appendTo(this.page.page_form);\n\t\t}\n\t}\n\n\tshow_restrictions(match_rules_list = []) {\n\t\tfrappe.msgprint(\n\t\t\tfrappe.render_template(\"list_view_permission_restrictions\", {\n\t\t\t\tcondition_list: match_rules_list,\n\t\t\t}),\n\t\t\t__(\"Restrictions\", null, \"Title of message showing restrictions in list view\")\n\t\t);\n\t}\n\n\tset_fields() {\n\t\tlet fields = [].concat(\n\t\t\tfrappe.model.std_fields_list,\n\t\t\tthis.get_fields_in_list_view(),\n\t\t\t[this.meta.title_field, this.meta.image_field],\n\t\t\tthis.settings.add_fields || [],\n\t\t\tthis.meta.track_seen ? \"_seen\" : null,\n\t\t\tthis.sort_by,\n\t\t\t\"enabled\",\n\t\t\t\"disabled\",\n\t\t\t\"color\"\n\t\t);\n\n\t\tfields.forEach((f) => this._add_field(f));\n\n\t\tthis.fields.forEach((f) => {\n\t\t\tconst df = frappe.meta.get_docfield(f[1], f[0]);\n\t\t\tif (\n\t\t\t\tdf &&\n\t\t\t\tdf.fieldtype === \"Currency\" &&\n\t\t\t\tdf.options &&\n\t\t\t\t!df.options.includes(\":\")\n\t\t\t) {\n\t\t\t\tthis._add_field(df.options);\n\t\t\t}\n\t\t});\n\t}\n\n\tpatch_refresh_and_load_lib() {\n\t\t// throttle refresh for 1s\n\t\tthis.refresh = this.refresh.bind(this);\n\t\tthis.refresh = frappe.utils.throttle(this.refresh, 1000);\n\t\tthis.load_lib = new Promise((resolve) => {\n\t\t\tif (this.required_libs) {\n\t\t\t\tfrappe.require(this.required_libs, resolve);\n\t\t\t} else {\n\t\t\t\tresolve();\n\t\t\t}\n\t\t});\n\t\t// call refresh every 5 minutes\n\t\tconst interval = 5 * 60 * 1000;\n\t\tsetInterval(() => {\n\t\t\t// don't call if route is different\n\t\t\tif (frappe.get_route_str() === this.page_name) {\n\t\t\t\tthis.refresh();\n\t\t\t}\n\t\t}, interval);\n\t}\n\n\tset_primary_action() {\n\t\tif (this.can_create) {\n\t\t\tconst doctype_name = __(frappe.router.doctype_layout) || __(this.doctype);\n\n\t\t\t// Better style would be __(\"Add {0}\", [doctype_name], \"Primary action in list view\")\n\t\t\t// Keeping it like this to not disrupt existing translations\n\t\t\tconst label = `${__(\"Add\", null, \"Primary action in list view\")} ${doctype_name}`;\n\t\t\tthis.page.set_primary_action(\n\t\t\t\tlabel,\n\t\t\t\t() => {\n\t\t\t\t\tif (this.settings.primary_action) {\n\t\t\t\t\t\tthis.settings.primary_action();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.make_new_doc();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"add\"\n\t\t\t);\n\t\t} else {\n\t\t\tthis.page.clear_primary_action();\n\t\t}\n\t}\n\n\tmake_new_doc() {\n\t\tconst doctype = this.doctype;\n\t\tconst options = {};\n\t\tthis.filter_area.get().forEach((f) => {\n\t\t\tif (f[2] === \"=\" && frappe.model.is_non_std_field(f[1])) {\n\t\t\t\toptions[f[1]] = f[3];\n\t\t\t}\n\t\t});\n\t\tfrappe.new_doc(doctype, options);\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_skeleton();\n\t\tthis.setup_events();\n\t\tthis.settings.onload && this.settings.onload(this);\n\t\tthis.show_restricted_list_indicator_if_applicable();\n\t}\n\n\trefresh_columns(meta, list_view_settings) {\n\t\tthis.meta = meta;\n\t\tthis.list_view_settings = list_view_settings;\n\n\t\tthis.setup_columns();\n\t\tthis.refresh(true);\n\t}\n\n\trefresh(refresh_header=false) {\n\t\tsuper.refresh().then(() => {\n\t\t\tthis.render_header(refresh_header);\n\t\t\tthis.update_checkbox();\n\t\t});\n\t}\n\n\tupdate_checkbox(target) {\n\t\tif (!this.$checkbox_actions) return;\n\n\t\tlet $check_all_checkbox = this.$checkbox_actions.find(\".list-check-all\");\n\n\t\tif ($check_all_checkbox.prop(\"checked\") && target && !target.prop(\"checked\")) {\n\t\t\t$check_all_checkbox.prop(\"checked\", false);\n\t\t}\n\n\t\t$check_all_checkbox.prop(\"checked\", this.$checks.length === this.data.length);\n\t}\n\n\tsetup_freeze_area() {\n\t\tthis.$freeze = $(\n\t\t\t`<div class=\"freeze flex justify-center align-center text-muted\">\n\t\t\t\t${__(\"Loading\")}...\n\t\t\t</div>`\n\t\t).hide();\n\t\tthis.$result.append(this.$freeze);\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\n\t\tconst get_df = frappe.meta.get_docfield.bind(null, this.doctype);\n\n\t\t// 1st column: title_field or name\n\t\tif (this.meta.title_field) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: get_df(this.meta.title_field),\n\t\t\t});\n\t\t} else {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Subject\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"Name\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\n\n\t\tthis.columns.push({\n\t\t\ttype: \"Tag\"\n\t\t});\n\n\t\t// 2nd column: Status indicator\n\t\tif (frappe.has_indicator(this.doctype)) {\n\t\t\t// indicator\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Status\",\n\t\t\t});\n\t\t}\n\n\t\tconst fields_in_list_view = this.get_fields_in_list_view();\n\t\t// Add rest from in_list_view docfields\n\t\tthis.columns = this.columns.concat(\n\t\t\tfields_in_list_view\n\t\t\t\t.filter((df) => {\n\t\t\t\t\tif (\n\t\t\t\t\t\tfrappe.has_indicator(this.doctype) &&\n\t\t\t\t\t\tdf.fieldname === \"status\"\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\tif (!df.in_list_view) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn df.fieldname !== this.meta.title_field;\n\t\t\t\t})\n\t\t\t\t.map((df) => ({\n\t\t\t\t\ttype: \"Field\",\n\t\t\t\t\tdf,\n\t\t\t\t}))\n\t\t);\n\n\t\tif (this.list_view_settings.fields) {\n\t\t\tthis.columns = this.reorder_listview_fields();\n\t\t}\n\n\t\t// limit max to 8 columns if no total_fields is set in List View Settings\n\t\t// Screen with low density no of columns 4\n\t\t// Screen with medium density no of columns 6\n\t\t// Screen with high density no of columns 8\n\t\tlet total_fields = 6;\n\n\t\tif (window.innerWidth <= 1366) {\n\t\t\ttotal_fields = 4;\n\t\t} else if (window.innerWidth >= 1920) {\n\t\t\ttotal_fields = 8;\n\t\t}\n\n\t\tthis.columns = this.columns.slice(0, this.list_view_settings.total_fields || total_fields);\n\n\t\tif (\n\t\t\t!this.settings.hide_name_column &&\n\t\t\tthis.meta.title_field &&\n\t\t\tthis.meta.title_field !== 'name'\n\t\t) {\n\t\t\tthis.columns.push({\n\t\t\t\ttype: \"Field\",\n\t\t\t\tdf: {\n\t\t\t\t\tlabel: __(\"Name\"),\n\t\t\t\t\tfieldname: \"name\",\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n\n\treorder_listview_fields() {\n\t\tlet fields_order = [];\n\t\tlet fields = JSON.parse(this.list_view_settings.fields);\n\n\t\t//title and tags field is fixed\n\t\tfields_order.push(this.columns[0]);\n\t\tfields_order.push(this.columns[1]);\n\t\tthis.columns.splice(0, 2);\n\n\t\tfor (let fld in fields) {\n\t\t\tfor (let col in this.columns) {\n\t\t\t\tlet field = fields[fld];\n\t\t\t\tlet column = this.columns[col];\n\n\t\t\t\tif (column.type == \"Status\" && field.fieldname == \"status_field\") {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t} else if (column.type == \"Field\" && field.fieldname === column.df.fieldname) {\n\t\t\t\t\tfields_order.push(column);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fields_order;\n\t}\n\n\tget_documentation_link() {\n\t\tif (this.meta.documentation) {\n\t\t\treturn `<a href=\"${\n\t\t\t\tthis.meta.documentation\n\t\t\t}\" target=\"blank\" class=\"meta-description small text-muted\">Need Help?</a>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_no_result_message() {\n\t\tlet help_link = this.get_documentation_link();\n\t\tlet filters = this.filter_area && this.filter_area.get();\n\t\tlet no_result_message = filters && filters.length\n\t\t\t? __(\"No {0} found\", [__(this.doctype)])\n\t\t\t: __(\"You haven't created a {0} yet\", [__(this.doctype)]);\n\t\tlet new_button_label = filters && filters.length\n\t\t\t? __(\"Create a new {0}\", [__(this.doctype)], \"Create a new document from list view\")\n\t\t\t: __(\"Create your first {0}\", [__(this.doctype)], \"Create a new document from list view\");\n\t\tlet empty_state_image =\n\t\t\tthis.settings.empty_state_image ||\n\t\t\t\"/assets/frappe/images/ui-states/list-empty-state.svg\";\n\n\t\tconst new_button = this.can_create\n\t\t\t? `<p><button class=\"btn btn-primary btn-sm btn-new-doc hidden-xs\">\n\t\t\t\t${new_button_label}\n\t\t\t</button> <button class=\"btn btn-primary btn-new-doc visible-xs\">\n\t\t\t\t${__(\"Create New\", null, \"Create a new document from list view\")}\n\t\t\t</button></p>`\n\t\t\t: \"\";\n\n\t\treturn `<div class=\"msg-box no-border\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t<p>${no_result_message}</p>\n\t\t\t${new_button}\n\t\t\t${help_link}\n\t\t</div>`;\n\t}\n\n\tfreeze() {\n\t\tif (this.list_view_settings && !this.list_view_settings.disable_count) {\n\t\t\tthis.$result\n\t\t\t\t.find(\".list-count\")\n\t\t\t\t.html(`<span>${__(\"Refreshing\", null, \"Document count in list view\")}...</span>`);\n\t\t}\n\t}\n\n\tget_args() {\n\t\tconst args = super.get_args();\n\n\t\treturn Object.assign(args, {\n\t\t\twith_comment_count: true,\n\t\t});\n\t}\n\n\tbefore_refresh() {\n\t\tif (frappe.route_options && this.filter_area) {\n\t\t\tthis.filters = this.parse_filters_from_route_options();\n\t\t\tfrappe.route_options = null;\n\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\treturn this.filter_area\n\t\t\t\t\t.clear(false)\n\t\t\t\t\t.then(() => this.filter_area.set(this.filters));\n\t\t\t}\n\t\t}\n\n\t\treturn Promise.resolve();\n\t}\n\n\tparse_filters_from_settings() {\n\t\treturn (this.settings.filters || []).map((f) => {\n\t\t\tif (f.length === 3) {\n\t\t\t\tf = [this.doctype, f[0], f[1], f[2]];\n\t\t\t}\n\t\t\treturn f;\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_actions_menu_button(\n\t\t\tthis.$result.find(\".list-row-check:checked\").length > 0\n\t\t);\n\t}\n\n\ttoggle_actions_menu_button(toggle) {\n\t\tif (toggle) {\n\t\t\tthis.page.show_actions_menu();\n\t\t\tthis.page.clear_primary_action();\n\t\t\tthis.toggle_workflow_actions();\n\t\t} else {\n\t\t\tthis.page.hide_actions_menu();\n\t\t\tthis.set_primary_action();\n\t\t}\n\t}\n\n\trender_header(refresh_header=false) {\n\t\tif (refresh_header) {\n\t\t\tthis.$result.find('.list-row-head').remove();\n\t\t}\n\t\tif (this.$result.find(\".list-row-head\").length === 0) {\n\t\t\t// append header once\n\t\t\tthis.$result.prepend(this.get_header_html());\n\t\t}\n\t}\n\n\trender_skeleton() {\n\t\tconst $row = this.get_list_row_html_skeleton(\n\t\t\t'<div><input type=\"checkbox\" class=\"render-list-checkbox\"/></div>'\n\t\t);\n\t\tthis.$result.append($row);\n\t}\n\n\tbefore_render() {\n\t\tthis.settings.before_render && this.settings.before_render();\n\t\tfrappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\t\"last_view\",\n\t\t\tthis.view_name\n\t\t);\n\t\tthis.save_view_user_settings({\n\t\t\tfilters: this.filter_area && this.filter_area.get(),\n\t\t\tsort_by: this.sort_selector && this.sort_selector.sort_by,\n\t\t\tsort_order: this.sort_selector && this.sort_selector.sort_order,\n\t\t});\n\t\tthis.toggle_paging && this.$paging_area.toggle(false);\n\t}\n\n\tafter_render() {\n\t\tthis.$no_result.html(`\n\t\t\t<div class=\"no-result text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t`);\n\t\tthis.setup_new_doc_event();\n\t\tthis.toggle_paging && this.$paging_area.toggle(true);\n\t}\n\n\trender() {\n\t\tthis.render_list();\n\t\tthis.set_rows_as_checked();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\trender_list() {\n\t\t// clear rows\n\t\tthis.$result.find(\".list-row-container\").remove();\n\t\tif (this.data.length > 0) {\n\t\t\t// append rows\n\t\t\tthis.$result.append(\n\t\t\t\tthis.data\n\t\t\t\t\t.map((doc, i) => {\n\t\t\t\t\t\tdoc._idx = i;\n\t\t\t\t\t\treturn this.get_list_row_html(doc);\n\t\t\t\t\t})\n\t\t\t\t\t.join(\"\")\n\t\t\t);\n\t\t}\n\t}\n\n\trender_count() {\n\t\tif (!this.list_view_settings.disable_count) {\n\t\t\tthis.get_count_str().then((str) => {\n\t\t\t\tthis.$result.find(\".list-count\").html(`<span>${str}</span>`);\n\t\t\t});\n\t\t}\n\t}\n\n\tget_header_html() {\n\t\tif (!this.columns) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst subject_field = this.columns[0].df;\n\t\tlet subject_html = `\n\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t<span class=\"level-item list-liked-by-me hidden-xs\">\n\t\t\t\t<span title=\"${__(\"Likes\")}\">${frappe.utils.icon('heart', 'sm', 'like-icon')}</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item\">${__(subject_field.label)}</span>\n\t\t`;\n\t\tconst $columns = this.columns\n\t\t\t.map(col => {\n\t\t\t\tlet classes = [\n\t\t\t\t\t\"list-row-col ellipsis\",\n\t\t\t\t\tcol.type == \"Subject\" ? \"list-subject level\" : \"hidden-xs\",\n\t\t\t\t\tcol.type == \"Tag\" ? \"tag-col hide\": \"\",\n\t\t\t\t\tfrappe.model.is_numeric_field(col.df) ? \"text-right\" : \"\",\n\t\t\t\t].join(\" \");\n\n\t\t\t\treturn `\n\t\t\t\t<div class=\"${classes}\">\n\t\t\t\t\t${col.type === \"Subject\" ? subject_html : `\n\t\t\t\t\t\t<span>${__((col.df && col.df.label) || col.type)}</span>`}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\treturn this.get_header_html_skeleton(\n\t\t\t$columns,\n\t\t\t'<span class=\"list-count\"></span>'\n\t\t);\n\t}\n\n\tget_header_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<header class=\"level list-row-head text-muted\">\n\t\t\t\t<div class=\"level-left list-header-subject\">\n\t\t\t\t\t${left}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-left checkbox-actions\">\n\t\t\t\t\t<div class=\"level list-subject\">\n\t\t\t\t\t\t<input class=\"level-item list-check-all\" type=\"checkbox\"\n\t\t\t\t\t\t\ttitle=\"${__(\"Select All\")}\">\n\t\t\t\t\t\t<span class=\"level-item list-header-meta\"></span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"level-right\">\n\t\t\t\t\t${right}\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t`;\n\t}\n\n\tget_left_html(doc) {\n\t\treturn this.columns\n\t\t\t.map((col) => this.get_column_html(col, doc))\n\t\t\t.join(\"\");\n\t}\n\n\tget_right_html(doc) {\n\t\treturn this.get_meta_html(doc);\n\t}\n\n\tget_list_row_html(doc) {\n\t\treturn this.get_list_row_html_skeleton(\n\t\t\tthis.get_left_html(doc),\n\t\t\tthis.get_right_html(doc)\n\t\t);\n\t}\n\n\tget_list_row_html_skeleton(left = \"\", right = \"\") {\n\t\treturn `\n\t\t\t<div class=\"list-row-container\" tabindex=\"1\">\n\t\t\t\t<div class=\"level list-row\">\n\t\t\t\t\t<div class=\"level-left ellipsis\">\n\t\t\t\t\t\t${left}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"level-right text-muted ellipsis\">\n\t\t\t\t\t\t${right}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_column_html(col, doc) {\n\t\tif (col.type === \"Status\") {\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col hidden-xs ellipsis\">\n\t\t\t\t\t${this.get_indicator_html(doc)}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tif (col.type === \"Tag\") {\n\t\t\tconst tags_display_class = !this.tags_shown ? 'hide' : '';\n\t\t\tlet tags_html = doc._user_tags ? this.get_tags_html(doc._user_tags, 2) : '<div class=\"tags-empty\">-</div>';\n\t\t\treturn `\n\t\t\t\t<div class=\"list-row-col tag-col ${tags_display_class} hidden-xs ellipsis\">\n\t\t\t\t\t${tags_html}\n\t\t\t\t</div>\n\t\t\t`;\n\t\t}\n\n\t\tconst df = col.df || {};\n\t\tconst label = df.label;\n\t\tconst fieldname = df.fieldname;\n\t\tlet value = doc[fieldname] || \"\";\n\n\t\tlet translated_doctypes = (frappe.boot && frappe.boot.translated_doctypes) || [];\n\t\tif (in_list(translated_doctypes, df.options)) {\n\t\t\tvalue = __(value);\n\t\t}\n\n\t\tconst format = () => {\n\t\t\tif (df.fieldtype === \"Code\") {\n\t\t\t\treturn value;\n\t\t\t} else if (df.fieldtype === \"Percent\") {\n\t\t\t\treturn `<div class=\"progress\" style=\"margin: 0px;\">\n\t\t\t\t\t\t<div class=\"progress-bar progress-bar-success\" role=\"progressbar\"\n\t\t\t\t\t\t\taria-valuenow=\"${value}\"\n\t\t\t\t\t\t\taria-valuemin=\"0\" aria-valuemax=\"100\" style=\"width: ${Math.round(value)}%;\">\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>`;\n\t\t\t} else {\n\t\t\t\treturn frappe.format(value, df, null, doc);\n\t\t\t}\n\t\t};\n\n\t\tconst field_html = () => {\n\t\t\tlet html;\n\t\t\tlet _value;\n\t\t\tlet strip_html_required =\n\t\t\t\tdf.fieldtype == \"Text Editor\" ||\n\t\t\t\t(df.fetch_from &&\n\t\t\t\t\t[\"Text\", \"Small Text\"].includes(df.fieldtype));\n\n\t\t\tif (strip_html_required) {\n\t\t\t\t_value = strip_html(value);\n\t\t\t} else {\n\t\t\t\t_value =\n\t\t\t\t\ttypeof value === \"string\"\n\t\t\t\t\t\t? frappe.utils.escape_html(value)\n\t\t\t\t\t\t: value;\n\t\t\t}\n\n\t\t\tif (df.fieldtype === \"Image\") {\n\t\t\t\thtml = df.options ? `<img src=\"${doc[df.options]}\"\n\t\t\t\t\tstyle=\"max-height: 30px; max-width: 100%;\">`\n\t\t\t\t\t: `<div class=\"missing-image small\">\n\t\t\t\t\t\t${frappe.utils.icon('restriction')}\n\t\t\t\t\t</div>`;\n\t\t\t} else if (df.fieldtype === \"Select\") {\n\t\t\t\thtml = `<span class=\"filterable indicator-pill ${frappe.utils.guess_colour(\n\t\t\t\t\t_value\n\t\t\t\t)} ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t<span class=\"ellipsis\"> ${__(_value)} </span>\n\t\t\t\t</span>`;\n\t\t\t} else if (df.fieldtype === \"Link\") {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${value}\">\n\t\t\t\t\t${_value}\n\t\t\t\t</a>`;\n\t\t\t} else if (\n\t\t\t\t[\"Text Editor\", \"Text\", \"Small Text\", \"HTML Editor\", \"Markdown Editor\"].includes(\n\t\t\t\t\tdf.fieldtype\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\thtml = `<span class=\"ellipsis\">\n\t\t\t\t\t${_value}\n\t\t\t\t</span>`;\n\t\t\t} else {\n\t\t\t\thtml = `<a class=\"filterable ellipsis\"\n\t\t\t\t\tdata-filter=\"${fieldname},=,${frappe.utils.escape_html(value)}\">\n\t\t\t\t\t${format()}\n\t\t\t\t</a>`;\n\t\t\t}\n\n\t\t\treturn `<span class=\"ellipsis\"\n\t\t\t\ttitle=\"${__(label)}: ${frappe.utils.escape_html(_value)}\">\n\t\t\t\t${html}\n\t\t\t</span>`;\n\t\t};\n\n\t\tconst class_map = {\n\t\t\tSubject: \"list-subject level\",\n\t\t\tField: \"hidden-xs\",\n\t\t};\n\t\tconst css_class = [\n\t\t\t\"list-row-col ellipsis\",\n\t\t\tclass_map[col.type],\n\t\t\tfrappe.model.is_numeric_field(df) ? \"text-right\" : \"\",\n\t\t].join(\" \");\n\n\t\tconst html_map = {\n\t\t\tSubject: this.get_subject_html(doc),\n\t\t\tField: field_html(),\n\t\t};\n\t\tlet column_html = html_map[col.type];\n\n\t\t// listview_setting formatter\n\t\tif (\n\t\t\tthis.settings.formatters &&\n\t\t\tthis.settings.formatters[fieldname]\n\t\t) {\n\t\t\tcolumn_html = this.settings.formatters[fieldname](value, df, doc);\n\t\t}\n\n\t\treturn `\n\t\t\t<div class=\"${css_class}\">\n\t\t\t\t${column_html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_tags_html(user_tags, limit, colored=false) {\n\t\tlet get_tag_html = tag => {\n\t\t\tlet color = '', style = '';\n\t\t\tif (tag) {\n\t\t\t\tif (colored) {\n\t\t\t\t\tcolor = frappe.get_palette(tag);\n\t\t\t\t\tstyle = `background-color: var(${color[0]}); color: var(${color[1]})`;\n\t\t\t\t}\n\n\t\t\t\treturn `<div class=\"tag-pill ellipsis\" title=\"${tag}\" style=\"${style}\">${tag}</div>`;\n\t\t\t}\n\t\t};\n\t\treturn user_tags.split(',').slice(1, limit + 1).map(get_tag_html).join('');\n\t}\n\n\tget_meta_html(doc) {\n\t\tlet html = \"\";\n\n\t\tlet settings_button = null;\n\t\tif (this.settings.button && this.settings.button.show(doc)) {\n\t\t\tsettings_button = `\n\t\t\t\t<span class=\"list-actions\">\n\t\t\t\t\t<button class=\"btn btn-action btn-default btn-xs\"\n\t\t\t\t\t\tdata-name=\"${doc.name}\" data-idx=\"${doc._idx}\"\n\t\t\t\t\t\ttitle=\"${this.settings.button.get_description(doc)}\">\n\t\t\t\t\t\t${this.settings.button.get_label(doc)}\n\t\t\t\t\t</button>\n\t\t\t\t</span>\n\t\t\t`;\n\t\t}\n\n\t\tconst modified = comment_when(doc.modified, true);\n\n\t\tlet assigned_to = `<div class=\"list-assignments\">\n\t\t\t<span class=\"avatar avatar-small\">\n\t\t\t<span class=\"avatar-empty\"></span>\n\t\t</div>`;\n\n\t\tlet assigned_users = JSON.parse(doc._assign || \"[]\");\n\t\tif (assigned_users.length) {\n\t\t\tassigned_to = `<div class=\"list-assignments\">\n\t\t\t\t\t${frappe.avatar_group(assigned_users, 3, { filterable: true })[0].outerHTML}\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tconst comment_count = `<span class=\"${\n\t\t\t!doc._comment_count ? \"text-extra-muted\" : \"\"\n\t\t} comment-count\">\n\t\t\t\t${frappe.utils.icon('small-message')}\n\t\t\t\t${doc._comment_count > 99 ? \"99+\" : doc._comment_count}\n\t\t\t</span>`;\n\n\t\thtml += `\n\t\t\t<div class=\"level-item list-row-activity hidden-xs\">\n\t\t\t\t<div class=\"hidden-md hidden-xs\">\n\t\t\t\t\t${settings_button || assigned_to}\n\t\t\t\t</div>\n\t\t\t\t${modified}\n\t\t\t\t${comment_count}\n\t\t\t</div>\n\t\t\t<div class=\"level-item visible-xs text-right\">\n\t\t\t\t${this.get_indicator_dot(doc)}\n\t\t\t</div>\n\t\t`;\n\n\t\treturn html;\n\t}\n\n\tget_count_str() {\n\t\tlet current_count = this.data.length;\n\t\tlet count_without_children = this.data.uniqBy((d) => d.name).length;\n\n\t\treturn frappe.db.count(this.doctype, {\n\t\t\tfilters: this.get_filters_for_args()\n\t\t}).then(total_count => {\n\t\t\tthis.total_count = total_count || current_count;\n\t\t\tthis.count_without_children = count_without_children !== current_count ? count_without_children : undefined;\n\t\t\tlet str = __('{0} of {1}', [current_count, this.total_count]);\n\t\t\tif (this.count_without_children) {\n\t\t\t\tstr = __('{0} of {1} ({2} rows with children)', [count_without_children, this.total_count, current_count]);\n\t\t\t}\n\t\t\treturn str;\n\t\t});\n\t}\n\n\tget_form_link(doc) {\n\t\tif (this.settings.get_form_link) {\n\t\t\treturn this.settings.get_form_link(doc);\n\t\t}\n\n\t\treturn `/app/${encodeURIComponent(\n\t\t\tfrappe.router.slug(frappe.router.doctype_layout || this.doctype)\n\t\t)}/${encodeURIComponent(cstr(doc.name))}`;\n\t}\n\n\tget_seen_class(doc) {\n\t\treturn JSON.parse(doc._seen || '[]').includes(frappe.session.user)\n\t\t\t? ''\n\t\t\t: 'bold';\n\t}\n\n\tget_like_html(doc) {\n\t\tconst liked_by = JSON.parse(doc._liked_by || \"[]\");\n\t\tconst heart_class = liked_by.includes(frappe.session.user)\n\t\t\t? \"liked-by liked\"\n\t\t\t: \"not-liked\";\n\t\tconst title = liked_by.map((u) => frappe.user_info(u).fullname).join(\", \");\n\n\t\tconst div = document.createElement(\"div\");\n\t\tdiv.innerHTML = `\n\t\t\t<span class=\"like-action ${heart_class}\">\n\t\t\t\t${frappe.utils.icon(\"heart\", \"sm\", \"like-icon\")}\n\t\t\t</span>\n\t\t\t<span class=\"likes-count\">\n\t\t\t\t${liked_by.length > 99 ? __(\"99\") + \"+\" : __(liked_by.length || \"\")}\n\t\t\t</span>\n\t\t`;\n\n\t\tconst like = div.querySelector(\".like-action\");\n\t\tlike.setAttribute(\"data-liked-by\", doc._liked_by || \"[]\");\n\t\tlike.setAttribute(\"data-doctype\", this.doctype);\n\t\tlike.setAttribute(\"data-name\", doc.name);\n\t\tlike.setAttribute(\"title\", title);\n\n\t\treturn div.innerHTML;\n\t}\n\n\tget_subject_html(doc) {\n\t\tlet subject_field = this.columns[0].df;\n\t\tlet value = doc[subject_field.fieldname];\n\t\tif (this.settings.formatters && this.settings.formatters[subject_field.fieldname]) {\n\t\t\tlet formatter = this.settings.formatters[subject_field.fieldname];\n\t\t\tvalue = formatter(value, subject_field, doc);\n\t\t}\n\t\tif (!value) {\n\t\t\tvalue = doc.name;\n\t\t}\n\n\t\tconst seen = this.get_seen_class(doc);\n\n\t\tconst div = document.createElement(\"div\");\n\t\tdiv.innerHTML = `\n\t\t\t<span class=\"level-item select-like\">\n\t\t\t\t<input class=\"list-row-checkbox\" type=\"checkbox\">\n\t\t\t\t<span class=\"list-row-like hidden-xs style=\"margin-bottom: 1px;\">\n\t\t\t\t\t${this.get_like_html(doc)}\n\t\t\t\t</span>\n\t\t\t</span>\n\t\t\t<span class=\"level-item ${seen} ellipsis\">\n\t\t\t\t<a class=\"ellipsis\"></a>\n\t\t\t</span>\n\t\t`;\n\n\t\tconst checkbox = div.querySelector(\".list-row-checkbox\");\n\t\tcheckbox.dataset.doctype = this.doctype;\n\t\tcheckbox.dataset.name = doc.name;\n\n\t\tconst link = div.querySelector(\".level-item a\");\n\t\tlink.dataset.doctype = this.doctype;\n\t\tlink.dataset.name = doc.name;\n\t\tlink.href = this.get_form_link(doc);\n\t\t// \"Text Editor\" and some other fieldtypes can have html tags in them so strip and show text.\n\t\t// If no text is found show \"No Text Found in {Field Label}\"\n\t\tlet textValue = frappe.utils.html2text(value);\n\t\tlink.title = textValue;\n\t\tlink.textContent = textValue;\n\n\t\treturn div.innerHTML;\n\t}\n\n\tget_indicator_html(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (indicator) {\n\t\t\treturn `<span class=\"indicator-pill ${indicator[1]} filterable ellipsis\"\n\t\t\t\tdata-filter='${indicator[2]}'>\n\t\t\t\t<span class=\"ellipsis\"> ${__(indicator[0])}</span>\n\t\t\t<span>`;\n\t\t}\n\t\treturn \"\";\n\t}\n\n\tget_indicator_dot(doc) {\n\t\tconst indicator = frappe.get_indicator(doc, this.doctype);\n\t\tif (!indicator) return \"\";\n\t\treturn `<span class='indicator ${indicator[1]}' title='${__(\n\t\t\tindicator[0]\n\t\t)}'></span>`;\n\t}\n\n\tget_image_url(doc) {\n\t\tlet url = doc.image ? doc.image : doc[this.meta.image_field];\n\t\t// absolute url for mobile\n\t\tif (window.cordova && !frappe.utils.is_url(url)) {\n\t\t\turl = frappe.base_url + url;\n\t\t}\n\t\treturn url || null;\n\t}\n\n\tsetup_events() {\n\t\tthis.setup_filterable();\n\t\tthis.setup_list_click();\n\t\tthis.setup_tag_event();\n\t\tthis.setup_new_doc_event();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_action_handler();\n\t\tthis.setup_keyboard_navigation();\n\t}\n\n\tsetup_keyboard_navigation() {\n\t\tlet focus_first_row = () => {\n\t\t\tthis.$result.find(\".list-row-container:first\").focus();\n\t\t};\n\t\tlet focus_next = () => {\n\t\t\t$(document.activeElement)\n\t\t\t\t.next()\n\t\t\t\t.focus();\n\t\t};\n\t\tlet focus_prev = () => {\n\t\t\t$(document.activeElement)\n\t\t\t\t.prev()\n\t\t\t\t.focus();\n\t\t};\n\t\tlet list_row_focused = () => {\n\t\t\treturn $(document.activeElement).is(\".list-row-container\");\n\t\t};\n\t\tlet check_row = ($row) => {\n\t\t\tlet $input = $row.find(\"input[type=checkbox]\");\n\t\t\t$input.click();\n\t\t};\n\t\tlet get_list_row_if_focused = () =>\n\t\t\tlist_row_focused() ? $(document.activeElement) : null;\n\n\t\tlet is_current_page = () => this.page.wrapper.is(\":visible\");\n\t\tlet is_input_focused = () => $(document.activeElement).is(\"input\");\n\n\t\tlet handle_navigation = (direction) => {\n\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\n\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\tif ($list_row) {\n\t\t\t\tdirection === \"down\" ? focus_next() : focus_prev();\n\t\t\t} else {\n\t\t\t\tfocus_first_row();\n\t\t\t}\n\t\t};\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"down\",\n\t\t\taction: () => handle_navigation(\"down\"),\n\t\t\tdescription: __(\"Navigate list down\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"up\",\n\t\t\taction: () => handle_navigation(\"up\"),\n\t\t\tdescription: __(\"Navigate list up\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+down\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_next();\n\t\t\t},\n\t\t\tdescription: __(\"Select multiple list items\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"shift+up\",\n\t\t\taction: () => {\n\t\t\t\tif (!is_current_page() || is_input_focused()) return false;\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tcheck_row($list_row);\n\t\t\t\tfocus_prev();\n\t\t\t},\n\t\t\tdescription: __(\"Select multiple list items\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"enter\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\t$list_row.find(\"a[data-name]\")[0].click();\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Open list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\n\t\tfrappe.ui.keys.add_shortcut({\n\t\t\tshortcut: \"space\",\n\t\t\taction: () => {\n\t\t\t\tlet $list_row = get_list_row_if_focused();\n\t\t\t\tif ($list_row) {\n\t\t\t\t\tcheck_row($list_row);\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tdescription: __(\"Select list item\", null, \"Description of a list view shortcut\"),\n\t\t\tpage: this.page,\n\t\t});\n\t}\n\n\tsetup_filterable() {\n\t\t// filterable events\n\t\tthis.$result.on(\"click\", \".filterable\", (e) => {\n\t\t\tif (e.metaKey || e.ctrlKey) return;\n\t\t\te.stopPropagation();\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\tconst filters = $this.attr(\"data-filter\").split(\"|\");\n\t\t\tconst filters_to_apply = filters.map((f) => {\n\t\t\t\tf = f.split(\",\");\n\t\t\t\tif (f[2] === \"Today\") {\n\t\t\t\t\tf[2] = frappe.datetime.get_today();\n\t\t\t\t} else if (f[2] == \"User\") {\n\t\t\t\t\tf[2] = frappe.session.user;\n\t\t\t\t}\n\t\t\t\tthis.filter_area.remove(f[0]);\n\t\t\t\treturn [this.doctype, f[0], f[1], f.slice(2).join(\",\")];\n\t\t\t});\n\t\t\tthis.filter_area.add(filters_to_apply);\n\t\t});\n\t}\n\n\tsetup_list_click() {\n\t\tthis.$result.on(\"click\", \".list-row, .image-view-header, .file-header\", (e) => {\n\t\t\tconst $target = $(e.target);\n\t\t\t// tick checkbox if Ctrl/Meta key is pressed\n\t\t\tif (e.ctrlKey || (e.metaKey && !$target.is(\"a\"))) {\n\t\t\t\tconst $list_row = $(e.currentTarget);\n\t\t\t\tconst $check = $list_row.find(\".list-row-checkbox\");\n\t\t\t\t$check.prop(\"checked\", !$check.prop(\"checked\"));\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.on_row_checked();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// don't open form when checkbox, like, filterable are clicked\n\t\t\tif (\n\t\t\t\t$target.hasClass(\"filterable\") ||\n\t\t\t\t$target.hasClass(\"select-like\") ||\n\t\t\t\t$target.hasClass(\"file-select\") ||\n\t\t\t\t$target.hasClass(\"list-row-like\") ||\n\t\t\t\t$target.is(\":checkbox\")\n\t\t\t) {\n\t\t\t\te.stopPropagation();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// link, let the event be handled via set_route\n\t\t\tif ($target.is(\"a\")) return;\n\n\t\t\t// clicked on the row, open form\n\t\t\tconst $row = $(e.currentTarget);\n\t\t\tconst link = $row.find(\".list-subject a\").get(0);\n\t\t\tif (link) {\n\t\t\t\tfrappe.set_route(link.pathname);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_action_handler() {\n\t\tthis.$result.on(\"click\", \".btn-action\", (e) => {\n\t\t\tconst $button = $(e.currentTarget);\n\t\t\tconst doc = this.data[$button.attr(\"data-idx\")];\n\t\t\tthis.settings.button.action(doc);\n\t\t\te.stopPropagation();\n\t\t\treturn false;\n\t\t});\n\t}\n\n\tsetup_check_events() {\n\t\tthis.$result.on(\"change\", \"input[type=checkbox]\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\tif ($target.is(\".list-header-subject .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\n\t\t\t\t\t\".checkbox-actions .list-check-all\"\n\t\t\t\t);\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t\t$check.trigger(\"change\");\n\t\t\t} else if ($target.is(\".checkbox-actions .list-check-all\")) {\n\t\t\t\tconst $check = this.$result.find(\n\t\t\t\t\t\".list-header-subject .list-check-all\"\n\t\t\t\t);\n\t\t\t\t$check.prop(\"checked\", $target.prop(\"checked\"));\n\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(\".list-row-checkbox\")\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t} else if ($target.attr('data-parent')) {\n\t\t\t\tthis.$result\n\t\t\t\t\t.find(`.${$target.attr('data-parent')}`)\n\t\t\t\t\t.find('.list-row-checkbox')\n\t\t\t\t\t.prop(\"checked\", $target.prop(\"checked\"));\n\t\t\t}\n\n\t\t\tthis.on_row_checked();\n\t\t});\n\n\t\tthis.$result.on(\"click\", \".list-row-checkbox\", (e) => {\n\t\t\tconst $target = $(e.currentTarget);\n\n\t\t\t// shift select checkboxes\n\t\t\tif (\n\t\t\t\te.shiftKey &&\n\t\t\t\tthis.$checkbox_cursor &&\n\t\t\t\t!$target.is(this.$checkbox_cursor)\n\t\t\t) {\n\t\t\t\tconst name_1 = this.$checkbox_cursor.data().name;\n\t\t\t\tconst name_2 = $target.data().name;\n\t\t\t\tconst index_1 = this.data.findIndex((d) => d.name === name_1);\n\t\t\t\tconst index_2 = this.data.findIndex((d) => d.name === name_2);\n\t\t\t\tlet [min_index, max_index] = [index_1, index_2];\n\n\t\t\t\tif (min_index > max_index) {\n\t\t\t\t\t[min_index, max_index] = [max_index, min_index];\n\t\t\t\t}\n\n\t\t\t\tlet docnames = this.data\n\t\t\t\t\t.slice(min_index + 1, max_index)\n\t\t\t\t\t.map((d) => d.name);\n\t\t\t\tconst selector = docnames\n\t\t\t\t\t.map((name) => `.list-row-checkbox[data-name=\"${name}\"]`)\n\t\t\t\t\t.join(\",\");\n\t\t\t\tthis.$result.find(selector).prop(\"checked\", true);\n\t\t\t}\n\n\t\t\tthis.$checkbox_cursor = $target;\n\n\t\t\tthis.update_checkbox($target);\n\t\t});\n\t}\n\n\tsetup_like() {\n\t\tthis.$result.on(\"click\", \".like-action\", frappe.ui.click_toggle_like);\n\t\tthis.$result.on(\"click\", \".list-liked-by-me\", (e) => {\n\t\t\tconst $this = $(e.currentTarget);\n\t\t\t$this.toggleClass(\"active\");\n\n\t\t\tif ($this.hasClass(\"active\")) {\n\t\t\t\tthis.filter_area.add(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\t\"_liked_by\",\n\t\t\t\t\t\"like\",\n\t\t\t\t\t\"%\" + frappe.session.user + \"%\"\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthis.filter_area.remove(\"_liked_by\");\n\t\t\t}\n\t\t});\n\n\t}\n\n\tsetup_new_doc_event() {\n\t\tthis.$no_result.find(\".btn-new-doc\").click(() => {\n\t\t\tif (this.settings.primary_action) {\n\t\t\t\tthis.settings.primary_action();\n\t\t\t} else {\n\t\t\t\tthis.make_new_doc();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_tag_event() {\n\t\tthis.tags_shown = false;\n\t\tthis.list_sidebar && this.list_sidebar.parent.on(\"click\", \".list-tag-preview\", () => {\n\t\t\tthis.tags_shown = !this.tags_shown;\n\t\t\tthis.toggle_tags();\n\t\t});\n\t}\n\n\tsetup_realtime_updates() {\n\t\tthis.pending_document_refreshes = [];\n\n\t\tif (this.list_view_settings && this.list_view_settings.disable_auto_refresh) {\n\t\t\treturn;\n\t\t}\n\n\t\tfrappe.socketio.doctype_subscribe(this.doctype);\n\t\tfrappe.realtime.on(\"list_update\", (data) => {\n\t\t\tif (!data || (data.doctype !== this.doctype)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if some bulk operation is happening by selecting list items, don't refresh\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.filter_area.is_being_edited()) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.pending_document_refreshes.push(data);\n\t\t\tfrappe.utils.debounce(this.process_document_refreshes.bind(this), 1000)();\n\t\t});\n\t}\n\n\tprocess_document_refreshes() {\n\t\tif (!this.pending_document_refreshes.length) return;\n\n\t\tconst route = frappe.get_route() || [];\n\t\tif (!cur_list || route[0] != \"List\" || cur_list.doctype != route[1]) {\n\t\t\t// wait till user is back on list view before refreshing\n\t\t\tthis.pending_document_refreshes = [];\n\t\t\treturn;\n\t\t}\n\n\t\tconst names = this.pending_document_refreshes.map((d) => d.name);\n\t\tthis.pending_document_refreshes = this.pending_document_refreshes.filter(\n\t\t\t(d) => names.indexOf(d.name) === -1\n\t\t);\n\n\t\tif (!names.length) return;\n\n\t\t// filters to get only the doc with this name\n\t\tconst call_args = this.get_call_args();\n\t\tcall_args.args.filters.push([this.doctype, \"name\", \"in\", names]);\n\t\tcall_args.args.start = 0;\n\n\t\tfrappe.call(call_args).then(({ message }) => {\n\t\t\tif (!message) return;\n\t\t\tconst data = frappe.utils.dict(message.keys, message.values);\n\n\t\t\tif (!(data && data.length)) {\n\t\t\t\t// this doc was changed and should not be visible\n\t\t\t\t// in the listview according to filters applied\n\t\t\t\t// let's remove it manually\n\t\t\t\tthis.data = this.data.filter((d) => names.indexOf(d.name) === -1);\n\t\t\t\tthis.render_list();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tdata.forEach((datum) => {\n\t\t\t\tconst index = this.data.findIndex((doc) => doc.name === datum.name);\n\n\t\t\t\tif (index === -1) {\n\t\t\t\t\t// append new data\n\t\t\t\t\tthis.data.push(datum);\n\t\t\t\t} else {\n\t\t\t\t\t// update this data in place\n\t\t\t\t\tthis.data[index] = datum;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tconst a_value = a[this.sort_by] || \"\";\n\t\t\t\tconst b_value = b[this.sort_by] || \"\";\n\n\t\t\t\tlet return_value = 0;\n\t\t\t\tif (a_value > b_value) {\n\t\t\t\t\treturn_value = 1;\n\t\t\t\t}\n\n\t\t\t\tif (b_value > a_value) {\n\t\t\t\t\treturn_value = -1;\n\t\t\t\t}\n\n\t\t\t\tif (this.sort_order === \"desc\") {\n\t\t\t\t\treturn_value = -return_value;\n\t\t\t\t}\n\t\t\t\treturn return_value;\n\t\t\t});\n\t\t\tthis.toggle_result_area();\n\t\t\tthis.render_list();\n\t\t\tif (this.$checks && this.$checks.length) {\n\t\t\t\tthis.set_rows_as_checked();\n\t\t\t}\n\t\t});\n\t}\n\n\tset_rows_as_checked() {\n\t\t$.each(this.$checks, (i, el) => {\n\t\t\tlet docname = $(el).attr(\"data-name\");\n\t\t\tthis.$result\n\t\t\t\t.find(`.list-row-checkbox[data-name='${docname}']`)\n\t\t\t\t.prop(\"checked\", true);\n\t\t});\n\t\tthis.on_row_checked();\n\t}\n\n\ton_row_checked() {\n\t\tthis.$list_head_subject =\n\t\t\tthis.$list_head_subject ||\n\t\t\tthis.$result.find(\"header .list-header-subject\");\n\t\tthis.$checkbox_actions =\n\t\t\tthis.$checkbox_actions ||\n\t\t\tthis.$result.find(\"header .checkbox-actions\");\n\n\t\tthis.$checks = this.$result.find(\".list-row-checkbox:checked\");\n\n\t\tthis.$list_head_subject.toggle(this.$checks.length === 0);\n\t\tthis.$checkbox_actions.toggle(this.$checks.length > 0);\n\n\t\tif (this.$checks.length === 0) {\n\t\t\tthis.$list_head_subject\n\t\t\t\t.find(\".list-check-all\")\n\t\t\t\t.prop(\"checked\", false);\n\t\t} else {\n\t\t\tthis.$checkbox_actions\n\t\t\t\t.find(\".list-header-meta\")\n\t\t\t\t.html(__(\"{0} items selected\", [this.$checks.length]));\n\t\t\tthis.$checkbox_actions.show();\n\t\t\tthis.$list_head_subject.hide();\n\t\t}\n\t\tthis.update_checkbox();\n\t\tthis.toggle_actions_menu_button(this.$checks.length > 0);\n\t}\n\n\ttoggle_tags() {\n\t\tthis.$result.find('.tag-col').toggleClass(\"hide\");\n\t\tconst preview_label = this.tags_shown ? __(\"Hide Tags\") : __(\"Show Tags\");\n\t\tthis.list_sidebar.parent.find(\".list-tag-preview\").text(preview_label);\n\t}\n\n\tget_checked_items(only_docnames) {\n\t\tconst docnames = Array.from(this.$checks || []).map((check) =>\n\t\t\tcstr(unescape($(check).data().name))\n\t\t);\n\n\t\tif (only_docnames) return docnames;\n\n\t\treturn this.data.filter((d) => docnames.includes(d.name));\n\t}\n\n\tsave_view_user_settings(obj) {\n\t\treturn frappe.model.user_settings.save(\n\t\t\tthis.doctype,\n\t\t\tthis.view_name,\n\t\t\tobj\n\t\t);\n\t}\n\n\ton_update() {}\n\n\tget_share_url() {\n\t\tconst query_params = this.get_filters_for_args()\n\t\t\t.map((filter) => {\n\t\t\t\tfilter[3] = encodeURIComponent(filter[3]);\n\t\t\t\tif (filter[2] === \"=\") {\n\t\t\t\t\treturn `${filter[1]}=${filter[3]}`;\n\t\t\t\t}\n\t\t\t\treturn [\n\t\t\t\t\tfilter[1],\n\t\t\t\t\t\"=\",\n\t\t\t\t\tencodeURIComponent(JSON.stringify([filter[2], filter[3]])),\n\t\t\t\t].join(\"\");\n\t\t\t})\n\t\t\t.join(\"&\");\n\n\t\tlet full_url = window.location.href;\n\t\tif (query_params) {\n\t\t\tfull_url += \"?\" + query_params;\n\t\t}\n\t\treturn full_url;\n\t}\n\n\tshare_url() {\n\t\tconst d = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Share URL\"),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"Code\",\n\t\t\t\t\tfieldname: \"url\",\n\t\t\t\t\tlabel: \"URL\",\n\t\t\t\t\tdefault: this.get_share_url(),\n\t\t\t\t\tread_only: 1,\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __(\"Copy to clipboard\"),\n\t\t\tprimary_action: () => {\n\t\t\t\tfrappe.utils.copy_to_clipboard(this.get_share_url());\n\t\t\t\td.hide();\n\t\t\t},\n\t\t});\n\t\td.show();\n\t}\n\n\tget_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst items = [];\n\n\t\tif (frappe.model.can_import(doctype)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Import\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"data-import\", {\n\t\t\t\t\t\treference_doctype: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.model.can_set_user_permissions(doctype)) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"User Permissions\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"list\", \"user-permission\", {\n\t\t\t\t\t\tallow: doctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user_roles.includes(\"System Manager\")) {\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Role Permissions Manager\", null, \"Button in list view menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tfrappe.set_route(\"permission-manager\", {\n\t\t\t\t\t\tdoctype,\n\t\t\t\t\t}),\n\t\t\t\tstandard: true,\n\t\t\t});\n\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Customize\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tif (!this.meta) return;\n\t\t\t\t\tif (this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"doctype\", doctype);\n\t\t\t\t\t} else if (!this.meta.custom) {\n\t\t\t\t\t\tfrappe.set_route(\"form\", \"customize-form\", {\n\t\t\t\t\t\t\tdoc_type: doctype,\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t\tshortcut: \"Ctrl+J\",\n\t\t\t});\n\t\t}\n\n\t\titems.push({\n\t\t\tlabel: __(\"Toggle Sidebar\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.toggle_side_bar(),\n\t\t\tcondition: () => !this.hide_sidebar,\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+K\",\n\t\t});\n\n\t\titems.push({\n\t\t\tlabel: __(\"Share URL\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.share_url(),\n\t\t\tstandard: true,\n\t\t\tshortcut: \"Ctrl+L\",\n\t\t});\n\n\t\tif (\n\t\t\tfrappe.user.has_role(\"System Manager\") &&\n\t\t\tfrappe.boot.developer_mode === 1\n\t\t) {\n\t\t\t// edit doctype\n\t\t\titems.push({\n\t\t\t\tlabel: __(\"Edit DocType\", null, \"Button in list view menu\"),\n\t\t\t\taction: () => frappe.set_route(\"form\", \"doctype\", doctype),\n\t\t\t\tstandard: true,\n\t\t\t});\n\t\t}\n\n\t\tif (frappe.user.has_role(\"System Manager\")) {\n\t\t\tif (this.get_view_settings) {\n\t\t\t\titems.push(this.get_view_settings());\n\t\t\t}\n\t\t}\n\n\t\treturn items;\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"List Settings\", null, \"Button in list view menu\"),\n\t\t\taction: () => this.show_list_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_list_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew ListSettings({\n\t\t\t\tlistview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.list_view_settings,\n\t\t\t\tmeta: frappe.get_meta(this.doctype)\n\t\t\t});\n\t\t});\n\t}\n\n\tget_workflow_action_menu_items() {\n\t\tconst workflow_actions = [];\n\t\tif (frappe.model.has_workflow(this.doctype)) {\n\t\t\tconst actions = frappe.workflow.get_all_transition_actions(\n\t\t\t\tthis.doctype\n\t\t\t);\n\t\t\tactions.forEach((action) => {\n\t\t\t\tworkflow_actions.push({\n\t\t\t\t\tlabel: __(action),\n\t\t\t\t\tname: action,\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tfrappe.xcall(\n\t\t\t\t\t\t\t\"frappe.model.workflow.bulk_workflow_approval\",\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tdocnames: this.get_checked_items(true),\n\t\t\t\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\t\t\t\taction: action,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t\tis_workflow_action: true,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\treturn workflow_actions;\n\t}\n\n\ttoggle_workflow_actions() {\n\t\tif (!frappe.model.has_workflow(this.doctype)) return;\n\t\tconst checked_items = this.get_checked_items();\n\t\tfrappe\n\t\t\t.xcall(\"frappe.model.workflow.get_common_transition_actions\", {\n\t\t\t\tdocs: checked_items,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t})\n\t\t\t.then((actions) => {\n\t\t\t\tObject.keys(this.workflow_action_items).forEach((key) => {\n\t\t\t\t\tthis.workflow_action_items[key].toggle(\n\t\t\t\t\t\tactions.includes(key)\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tget_actions_menu_items() {\n\t\tconst doctype = this.doctype;\n\t\tconst actions_menu_items = [];\n\t\tconst bulk_operations = new BulkOperations({ doctype: this.doctype });\n\n\t\tconst is_field_editable = (field_doc) => {\n\t\t\treturn (\n\t\t\t\tfield_doc.fieldname &&\n\t\t\t\tfrappe.model.is_value_type(field_doc) &&\n\t\t\t\tfield_doc.fieldtype !== \"Read Only\" &&\n\t\t\t\t!field_doc.hidden &&\n\t\t\t\t!field_doc.read_only\n\t\t\t);\n\t\t};\n\n\t\tconst has_editable_fields = (doctype) => {\n\t\t\treturn frappe.meta\n\t\t\t\t.get_docfields(doctype)\n\t\t\t\t.some((field_doc) => is_field_editable(field_doc));\n\t\t};\n\n\t\tconst has_submit_permission = (doctype) => {\n\t\t\treturn frappe.perm.has_perm(doctype, 0, \"submit\");\n\t\t};\n\n\t\t// utility\n\t\tconst bulk_assignment = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Assign To\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tbulk_operations.assign(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_assignment_rule = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Apply Assignment Rule\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tbulk_operations.apply_assignment_rule(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_add_tags = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Add Tags\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () =>\n\t\t\t\t\tbulk_operations.add_tags(\n\t\t\t\t\t\tthis.get_checked_items(true),\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_printing = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Print\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => bulk_operations.print(this.get_checked_items()),\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_delete = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Delete\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true).map(\n\t\t\t\t\t\t(docname) => docname.toString()\n\t\t\t\t\t);\n\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t__(\"Delete {0} items permanently?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t() => bulk_operations.delete(docnames, this.refresh)\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_cancel = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Cancel\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\"Cancel {0} documents?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(\n\t\t\t\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\t\t\t\t\"cancel\",\n\t\t\t\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_submit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Submit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\t\t\t\t\tif (docnames.length > 0) {\n\t\t\t\t\t\tfrappe.confirm(\n\t\t\t\t\t\t\t__(\"Submit {0} documents?\", [docnames.length], \"Title of confirmation dialog\"),\n\t\t\t\t\t\t\t() =>\n\t\t\t\t\t\t\t\tbulk_operations.submit_or_cancel(\n\t\t\t\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\t\t\t\t\"submit\",\n\t\t\t\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\tconst bulk_edit = () => {\n\t\t\treturn {\n\t\t\t\tlabel: __(\"Edit\", null, \"Button in list view actions menu\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tlet field_mappings = {};\n\n\t\t\t\t\tfrappe.meta.get_docfields(doctype).forEach((field_doc) => {\n\t\t\t\t\t\tif (is_field_editable(field_doc)) {\n\t\t\t\t\t\t\tfield_mappings[field_doc.label] = Object.assign(\n\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\tfield_doc\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tconst docnames = this.get_checked_items(true);\n\n\t\t\t\t\tbulk_operations.edit(\n\t\t\t\t\t\tdocnames,\n\t\t\t\t\t\tfield_mappings,\n\t\t\t\t\t\tthis.refresh\n\t\t\t\t\t);\n\t\t\t\t},\n\t\t\t\tstandard: true,\n\t\t\t};\n\t\t};\n\n\t\t// bulk edit\n\t\tif (has_editable_fields(doctype)) {\n\t\t\tactions_menu_items.push(bulk_edit());\n\t\t}\n\n\t\t// bulk assignment\n\t\tactions_menu_items.push(bulk_assignment());\n\n\t\tactions_menu_items.push(bulk_assignment_rule());\n\n\t\tactions_menu_items.push(bulk_add_tags());\n\n\t\t// bulk printing\n\t\tif (frappe.model.can_print(doctype)) {\n\t\t\tactions_menu_items.push(bulk_printing());\n\t\t}\n\n\t\t// bulk submit\n\t\tif (\n\t\t\tfrappe.model.is_submittable(doctype) &&\n\t\t\thas_submit_permission(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_submit());\n\t\t}\n\n\t\t// bulk cancel\n\t\tif (\n\t\t\tfrappe.model.can_cancel(doctype) &&\n\t\t\t!frappe.model.has_workflow(doctype)\n\t\t) {\n\t\t\tactions_menu_items.push(bulk_cancel());\n\t\t}\n\n\t\t// bulk delete\n\t\tif (frappe.model.can_delete(doctype)) {\n\t\t\tactions_menu_items.push(bulk_delete());\n\t\t}\n\n\t\treturn actions_menu_items;\n\t}\n\n\tparse_filters_from_route_options() {\n\t\tconst filters = [];\n\n\t\tfor (let field in frappe.route_options) {\n\t\t\tlet doctype = null;\n\t\t\tlet value = frappe.route_options[field];\n\n\t\t\tlet value_array;\n\t\t\tif (\n\t\t\t\t$.isArray(value) &&\n\t\t\t\tvalue[0].startsWith(\"[\") &&\n\t\t\t\tvalue[0].endsWith(\"]\")\n\t\t\t) {\n\t\t\t\tvalue_array = [];\n\t\t\t\tfor (var i = 0; i < value.length; i++) {\n\t\t\t\t\tvalue_array.push(JSON.parse(value[i]));\n\t\t\t\t}\n\t\t\t} else if (\n\t\t\t\ttypeof value === \"string\" &&\n\t\t\t\tvalue.startsWith(\"[\") &&\n\t\t\t\tvalue.endsWith(\"]\")\n\t\t\t) {\n\t\t\t\tvalue = JSON.parse(value);\n\t\t\t}\n\n\t\t\t// if `Child DocType.fieldname`\n\t\t\tif (field.includes(\".\")) {\n\t\t\t\tdoctype = field.split(\".\")[0];\n\t\t\t\tfield = field.split(\".\")[1];\n\t\t\t}\n\n\t\t\t// find the table in which the key exists\n\t\t\t// for example the filter could be {\"item_code\": \"X\"}\n\t\t\t// where item_code is in the child table.\n\n\t\t\t// we can search all tables for mapping the doctype\n\t\t\tif (!doctype) {\n\t\t\t\tdoctype = frappe.meta.get_doctype_for_field(\n\t\t\t\t\tthis.doctype,\n\t\t\t\t\tfield\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (doctype) {\n\t\t\t\tif (value_array) {\n\t\t\t\t\tfor (var j = 0; j < value_array.length; j++) {\n\t\t\t\t\t\tif ($.isArray(value_array[j])) {\n\t\t\t\t\t\t\tfilters.push([\n\t\t\t\t\t\t\t\tdoctype,\n\t\t\t\t\t\t\t\tfield,\n\t\t\t\t\t\t\t\tvalue_array[j][0],\n\t\t\t\t\t\t\t\tvalue_array[j][1],\n\t\t\t\t\t\t\t]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfilters.push([doctype, field, \"=\", value_array[j]]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ($.isArray(value)) {\n\t\t\t\t\tfilters.push([doctype, field, value[0], value[1]]);\n\t\t\t\t} else {\n\t\t\t\t\tfilters.push([doctype, field, \"=\", value]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tstatic trigger_list_update(data) {\n\t\tconst doctype = data.doctype;\n\t\tif (!doctype) return;\n\t\tfrappe.provide(\"frappe.views.trees\");\n\n\t\t// refresh list view\n\t\tconst page_name = frappe.get_route_str();\n\t\tconst list_view = frappe.views.list_view[page_name];\n\t\tif (\n\t\t\tlist_view && list_view.list_view_settings &&\n\t\t\t!list_view.list_view_settings.disable_auto_refresh\n\t\t) {\n\t\t\tlist_view.on_update(data);\n\t\t}\n\t}\n};\n\n$(document).on(\"save\", (event, doc) => {\n\tfrappe.views.ListView.trigger_list_update(doc);\n});\n\nfrappe.get_list_view = (doctype) => {\n\tlet route = `List/${doctype}/List`;\n\treturn frappe.views.list_view[route];\n};\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide('frappe.views.list_view');\n\nwindow.cur_list = null;\nfrappe.views.ListFactory = class ListFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tvar me = this;\n\t\tvar doctype = route[1];\n\n\t\tfrappe.model.with_doctype(doctype, function () {\n\t\t\tif (locals['DocType'][doctype].issingle) {\n\t\t\t\tfrappe.set_re_route('Form', doctype);\n\t\t\t} else {\n\t\t\t\t// List / Gantt / Kanban / etc\n\t\t\t\tlet view_name = frappe.utils.to_title_case(route[2] || 'List');\n\n\t\t\t\t// File is a special view\n\t\t\t\tif (doctype == \"File\" && ![\"Report\", \"Dashboard\"].includes(view_name)) {\n\t\t\t\t\tview_name = \"File\";\n\t\t\t\t}\n\n\t\t\t\tlet view_class = frappe.views[view_name + 'View'];\n\t\t\t\tif (!view_class) view_class = frappe.views.ListView;\n\n\t\t\t\tif (view_class && view_class.load_last_view && view_class.load_last_view()) {\n\t\t\t\t\t// view can have custom routing logic\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfrappe.provide('frappe.views.list_view.' + doctype);\n\t\t\t\tconst page_name = frappe.get_route_str();\n\n\t\t\t\tif (!frappe.views.list_view[page_name]) {\n\t\t\t\t\tfrappe.views.list_view[page_name] = new view_class({\n\t\t\t\t\t\tdoctype: doctype,\n\t\t\t\t\t\tparent: me.make_page(true, page_name)\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.container.change_to(page_name);\n\t\t\t\t}\n\t\t\t\tme.set_cur_list();\n\t\t\t}\n\t\t});\n\t}\n\n\tshow() {\n\t\tif (this.re_route_to_view()) {\n\t\t\treturn;\n\t\t}\n\t\tthis.set_module_breadcrumb();\n\t\tsuper.show();\n\t\tthis.set_cur_list();\n\t\tcur_list && cur_list.show();\n\t}\n\n\tre_route_to_view() {\n\t\tvar route = frappe.get_route();\n\t\tvar doctype = route[1];\n\t\tvar last_route = frappe.route_history.slice(-2)[0];\n\t\tif (route[0] === 'List' && route.length === 2 && frappe.views.list_view[doctype]) {\n\t\t\tif(last_route && last_route[0]==='List' && last_route[1]===doctype) {\n\t\t\t\t// last route same as this route, so going back.\n\t\t\t\t// this happens because /app/List/Item will redirect to /app/List/Item/List\n\t\t\t\t// while coming from back button, the last 2 routes will be same, so\n\t\t\t\t// we know user is coming in the reverse direction (via back button)\n\n\t\t\t\t// example:\n\t\t\t\t// Step 1: /app/List/Item redirects to /app/List/Item/List\n\t\t\t\t// Step 2: User hits \"back\" comes back to /app/List/Item\n\t\t\t\t// Step 3: Now we cannot send the user back to /app/List/Item/List so go back one more step\n\t\t\t\twindow.history.go(-1);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\tset_module_breadcrumb() {\n\t\tif (frappe.route_history.length > 1) {\n\t\t\tvar prev_route = frappe.route_history[frappe.route_history.length - 2];\n\t\t\tif (prev_route[0] === 'modules') {\n\t\t\t\tvar doctype = frappe.get_route()[1],\n\t\t\t\t\tmodule = prev_route[1];\n\t\t\t\tif (frappe.module_links[module] && frappe.module_links[module].includes(doctype)) {\n\t\t\t\t\t// save the last page from the breadcrumb was accessed\n\t\t\t\t\tfrappe.breadcrumbs.set_doctype_module(doctype, module);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tset_cur_list() {\n\t\tvar route = frappe.get_route();\n\t\tvar page_name = frappe.get_route_str();\n\t\tcur_list = frappe.views.list_view[page_name];\n\t\tif (cur_list && cur_list.doctype !== route[1]) {\n\t\t\t// changing...\n\t\t\twindow.cur_list = null;\n\t\t}\n\t}\n}\n","frappe.provide(\"frappe.views\");\n\nfrappe.views.ListViewSelect = class ListViewSelect {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.set_current_view();\n\t\tthis.setup_views();\n\t}\n\n\tadd_view_to_menu(view, action) {\n\t\tif (this.doctype == \"File\" && view == \"List\") {\n\t\t\tview = \"File\";\n\t\t}\n\t\tlet $el = this.page.add_custom_menu_item(\n\t\t\tthis.parent,\n\t\t\t__(view),\n\t\t\taction,\n\t\t\ttrue,\n\t\t\tnull,\n\t\t\tthis.icon_map[view] || \"list\"\n\t\t);\n\t\t$el.parent().attr(\"data-view\", view);\n\t}\n\n\tset_current_view() {\n\t\tthis.current_view = \"List\";\n\t\tconst route = frappe.get_route();\n\t\tconst view_name = frappe.utils.to_title_case(route[2] || \"\");\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(view_name)) {\n\t\t\tthis.current_view = view_name;\n\n\t\t\tif (this.current_view === \"Kanban\") {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === \"Inbox\") {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\t}\n\n\tset_route(view, calendar_name) {\n\t\tconst route = [this.slug(), \"view\", view];\n\t\tif (calendar_name) route.push(calendar_name);\n\t\tfrappe.set_route(route);\n\t}\n\n\tsetup_views() {\n\t\tconst views = {\n\t\t\tList: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"list\")\n\t\t\t},\n\t\t\tReport: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"report\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst reports = this.get_reports();\n\t\t\t\t\tlet default_action = {};\n\t\t\t\t\t// Only add action if current route is not report builder\n\t\t\t\t\tif (frappe.get_route().length > 3) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"Report Builder\"),\n\t\t\t\t\t\t\taction: () => this.set_route(\"report\")\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Report\", reports, default_action);\n\t\t\t\t}\n\t\t\t},\n\t\t\tDashboard: {\n\t\t\t\tcondition: true,\n\t\t\t\taction: () => this.set_route(\"dashboard\")\n\t\t\t},\n\t\t\tCalendar: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"calendar\", \"default\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tthis.get_calendars().then(calendars => {\n\t\t\t\t\t\tthis.setup_dropdown_in_sidebar(\"Calendar\", calendars);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\tGantt: {\n\t\t\t\tcondition: frappe.views.calendar[this.doctype],\n\t\t\t\taction: () => this.set_route(\"gantt\")\n\t\t\t},\n\t\t\tInbox: {\n\t\t\t\tcondition:\n\t\t\t\t\tthis.doctype === \"Communication\" &&\n\t\t\t\t\tfrappe.boot.email_accounts.length,\n\t\t\t\taction: () => this.set_route(\"inbox\"),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tconst accounts = this.get_email_accounts();\n\t\t\t\t\tlet default_action;\n\t\t\t\t\tif (\n\t\t\t\t\t\thas_common(frappe.user_roles, [\n\t\t\t\t\t\t\t\"System Manager\",\n\t\t\t\t\t\t\t\"Administrator\"\n\t\t\t\t\t\t])\n\t\t\t\t\t) {\n\t\t\t\t\t\tdefault_action = {\n\t\t\t\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t\t\t\t\taction: () => frappe.new_doc(\"Email Account\")\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t\tthis.setup_dropdown_in_sidebar(\n\t\t\t\t\t\t\"Inbox\",\n\t\t\t\t\t\taccounts,\n\t\t\t\t\t\tdefault_action\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tImage: {\n\t\t\t\tcondition: this.list_view.meta.image_field,\n\t\t\t\taction: () => this.set_route(\"image\")\n\t\t\t},\n\t\t\tTree: {\n\t\t\t\tcondition:\n\t\t\t\t\tfrappe.treeview_settings[this.doctype] ||\n\t\t\t\t\tfrappe.get_meta(this.doctype).is_tree,\n\t\t\t\taction: () => this.set_route(\"tree\")\n\t\t\t},\n\t\t\tKanban: {\n\t\t\t\tcondition: this.doctype != \"File\",\n\t\t\t\taction: () => this.setup_kanban_boards(),\n\t\t\t\tcurrent_view_handler: () => {\n\t\t\t\t\tfrappe.views.KanbanView.get_kanbans(this.doctype).then(\n\t\t\t\t\t\tkanbans => this.setup_kanban_switcher(kanbans)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\tMap: {\n\t\t\t\tcondition: this.list_view.settings.get_coords_method ||\n\t\t\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\t\t\tthis.list_view.meta.fields.find(i => i.fieldname === \"longitude\")) ||\n\t\t\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype == 'Geolocation')),\n\t\t\t\taction: () => this.set_route(\"map\")\n\t\t\t},\n\t\t};\n\n\t\tfrappe.views.view_modes.forEach(view => {\n\t\t\tif (this.current_view !== view && views[view].condition) {\n\t\t\t\tthis.add_view_to_menu(view, views[view].action);\n\t\t\t}\n\n\t\t\tif (this.current_view == view) {\n\t\t\t\tviews[view].current_view_handler &&\n\t\t\t\t\tviews[view].current_view_handler();\n\t\t\t}\n\t\t});\n\t}\n\n\tsetup_dropdown_in_sidebar(view, items, default_action) {\n\t\tif (!this.sidebar) return;\n\t\tconst views_wrapper = this.sidebar.sidebar.find(\".views-section\");\n\t\tviews_wrapper.find(\".sidebar-label\").html(`${__(view)}`);\n\t\tconst $dropdown = views_wrapper.find(\".views-dropdown\");\n\n\t\tlet placeholder = `${__(\"Select {0}\", [__(view)])}`;\n\t\tlet html = ``;\n\n\t\tif (!items || !items.length) {\n\t\t\thtml = `<div class=\"empty-state\">\n\t\t\t\t\t\t${__(\"No {0} Found\", [__(view)])}\n\t\t\t\t</div>`;\n\t\t} else {\n\t\t\tconst page_name = this.get_page_name();\n\t\t\titems.map(item => {\n\t\t\t\tif (item.name.toLowerCase() == page_name.toLowerCase()) {\n\t\t\t\t\tplaceholder = item.name;\n\t\t\t\t} else {\n\t\t\t\t\thtml += `<li><a class=\"dropdown-item\" href=\"${item.route}\">${\n\t\t\t\t\t\titem.name\n\t\t\t\t\t}</a></li>`;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tviews_wrapper.find(\".selected-view\").html(placeholder);\n\n\t\tif (default_action) {\n\t\t\tviews_wrapper.find(\".sidebar-action a\").html(default_action.label);\n\t\t\tviews_wrapper\n\t\t\t\t.find(\".sidebar-action a\")\n\t\t\t\t.click(() => default_action.action());\n\t\t}\n\n\t\t$dropdown.html(html);\n\n\t\tviews_wrapper.removeClass(\"hide\");\n\t}\n\n\tsetup_kanban_switcher(kanbans) {\n\t\tconst kanban_switcher = this.page.add_custom_button_group(\n\t\t\t__(\"Select Kanban\"),\n\t\t\tnull,\n\t\t\tthis.list_view.$filter_section\n\t\t);\n\n\t\tkanbans.map(k => {\n\t\t\tthis.page.add_custom_menu_item(\n\t\t\t\tkanban_switcher,\n\t\t\t\tk.name,\n\t\t\t\t() => this.set_route(\"kanban\", k.name),\n\t\t\t\tfalse\n\t\t\t);\n\t\t});\n\n\t\tthis.page.add_custom_menu_item(\n\t\t\tkanban_switcher,\n\t\t\t__(\"Create New Kanban Board\"),\n\t\t\t() => frappe.views.KanbanView.show_kanban_dialog(this.doctype),\n\t\t\ttrue\n\t\t);\n\t}\n\n\tget_page_name() {\n\t\treturn frappe.utils.to_title_case(\n\t\t\tfrappe.get_route().slice(-1)[0] || \"\"\n\t\t);\n\t}\n\n\tget_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tlet added = [];\n\t\tlet reports_to_add = [];\n\n\t\tlet add_reports = reports => {\n\t\t\treports.map(r => {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == this.doctype) {\n\t\t\t\t\tconst report_type =\n\t\t\t\t\t\tr.report_type === \"Report Builder\"\n\t\t\t\t\t\t\t? `/app/list/${r.ref_doctype}/report`\n\t\t\t\t\t\t\t: \"/app/query-report\";\n\n\t\t\t\t\tconst route =\n\t\t\t\t\t\tr.route || report_type + \"/\" + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\t\t\t\t\t\treports_to_add.push({\n\t\t\t\t\t\t\tname: __(r.title || r.name),\n\t\t\t\t\t\t\troute: route\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports =\n\t\t\tObject.values(frappe.boot.user.all_reports).sort((a, b) =>\n\t\t\t\ta.title.localeCompare(b.title)\n\t\t\t) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\n\t\treturn reports_to_add;\n\t}\n\n\tsetup_kanban_boards() {\n\t\tfunction fetch_kanban_board(doctype) {\n\t\t\tfrappe.db.get_value(\n\t\t\t\t\"Kanban Board\",\n\t\t\t\t{ reference_doctype: doctype },\n\t\t\t\t\"name\",\n\t\t\t\t(board) => {\n\t\t\t\t\tif (!$.isEmptyObject(board)) {\n\t\t\t\t\t\tfrappe.set_route(\"list\", doctype, \"kanban\", board.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.views.KanbanView.show_kanban_dialog(doctype);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tconst last_opened_kanban =\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"] &&\n\t\t\tfrappe.model.user_settings[this.doctype][\"Kanban\"].last_kanban_board;\n\t\tif (!last_opened_kanban) {\n\t\t\tfetch_kanban_board(this.doctype);\n\t\t} else {\n\t\t\tfrappe.db.exists(\"Kanban Board\", last_opened_kanban).then((exists) => {\n\t\t\t\tif (exists) {\n\t\t\t\t\tfrappe.set_route(\"list\", this.doctype, \"kanban\", last_opened_kanban);\n\t\t\t\t} else {\n\t\t\t\t\tfetch_kanban_board(this.doctype);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tget_calendars() {\n\t\tconst doctype = this.doctype;\n\t\tlet calendars = [];\n\n\t\treturn frappe.db\n\t\t\t.get_list(\"Calendar View\", {\n\t\t\t\tfilters: {\n\t\t\t\t\treference_doctype: doctype\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(result => {\n\t\t\t\tif (!(result && Array.isArray(result) && result.length)) return;\n\n\t\t\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\t\t\t// has standard calendar view\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: \"Default\",\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/default`\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresult.map(calendar => {\n\t\t\t\t\tcalendars.push({\n\t\t\t\t\t\tname: calendar.name,\n\t\t\t\t\t\troute: `/app/${this.slug()}/view/calendar/${\n\t\t\t\t\t\t\tcalendar.name\n\t\t\t\t\t\t}`\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\treturn calendars;\n\t\t\t});\n\t}\n\n\tget_email_accounts() {\n\t\tlet accounts_to_add = [];\n\t\tlet accounts = frappe.boot.email_accounts;\n\t\taccounts.forEach(account => {\n\t\t\tlet email_account =\n\t\t\t\taccount.email_id == \"All Accounts\"\n\t\t\t\t\t? \"All Accounts\"\n\t\t\t\t\t: account.email_account;\n\t\t\tlet route = `/app/communication/view/inbox/${email_account}`;\n\t\t\tlet display_name = [\n\t\t\t\t\"All Accounts\",\n\t\t\t\t\"Sent Mail\",\n\t\t\t\t\"Spam\",\n\t\t\t\t\"Trash\"\n\t\t\t].includes(account.email_id)\n\t\t\t\t? __(account.email_id)\n\t\t\t\t: account.email_account;\n\n\t\t\taccounts_to_add.push({\n\t\t\t\tname: display_name,\n\t\t\t\troute: route\n\t\t\t});\n\t\t});\n\n\t\treturn accounts_to_add;\n\t}\n\n\tslug() {\n\t\treturn frappe.router.slug(frappe.router.doctype_layout || this.doctype);\n\t}\n};\n","frappe.provide('frappe.ui');\n\nexport default class ListFilter {\n\tconstructor({ wrapper, doctype }) {\n\t\tObject.assign(this, arguments[0]);\n\t\tthis.can_add_global = frappe.user.has_role([\n\t\t\t'System Manager',\n\t\t\t'Administrator',\n\t\t]);\n\t\tthis.filters = [];\n\t\tthis.make();\n\t\tthis.bind();\n\t\tthis.refresh();\n\t}\n\n\tmake() {\n\t\t// init dom\n\t\tthis.wrapper.html(`\n\t\t\t<li class=\"input-area\"></li>\n\t\t\t<li class=\"sidebar-action\">\n\t\t\t\t<a class=\"saved-filters-preview\">${__('Show Saved')}</a>\n\t\t\t</li>\n\t\t\t<div class=\"saved-filters\"></div>\n\t\t`);\n\n\t\tthis.$input_area = this.wrapper.find('.input-area');\n\t\tthis.$list_filters = this.wrapper.find('.list-filters');\n\t\tthis.$saved_filters = this.wrapper.find('.saved-filters').hide();\n\t\tthis.$saved_filters_preview = this.wrapper.find('.saved-filters-preview');\n\t\tthis.saved_filters_hidden = true;\n\n\t\tthis.filter_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Data',\n\t\t\t\tplaceholder: __('Filter Name'),\n\t\t\t\tinput_class: 'input-xs',\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\n\t\tthis.is_global_input = frappe.ui.form.make_control({\n\t\t\tdf: {\n\t\t\t\tfieldtype: 'Check',\n\t\t\t\tlabel: __('Is Global'),\n\t\t\t},\n\t\t\tparent: this.$input_area,\n\t\t\trender_input: 1,\n\t\t});\n\t}\n\n\tbind() {\n\t\tthis.bind_save_filter();\n\t\tthis.bind_toggle_saved_filters();\n\t\tthis.bind_click_filter();\n\t\tthis.bind_remove_filter();\n\t}\n\n\trefresh() {\n\t\tthis.get_list_filters().then(() => {\n\t\t\tthis.filters.length ? this.$saved_filters_preview.show() : this.$saved_filters_preview.hide();\n\t\t\tconst html = this.filters.map((filter) => this.filter_template(filter));\n\t\t\tthis.wrapper.find('.filter-pill').remove();\n\t\t\tthis.$saved_filters.append(html);\n\t\t});\n\t\tthis.is_global_input.toggle(false);\n\t\tthis.filter_input.set_description('');\n\t}\n\n\tfilter_template(filter) {\n\t\treturn `<div class=\"list-link filter-pill list-sidebar-button btn btn-default\" data-name=\"${\n\t\t\tfilter.name\n\t\t}\">\n\t\t\t<a class=\"ellipsis filter-name\">${filter.filter_name}</a>\n\t\t\t<a class=\"remove\">${frappe.utils.icon('close')}</a>\n\t\t</div>`;\n\t}\n\n\tbind_toggle_saved_filters() {\n\t\tthis.wrapper.find('.saved-filters-preview').click(() => {\n\t\t\tthis.toggle_saved_filters(this.saved_filters_hidden);\n\t\t});\n\t}\n\n\ttoggle_saved_filters(show) {\n\t\tthis.$saved_filters.toggle(show);\n\t\tconst label = show ? __('Hide Saved') : __('Show Saved');\n\t\tthis.wrapper.find('.saved-filters-preview').text(label);\n\t\tthis.saved_filters_hidden = !this.saved_filters_hidden;\n\t}\n\n\tbind_click_filter() {\n\t\tthis.wrapper.on('click', '.filter-pill .filter-name', (e) => {\n\t\t\tlet $filter = $(e.currentTarget).parent('.filter-pill');\n\t\t\tthis.set_applied_filter($filter);\n\t\t\tconst name = $filter.attr('data-name');\n\t\t\tthis.list_view.filter_area.clear().then(() => {\n\t\t\t\tthis.list_view.filter_area.add(this.get_filters_values(name));\n\t\t\t});\n\t\t});\n\t}\n\n\tbind_remove_filter() {\n\t\tthis.wrapper.on('click', '.filter-pill .remove', (e) => {\n\t\t\tconst $li = $(e.currentTarget).closest('.filter-pill');\n\t\t\tconst name = $li.attr('data-name');\n\t\t\tconst applied_filters = this.get_filters_values(name);\n\t\t\t$li.remove();\n\t\t\tthis.remove_filter(name).then(() => this.refresh());\n\t\t\tthis.list_view.filter_area.remove_filters(applied_filters);\n\t\t});\n\t}\n\n\tbind_save_filter() {\n\t\tthis.filter_input.$input.keydown(\n\t\t\tfrappe.utils.debounce((e) => {\n\t\t\t\tconst value = this.filter_input.get_value();\n\t\t\t\tconst has_value = Boolean(value);\n\n\t\t\t\tif (e.which === frappe.ui.keyCode['ENTER']) {\n\t\t\t\t\tif (!has_value || this.filter_name_exists(value)) return;\n\n\t\t\t\t\tthis.filter_input.set_value('');\n\t\t\t\t\tthis.save_filter(value).then(() => this.refresh());\n\t\t\t\t\tthis.toggle_saved_filters(true);\n\t\t\t\t} else {\n\t\t\t\t\tlet help_text = __('Press Enter to save');\n\n\t\t\t\t\tif (this.filter_name_exists(value)) {\n\t\t\t\t\t\thelp_text = __('Duplicate Filter Name');\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.filter_input.set_description(has_value ? help_text : '');\n\n\t\t\t\t\tif (this.can_add_global) {\n\t\t\t\t\t\tthis.is_global_input.toggle(has_value);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 300)\n\t\t);\n\t}\n\n\tsave_filter(filter_name) {\n\t\treturn frappe.db.insert({\n\t\t\tdoctype: 'List Filter',\n\t\t\treference_doctype: this.list_view.doctype,\n\t\t\tfilter_name,\n\t\t\tfor_user: this.is_global_input.get_value() ? '' : frappe.session.user,\n\t\t\tfilters: JSON.stringify(this.get_current_filters()),\n\t\t});\n\t}\n\n\tremove_filter(name) {\n\t\tif (!name) return;\n\t\treturn frappe.db.delete_doc('List Filter', name);\n\t}\n\n\tget_filters_values(name) {\n\t\tconst filter = this.filters.find((filter) => filter.name === name);\n\t\treturn JSON.parse(filter.filters || '[]');\n\t}\n\n\tget_current_filters() {\n\t\treturn this.list_view.filter_area.get();\n\t}\n\n\tfilter_name_exists(filter_name) {\n\t\treturn (this.filters || []).find((f) => f.filter_name === filter_name);\n\t}\n\n\tget_list_filters() {\n\t\tif (frappe.session.user === 'Guest') return Promise.resolve();\n\t\treturn frappe.db\n\t\t\t.get_list('List Filter', {\n\t\t\t\tfields: ['name', 'filter_name', 'for_user', 'filters'],\n\t\t\t\tfilters: { reference_doctype: this.list_view.doctype },\n\t\t\t\tor_filters: [\n\t\t\t\t\t['for_user', '=', frappe.session.user],\n\t\t\t\t\t['for_user', '=', ''],\n\t\t\t\t],\n\t\t\t})\n\t\t\t.then((filters) => {\n\t\t\t\tthis.filters = filters || [];\n\t\t\t});\n\t}\n\n\tset_applied_filter($filter) {\n\t\tthis.$saved_filters\n\t\t\t.find('.btn-primary-light')\n\t\t\t.toggleClass('btn-primary-light btn-default');\n\t\t$filter.toggleClass('btn-default btn-primary-light');\n\t}\n}\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nimport ListFilter from './list_filter';\nfrappe.provide('frappe.views');\n\n// opts:\n// stats = list of fields\n// doctype\n// parent\n// set_filter = function called on click\n\nfrappe.views.ListSidebar = class ListSidebar {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tvar sidebar_content = frappe.render_template(\"list_sidebar\", { doctype: this.doctype });\n\n\t\tthis.sidebar = $('<div class=\"list-sidebar overlay-sidebar hidden-xs hidden-sm\"></div>')\n\t\t\t.html(sidebar_content)\n\t\t\t.appendTo(this.page.sidebar.empty());\n\n\t\tthis.setup_list_filter();\n\t\tthis.setup_list_group_by();\n\n\t\t// do not remove\n\t\t// used to trigger custom scripts\n\t\t$(document).trigger('list_sidebar_setup');\n\n\t\tif (this.list_view.list_view_settings && this.list_view.list_view_settings.disable_sidebar_stats) {\n\t\t\tthis.sidebar.find('.list-tags').remove();\n\t\t} else {\n\t\t\tthis.sidebar.find(\".list-stats\").on(\"show.bs.dropdown\", (e) => {\n\t\t\t\tthis.reload_stats();\n\t\t\t});\n\t\t}\n\n\t}\n\n\tsetup_views() {\n\t\tvar show_list_link = false;\n\n\t\tif (frappe.views.calendar[this.doctype]) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Calendar\"]').removeClass(\"hide\");\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Gantt\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\t\t//show link for kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"]').removeClass('hide');\n\t\tif (this.doctype === \"Communication\" && frappe.boot.email_accounts.length) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Inbox\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (frappe.treeview_settings[this.doctype] || frappe.get_meta(this.doctype).is_tree) {\n\t\t\tthis.sidebar.find(\".tree-link\").removeClass(\"hide\");\n\t\t}\n\n\t\tthis.current_view = 'List';\n\t\tvar route = frappe.get_route();\n\t\tif (route.length > 2 && frappe.views.view_modes.includes(route[2])) {\n\t\t\tthis.current_view = route[2];\n\n\t\t\tif (this.current_view === 'Kanban') {\n\t\t\t\tthis.kanban_board = route[3];\n\t\t\t} else if (this.current_view === 'Inbox') {\n\t\t\t\tthis.email_account = route[3];\n\t\t\t}\n\t\t}\n\n\t\t// disable link for current view\n\t\tthis.sidebar.find('.list-link[data-view=\"' + this.current_view + '\"] a')\n\t\t\t.attr('disabled', 'disabled').addClass('disabled');\n\n\t\t//enable link for Kanban view\n\t\tthis.sidebar.find('.list-link[data-view=\"Kanban\"] a, .list-link[data-view=\"Inbox\"] a')\n\t\t\t.attr('disabled', null).removeClass('disabled');\n\n\t\t// show image link if image_view\n\t\tif (this.list_view.meta.image_field) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Image\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (this.list_view.settings.get_coords_method ||\n\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\tthis.list_view.meta.fields.find(i => i.fieldname === \"longitude\")) ||\n\t\t\t(this.list_view.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype == 'Geolocation'))) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"Map\"]').removeClass('hide');\n\t\t\tshow_list_link = true;\n\t\t}\n\n\t\tif (show_list_link) {\n\t\t\tthis.sidebar.find('.list-link[data-view=\"List\"]').removeClass('hide');\n\t\t}\n\t}\n\n\tsetup_reports() {\n\t\t// add reports linked to this doctype to the dropdown\n\t\tvar me = this;\n\t\tvar added = [];\n\t\tvar dropdown = this.page.sidebar.find('.reports-dropdown');\n\t\tvar divider = false;\n\n\t\tvar add_reports = function(reports) {\n\t\t\t$.each(reports, function(name, r) {\n\t\t\t\tif (!r.ref_doctype || r.ref_doctype == me.doctype) {\n\t\t\t\t\tvar report_type = r.report_type === 'Report Builder' ?\n\t\t\t\t\t\t`List/${r.ref_doctype}/Report` : 'query-report';\n\n\t\t\t\t\tvar route = r.route || report_type + '/' + (r.title || r.name);\n\n\t\t\t\t\tif (added.indexOf(route) === -1) {\n\t\t\t\t\t\t// don't repeat\n\t\t\t\t\t\tadded.push(route);\n\n\t\t\t\t\t\tif (!divider) {\n\t\t\t\t\t\t\tme.get_divider().appendTo(dropdown);\n\t\t\t\t\t\t\tdivider = true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t$('<li><a href=\"#' + route + '\">' +\n\t\t\t\t\t\t\t__(r.title || r.name) + '</a></li>').appendTo(dropdown);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\n\t\t// from reference doctype\n\t\tif (this.list_view.settings.reports) {\n\t\t\tadd_reports(this.list_view.settings.reports);\n\t\t}\n\n\t\t// Sort reports alphabetically\n\t\tvar reports = Object.values(frappe.boot.user.all_reports).sort((a,b) => a.title.localeCompare(b.title)) || [];\n\n\t\t// from specially tagged reports\n\t\tadd_reports(reports);\n\t}\n\n\tsetup_list_filter() {\n\t\tthis.list_filter = new ListFilter({\n\t\t\twrapper: this.page.sidebar.find('.list-filters'),\n\t\t\tdoctype: this.doctype,\n\t\t\tlist_view: this.list_view\n\t\t});\n\t}\n\n\tsetup_kanban_boards() {\n\t\tconst $dropdown = this.page.sidebar.find('.kanban-dropdown');\n\t\tfrappe.views.KanbanView.setup_dropdown_in_sidebar(this.doctype, $dropdown);\n\t}\n\n\n\tsetup_keyboard_shortcuts() {\n\t\tthis.sidebar.find('.list-link > a, .list-link > .btn-group > a').each((i, el) => {\n\t\t\tfrappe.ui.keys\n\t\t\t\t.get_shortcut_group(this.page)\n\t\t\t\t.add($(el));\n\t\t});\n\t}\n\n\tsetup_list_group_by() {\n\t\tthis.list_group_by = new frappe.views.ListGroupBy({\n\t\t\tdoctype: this.doctype,\n\t\t\tsidebar: this,\n\t\t\tlist_view: this.list_view,\n\t\t\tpage: this.page\n\t\t});\n\t}\n\n\tget_stats() {\n\t\tvar me = this;\n\n\t\tlet dropdown_options = me.sidebar.find(\".list-stats-dropdown .stat-result\");\n\t\tthis.set_loading_state(dropdown_options);\n\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.desk.reportview.get_sidebar_stats',\n\t\t\ttype: 'GET',\n\t\t\targs: {\n\t\t\t\tstats: me.stats,\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\t// wait for list filter area to be generated before getting filters, or fallback to default filters\n\t\t\t\tfilters: (me.list_view.filter_area ? me.list_view.get_filters_for_args() : me.default_filters) || []\n\t\t\t},\n\t\t\tcallback: function(r) {\n\t\t\t\tlet stats = (r.message.stats || {})[\"_user_tags\"] || [];\n\t\t\t\tme.render_stat(stats);\n\t\t\t\tlet stats_dropdown = me.sidebar.find('.list-stats-dropdown');\n\t\t\t\tfrappe.utils.setup_search(stats_dropdown, '.stat-link', '.stat-label');\n\t\t\t}\n\t\t});\n\t}\n\n\tset_loading_state(dropdown) {\n\t\tdropdown.html(`<li>\n\t\t\t<div class=\"empty-state\">\n\t\t\t\t${__(\"Loading...\")}\n\t\t\t</div>\n\t\t</li>`);\n\t}\n\n\trender_stat(stats) {\n\t\tlet args = {\n\t\t\tstats: stats,\n\t\t\tlabel: __(\"Tags\")\n\t\t};\n\n\t\tlet tag_list = $(frappe.render_template(\"list_sidebar_stat\", args)).on(\"click\", \".stat-link\", (e) => {\n\t\t\tlet fieldname = $(e.currentTarget).attr('data-field');\n\t\t\tlet label = $(e.currentTarget).attr('data-label');\n\t\t\tlet condition = \"like\";\n\t\t\tlet existing = this.list_view.filter_area.filter_list.get_filter(fieldname);\n\t\t\tif (existing) {\n\t\t\t\texisting.remove();\n\t\t\t}\n\t\t\tif (label == \"No Tags\") {\n\t\t\t\tlabel = \"%,%\";\n\t\t\t\tcondition = \"not like\";\n\t\t\t}\n\t\t\tthis.list_view.filter_area.add(\n\t\t\t\tthis.doctype,\n\t\t\t\tfieldname,\n\t\t\t\tcondition,\n\t\t\t\tlabel\n\t\t\t);\n\t\t});\n\n\t\tthis.sidebar.find(\".list-stats-dropdown .stat-result\").html(tag_list);\n\t}\n\n\treload_stats() {\n\t\tthis.sidebar.find(\".stat-link\").remove();\n\t\tthis.sidebar.find(\".stat-no-records\").remove();\n\t\tthis.get_stats();\n\t}\n};\n","frappe.provide('frappe.views');\n\nfrappe.views.ListGroupBy = class ListGroupBy {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make_wrapper();\n\n\t\tthis.user_settings = frappe.get_user_settings(this.doctype);\n\t\tthis.group_by_fields = ['assigned_to', 'owner'];\n\t\tif (this.user_settings.group_by_fields) {\n\t\t\tthis.group_by_fields = this.group_by_fields.concat(\n\t\t\t\tthis.user_settings.group_by_fields\n\t\t\t);\n\t\t}\n\t\tthis.render_group_by_items();\n\t\tthis.make_group_by_fields_modal();\n\t\tthis.setup_dropdown();\n\t\tthis.setup_filter_by();\n\t}\n\n\tmake_group_by_fields_modal() {\n\t\tlet d = new frappe.ui.Dialog({\n\t\t\ttitle: __('Select Filters'),\n\t\t\tfields: this.get_group_by_dropdown_fields(),\n\t\t});\n\n\t\td.set_primary_action(__(\"Save\"), ({ group_by_fields }) => {\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype,\n\t\t\t\t'group_by_fields',\n\t\t\t\tgroup_by_fields || null\n\t\t\t);\n\t\t\tthis.group_by_fields = group_by_fields\n\t\t\t\t? ['assigned_to', 'owner', ...group_by_fields]\n\t\t\t\t: ['assigned_to', 'owner'];\n\t\t\tthis.render_group_by_items();\n\t\t\tthis.setup_dropdown();\n\t\t\td.hide();\n\t\t});\n\n\t\td.$body.prepend(`\n\t\t\t<div class=\"filters-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__('Search')}\"\n\t\t\t\t\tdata-element=\"search\" class=\"form-control input-xs\">\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.page.sidebar.find('.add-list-group-by a').on('click', () => {\n\t\t\tfrappe.utils.setup_search(d.$body, '.unit-checkbox', '.label-area');\n\t\t\td.show();\n\t\t});\n\t}\n\n\tmake_wrapper() {\n\t\tthis.$wrapper = this.sidebar.sidebar.find('.list-group-by');\n\t\tlet html = `\n\t\t\t<div class=\"list-group-by-fields\">\n\t\t\t</div>\n\t\t\t<li class=\"add-list-group-by sidebar-action\">\n\t\t\t\t<a class=\"add-group-by\">\n\t\t\t\t\t${__('Edit Filters')}\n\t\t\t\t</a>\n\t\t\t</li>\n\t\t`;\n\t\tthis.$wrapper.html(html);\n\t}\n\n\trender_group_by_items() {\n\t\tlet get_item_html = (fieldname) => {\n\t\t\tlet label, fieldtype;\n\t\t\tif (fieldname === 'assigned_to') {\n\t\t\t\tlabel = __('Assigned To');\n\t\t\t} else if (fieldname === 'owner') {\n\t\t\t\tlabel = __('Created By');\n\t\t\t} else {\n\t\t\t\tlabel = frappe.meta.get_label(this.doctype, fieldname);\n\t\t\t\tlet docfield = frappe.meta.get_docfield(this.doctype, fieldname);\n\t\t\t\tif (!docfield) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfieldtype = docfield.fieldtype;\n\t\t\t}\n\n\t\t\treturn `<li class=\"group-by-field list-link\">\n\t\t\t\t\t<a class=\"btn btn-default btn-sm list-sidebar-button\" data-toggle=\"dropdown\"\n\t\t\t\t\taria-haspopup=\"true\" aria-expanded=\"false\"\n\t\t\t\t\tdata-label=\"${label}\" data-fieldname=\"${fieldname}\" data-fieldtype=\"${fieldtype}\"\n\t\t\t\t\thref=\"#\" onclick=\"return false;\">\n\t\t\t\t\t\t<span class=\"ellipsis\">${__(label)}</span>\n\t\t\t\t\t\t<span>${frappe.utils.icon('select', 'xs')}</span>\n\t\t\t\t\t</a>\n\t\t\t\t\t<ul class=\"dropdown-menu group-by-dropdown\" role=\"menu\">\n\t\t\t\t\t</ul>\n\t\t\t</li>`;\n\t\t};\n\t\tlet html = this.group_by_fields.map(get_item_html).join('');\n\t\tthis.$wrapper.find('.list-group-by-fields').html(html);\n\t}\n\n\tsetup_dropdown() {\n\t\tthis.$wrapper.find('.group-by-field').on('show.bs.dropdown', (e) => {\n\t\t\tlet $dropdown = $(e.currentTarget).find('.group-by-dropdown');\n\t\t\tthis.set_loading_state($dropdown);\n\t\t\tlet fieldname = $(e.currentTarget).find('a')\n\t\t\t\t.attr('data-fieldname');\n\t\t\tlet fieldtype = $(e.currentTarget)\n\t\t\t\t.find('a')\n\t\t\t\t.attr('data-fieldtype');\n\t\t\tthis.get_group_by_count(fieldname).then((field_count_list) => {\n\t\t\t\tif (field_count_list.length) {\n\t\t\t\t\tlet applied_filter = this.list_view.get_filter_value(\n\t\t\t\t\t\tfieldname == 'assigned_to' ? '_assign' : fieldname\n\t\t\t\t\t);\n\t\t\t\t\tthis.render_dropdown_items(\n\t\t\t\t\t\tfield_count_list,\n\t\t\t\t\t\tfieldtype,\n\t\t\t\t\t\t$dropdown,\n\t\t\t\t\t\tapplied_filter\n\t\t\t\t\t);\n\t\t\t\t\tthis.setup_search($dropdown);\n\t\t\t\t} else {\n\t\t\t\t\tthis.set_empty_state($dropdown);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tset_loading_state($dropdown) {\n\t\t$dropdown.html(`<li>\n\t\t\t<div class=\"empty-state group-by-loading\">\n\t\t\t\t${__('Loading...')}\n\t\t\t</div>\n\t\t</li>`);\n\t}\n\n\tset_empty_state($dropdown) {\n\t\t$dropdown.html(\n\t\t\t`<div class=\"empty-state group-by-empty\">\n\t\t\t\t${__('No filters found')}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tsetup_search($dropdown) {\n\t\tfrappe.utils.setup_search(\n\t\t\t$dropdown,\n\t\t\t'.group-by-item',\n\t\t\t'.group-by-value',\n\t\t\t'data-name'\n\t\t);\n\t}\n\n\tget_group_by_dropdown_fields() {\n\t\tlet group_by_fields = [];\n\t\tlet fields = this.list_view.meta.fields.filter((f) =>\n\t\t\t['Select', 'Link', 'Data', 'Int', 'Check'].includes(f.fieldtype)\n\t\t);\n\t\tgroup_by_fields.push({\n\t\t\tlabel: __(this.doctype),\n\t\t\tfieldname: 'group_by_fields',\n\t\t\tfieldtype: 'MultiCheck',\n\t\t\tcolumns: 2,\n\t\t\toptions: fields.map((df) => ({\n\t\t\t\tlabel: __(df.label),\n\t\t\t\tvalue: df.fieldname,\n\t\t\t\tchecked: this.group_by_fields.includes(df.fieldname),\n\t\t\t})),\n\t\t});\n\t\treturn group_by_fields;\n\t}\n\n\tget_group_by_count(field) {\n\t\tlet current_filters = this.list_view.get_filters_for_args();\n\n\t\t// remove filter of the current field\n\t\tcurrent_filters = current_filters.filter(\n\t\t\t(f_arr) => !f_arr.includes(field === 'assigned_to' ? '_assign' : field)\n\t\t);\n\n\t\tlet args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tcurrent_filters: current_filters,\n\t\t\tfield: field,\n\t\t};\n\n\t\treturn frappe\n\t\t\t.call('frappe.desk.listview.get_group_by_count', args)\n\t\t\t.then((r) => {\n\t\t\t\tlet field_counts = r.message || [];\n\t\t\t\tfield_counts = field_counts.filter((f) => f.count !== 0);\n\t\t\t\tlet current_user = field_counts.find(\n\t\t\t\t\t(f) => f.name === frappe.session.user\n\t\t\t\t);\n\t\t\t\tfield_counts = field_counts.filter(\n\t\t\t\t\t(f) =>\n\t\t\t\t\t\t!['Guest', 'Administrator', frappe.session.user].includes(f.name)\n\t\t\t\t);\n\t\t\t\t// Set frappe.session.user on top of the list\n\t\t\t\tif (current_user) field_counts.unshift(current_user);\n\t\t\t\treturn field_counts;\n\t\t\t});\n\t}\n\n\trender_dropdown_items(fields, fieldtype, $dropdown, applied_filter) {\n\t\tlet standard_html = `\n\t\t\t<div class=\"dropdown-search\">\n\t\t\t\t<input type=\"text\"\n\t\t\t\t\tplaceholder=\"${__('Search')}\"\n\t\t\t\t\tdata-element=\"search\"\n\t\t\t\t\tclass=\"dropdown-search-input form-control input-xs\"\n\t\t\t\t>\n\t\t\t</div>\n\t\t`;\n\t\tlet applied_filter_html='';\n\t\tlet dropdown_items_html = '';\n\n\t\tfields.map(field => {\n\t\t\tif (field.name === applied_filter) {\n\t\t\t\tapplied_filter_html = this.get_dropdown_html(field, fieldtype, true);\n\t\t\t} else {\n\t\t\t\tdropdown_items_html += this.get_dropdown_html(field, fieldtype);\n\t\t\t}\n\t\t});\n\n\t\tlet dropdown_html = standard_html + applied_filter_html + dropdown_items_html;\n\t\t$dropdown.toggleClass('has-selected', Boolean(applied_filter_html));\n\t\t$dropdown.html(dropdown_html);\n\t}\n\n\tget_dropdown_html(field, fieldtype, applied=false) {\n\t\tlet label = field.name == null ? __('Not Set') : field.name;\n\t\tif (label === frappe.session.user) {\n\t\t\tlabel = __('Me');\n\t\t} else if (fieldtype && fieldtype == 'Check') {\n\t\t\tlabel = label == '0' ? __('No') : __('Yes');\n\t\t}\n\t\tlet value = field.name == null ? '' : encodeURIComponent(field.name);\n\n\t\tlet applied_html = applied ? `<span class=\"applied\"> ${frappe.utils.icon('tick', 'xs')} </span>` : '';\n\t\treturn `<li class=\"group-by-item ${applied ? 'selected': ''}\" data-value=\"${value}\">\n\t\t\t<a class=\"dropdown-item\" href=\"#\" onclick=\"return false;\">\n\t\t\t\t${applied_html}\n\t\t\t\t<span class=\"group-by-value ellipsis\" data-name=\"${field.name}\">${label}</span>\n\t\t\t\t<span class=\"group-by-count\">${field.count}</span>\n\t\t\t</a>\n\t\t</li>`;\n\t}\n\n\tsetup_filter_by() {\n\t\tthis.$wrapper.on('click', '.group-by-item', (e) => {\n\t\t\tlet $target = $(e.currentTarget);\n\t\t\tlet is_selected = $target.hasClass('selected');\n\n\t\t\tlet fieldname = $target\n\t\t\t\t.parents('.group-by-field')\n\t\t\t\t.find('a')\n\t\t\t\t.data('fieldname');\n\t\t\tlet value =\n\t\t\t\ttypeof $target.data('value') === 'string'\n\t\t\t\t\t? decodeURIComponent($target.data('value').trim())\n\t\t\t\t\t: $target.data('value');\n\t\t\tfieldname = fieldname === 'assigned_to' ? '_assign' : fieldname;\n\n\t\t\treturn this.list_view.filter_area.remove(fieldname).then(() => {\n\t\t\t\tif (is_selected) return;\n\t\t\t\treturn this.apply_filter(fieldname, value);\n\t\t\t});\n\t\t});\n\t}\n\n\tapply_filter(fieldname, value) {\n\t\tlet operator = '=';\n\t\tif (value === '') {\n\t\t\toperator = 'is';\n\t\t\tvalue = 'not set';\n\t\t}\n\t\tif (fieldname === '_assign') {\n\t\t\toperator = 'like';\n\t\t\tvalue = `%${value}%`;\n\t\t}\n\t\treturn this.list_view.filter_area.add(\n\t\t\tthis.doctype,\n\t\t\tfieldname,\n\t\t\toperator,\n\t\t\tvalue\n\t\t);\n\t}\n};\n","frappe.provide('frappe.views');\n\nfrappe.views.GanttView = class GanttView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Gantt';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = this.page_title + ' ' + __('Gantt');\n\t\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\n\t\t\t\tif (typeof this.calendar_settings.gantt == 'object') {\n\t\t\t\t\tObject.assign(this.calendar_settings, this.calendar_settings.gantt);\n\t\t\t\t}\n\n\t\t\t\tif (this.calendar_settings.order_by) {\n\t\t\t\t\tthis.sort_by = this.calendar_settings.order_by;\n\t\t\t\t\tthis.sort_order = 'asc';\n\t\t\t\t} else {\n\t\t\t\t\tthis.sort_by = this.view_user_settings.sort_by || this.calendar_settings.field_map.start;\n\t\t\t\t\tthis.sort_order = this.view_user_settings.sort_order || 'asc';\n\t\t\t\t}\n\t\t\t})\n\t}\n\n\tsetup_view() {\n\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.prepare_tasks();\n\t}\n\n\tprepare_tasks() {\n\t\tvar me = this;\n\t\tvar meta = this.meta;\n\t\tvar field_map = this.calendar_settings.field_map;\n\n\t\tthis.tasks = this.data.map(function (item) {\n\t\t\t// set progress\n\t\t\tvar progress = 0;\n\t\t\tif (field_map.progress && $.isFunction(field_map.progress)) {\n\t\t\t\tprogress = field_map.progress(item);\n\t\t\t} else if (field_map.progress) {\n\t\t\t\tprogress = item[field_map.progress];\n\t\t\t}\n\n\t\t\t// title\n\t\t\tvar label;\n\t\t\tif (meta.title_field) {\n\t\t\t\tlabel = item.progress\n\t\t\t\t\t? __(\"{0} ({1}) - {2}%\", [item[meta.title_field], item.name, item.progress])\n\t\t\t\t\t: __(\"{0} ({1})\", [item[meta.title_field], item.name]);\n\t\t\t} else {\n\t\t\t\tlabel = item[field_map.title];\n\t\t\t}\n\n\t\t\tvar r = {\n\t\t\t\tstart: item[field_map.start],\n\t\t\t\tend: item[field_map.end],\n\t\t\t\tname: label,\n\t\t\t\tid: item[field_map.id || 'name'],\n\t\t\t\tdoctype: me.doctype,\n\t\t\t\tprogress: progress,\n\t\t\t\tdependencies: item.depends_on_tasks || \"\"\n\t\t\t};\n\n\t\t\tif (item.color && frappe.ui.color.validate_hex(item.color)) {\n\t\t\t\tr['custom_class'] = 'color-' + item.color.substr(1);\n\t\t\t}\n\n\t\t\tif (item.is_milestone) {\n\t\t\t\tr['custom_class'] = 'bar-milestone';\n\t\t\t}\n\n\t\t\treturn r;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.load_lib.then(() => {\n\t\t\tthis.render_gantt();\n\t\t});\n\t}\n\n\trender_header() {\n\n\t}\n\n\trender_gantt() {\n\t\tconst me = this;\n\t\tconst gantt_view_mode = this.view_user_settings.gantt_view_mode || 'Day';\n\t\tconst field_map = this.calendar_settings.field_map;\n\t\tconst date_format = 'YYYY-MM-DD';\n\n\t\tthis.$result.empty();\n\t\tthis.$result.addClass('gantt-modern');\n\n\t\tthis.gantt = new Gantt(this.$result[0], this.tasks, {\n\t\t\tbar_height: 35,\n\t\t\tbar_corner_radius: 4,\n\t\t\tresize_handle_width: 8,\n\t\t\tresize_handle_height: 28,\n\t\t\tresize_handle_corner_radius: 3,\n\t\t\tresize_handle_offset: 4,\n\t\t\tview_mode: gantt_view_mode,\n\t\t\tdate_format: \"YYYY-MM-DD\",\n\t\t\ton_click: task => {\n\t\t\t\tfrappe.set_route('Form', task.doctype, task.id);\n\t\t\t},\n\t\t\ton_date_change: (task, start, end) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t[field_map.start]: moment(start).format(date_format),\n\t\t\t\t\t[field_map.end]: moment(end).format(date_format)\n\t\t\t\t});\n\t\t\t},\n\t\t\ton_progress_change: (task, progress) => {\n\t\t\t\tif (!me.can_write) return;\n\t\t\t\tvar progress_fieldname = 'progress';\n\n\t\t\t\tif ($.isFunction(field_map.progress)) {\n\t\t\t\t\tprogress_fieldname = null;\n\t\t\t\t} else if (field_map.progress) {\n\t\t\t\t\tprogress_fieldname = field_map.progress;\n\t\t\t\t}\n\n\t\t\t\tif (progress_fieldname) {\n\t\t\t\t\tfrappe.db.set_value(task.doctype, task.id, {\n\t\t\t\t\t\t[progress_fieldname]: parseInt(progress)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t},\n\t\t\ton_view_change: mode => {\n\t\t\t\t// save view mode\n\t\t\t\tme.save_view_user_settings({\n\t\t\t\t\tgantt_view_mode: mode\n\t\t\t\t});\n\t\t\t},\n\t\t\tcustom_popup_html: task => {\n\t\t\t\tvar item = me.get_item(task.id);\n\n\t\t\t\tvar html =\n\t\t\t\t\t`<div class=\"title\">${task.name}</div>\n\t\t\t\t\t<div class=\"subtitle\">${moment(task._start).format('MMM D')} - ${moment(task._end).format('MMM D')}</div>`;\n\n\t\t\t\t// custom html in doctype settings\n\t\t\t\tvar custom = me.settings.gantt_custom_popup_html;\n\t\t\t\tif (custom && $.isFunction(custom)) {\n\t\t\t\t\tvar ganttobj = task;\n\t\t\t\t\thtml = custom(ganttobj, item);\n\t\t\t\t}\n\t\t\t\treturn '<div class=\"details-container\">' + html + '</div>';\n\t\t\t}\n\t\t});\n\t\tthis.setup_view_mode_buttons();\n\t\tthis.set_colors();\n\t}\n\n\tsetup_view_mode_buttons() {\n\t\t// view modes (for translation) __(\"Day\"), __(\"Week\"), __(\"Month\"),\n\t\t//__(\"Half Day\"), __(\"Quarter Day\")\n\n\t\tlet $btn_group = this.$paging_area.find('.gantt-view-mode');\n\t\tif ($btn_group.length > 0) return;\n\n\t\tconst view_modes = this.gantt.options.view_modes || [];\n\t\tconst active_class = view_mode => this.gantt.view_is(view_mode) ? 'btn-info' : '';\n\t\tconst html =\n\t\t\t`<div class=\"btn-group gantt-view-mode\">\n\t\t\t\t${view_modes.map(value => `<button type=\"button\"\n\t\t\t\t\t\tclass=\"btn btn-default btn-sm btn-view-mode ${active_class(value)}\"\n\t\t\t\t\t\tdata-value=\"${value}\">\n\t\t\t\t\t\t${__(value)}\n\t\t\t\t\t</button>`).join('')}\n\t\t\t</div>`;\n\n\t\tthis.$paging_area.find('.level-left').append(html);\n\n\t\t// change view mode asynchronously\n\t\tconst change_view_mode = (value) => setTimeout(() => this.gantt.change_view_mode(value), 0);\n\n\t\tthis.$paging_area.on('click', '.btn-view-mode', e => {\n\t\t\tconst $btn = $(e.currentTarget);\n\t\t\tthis.$paging_area.find('.btn-view-mode').removeClass('btn-info');\n\t\t\t$btn.addClass('btn-info');\n\n\t\t\tconst value = $btn.data().value;\n\t\t\tchange_view_mode(value);\n\t\t});\n\t}\n\n\tset_colors() {\n\t\tconst classes = this.tasks\n\t\t\t.map(t => t.custom_class)\n\t\t\t.filter(c => c && c.startsWith('color-'));\n\n\t\tlet style = classes.map(c => {\n\t\t\tconst class_name = c.replace('#', '');\n\t\t\tconst bar_color = '#' + c.substr(6);\n\t\t\tconst progress_color = frappe.ui.color.get_contrast_color(bar_color);\n\t\t\treturn `\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar {\n\t\t\t\t\tfill: ${bar_color};\n\t\t\t\t}\n\t\t\t\t.gantt .bar-wrapper.${class_name} .bar-progress {\n\t\t\t\t\tfill: ${progress_color};\n\t\t\t\t}\n\t\t\t`;\n\t\t}).join(\"\");\n\n\t\tstyle = `<style>${style}</style>`;\n\t\tthis.$result.prepend(style);\n\t}\n\n\tget_item(name) {\n\t\treturn this.data.find(item => item.name === name);\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.css\",\n\t\t\t\"assets/frappe/node_modules/frappe-gantt/dist/frappe-gantt.min.js\"\n\t\t];\n\t}\n};\n\n","// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.views.calendar\");\nfrappe.provide(\"frappe.views.calendars\");\n\nfrappe.views.CalendarView = class CalendarView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)['Calendar'] || {};\n\t\t\troute.push(user_settings.last_calendar || 'default');\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\ttoggle_result_area() {}\n\n\tget view_name() {\n\t\treturn 'Calendar';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = __('{0} Calendar', [this.page_title]);\n\t\t\t\tthis.calendar_settings = frappe.views.calendar[this.doctype] || {};\n\t\t\t\tthis.calendar_name = frappe.get_route()[3];\n\t\t\t});\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_page_form = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tthis.save_view_user_settings({\n\t\t\tlast_calendar: this.calendar_name\n\t\t});\n\t}\n\n\trender() {\n\t\tif (this.calendar) {\n\t\t\tthis.calendar.refresh();\n\t\t\treturn;\n\t\t}\n\n\t\tthis.load_lib\n\t\t\t.then(() => this.get_calendar_preferences())\n\t\t\t.then(options => {\n\t\t\t\tthis.calendar = new frappe.views.Calendar(options);\n\t\t\t});\n\t}\n\n\tget_calendar_preferences() {\n\t\tconst options = {\n\t\t\tdoctype: this.doctype,\n\t\t\tparent: this.$result,\n\t\t\tpage: this.page,\n\t\t\tlist_view: this\n\t\t};\n\t\tconst calendar_name = this.calendar_name;\n\n\t\treturn new Promise(resolve => {\n\t\t\tif (calendar_name === 'default') {\n\t\t\t\tObject.assign(options, frappe.views.calendar[this.doctype]);\n\t\t\t\tresolve(options);\n\t\t\t} else {\n\t\t\t\tfrappe.model.with_doc('Calendar View', calendar_name, () => {\n\t\t\t\t\tconst doc = frappe.get_doc('Calendar View', calendar_name);\n\t\t\t\t\tif (!doc) {\n\t\t\t\t\t\tfrappe.show_alert(__(\"{0} is not a valid Calendar. Redirecting to default Calendar.\", [calendar_name.bold()]));\n\t\t\t\t\t\tfrappe.set_route(\"List\", this.doctype, \"Calendar\", \"default\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tObject.assign(options, {\n\t\t\t\t\t\tfield_map: {\n\t\t\t\t\t\t\tid: \"name\",\n\t\t\t\t\t\t\tstart: doc.start_date_field,\n\t\t\t\t\t\t\tend: doc.end_date_field,\n\t\t\t\t\t\t\ttitle: doc.subject_field,\n\t\t\t\t\t\t\tallDay: doc.all_day ? 1 : 0\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tresolve(options);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\tlet assets = [\n\t\t\t'assets/frappe/js/lib/fullcalendar/fullcalendar.min.css',\n\t\t\t'assets/frappe/js/lib/fullcalendar/fullcalendar.min.js',\n\t\t];\n\t\tlet user_language = frappe.boot.user.language;\n\t\tif (user_language && user_language !== 'en') {\n\t\t\tassets.push('assets/frappe/js/lib/fullcalendar/locale-all.js');\n\t\t}\n\t\treturn assets;\n\t}\n};\n\nfrappe.views.Calendar = Class.extend({\n\tinit: function(options) {\n\t\t$.extend(this, options);\n\t\tthis.get_default_options();\n\t},\n\tget_default_options: function() {\n\t\treturn new Promise ((resolve) => {\n\t\t\tlet defaultView = localStorage.getItem('cal_defaultView');\n\t\t\tlet weekends = localStorage.getItem('cal_weekends');\n\t\t\tlet defaults = {\n\t\t\t\t'defaultView': defaultView ? defaultView : \"month\",\n\t\t\t\t'weekends': weekends ? weekends : true\n\t\t\t};\n\t\t\tresolve(defaults);\n\t\t}).then(defaults => {\n\t\t\tthis.make_page();\n\t\t\tthis.setup_options(defaults);\n\t\t\tthis.make();\n\t\t\tthis.setup_view_mode_button(defaults);\n\t\t\tthis.bind();\n\t\t});\n\t},\n\tmake_page: function() {\n\t\tvar me = this;\n\n\t\t// add links to other calendars\n\t\tme.page.clear_user_actions();\n\t\t$.each(frappe.boot.calendars, function(i, doctype) {\n\t\t\tif(frappe.model.can_read(doctype)) {\n\t\t\t\tme.page.add_menu_item(__(doctype), function() {\n\t\t\t\t\tfrappe.set_route(\"List\", doctype, \"Calendar\");\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\t$(this.parent).on(\"show\", function() {\n\t\t\tme.$cal.fullCalendar(\"refetchEvents\");\n\t\t});\n\t},\n\n\tmake: function() {\n\t\tthis.$wrapper = this.parent;\n\t\tthis.$cal = $(\"<div>\").appendTo(this.$wrapper);\n\t\tthis.footnote_area = frappe.utils.set_footnote(this.footnote_area, this.$wrapper,\n\t\t\t__(\"Select or drag across time slots to create a new event.\"));\n\t\tthis.footnote_area.css({\"border-top\": \"0px\"});\n\n\t\tthis.$cal.fullCalendar(this.cal_options);\n\t\tthis.set_css();\n\t},\n\tsetup_view_mode_button: function(defaults) {\n\t\tvar me = this;\n\t\t$(me.footnote_area).find('.btn-weekend').detach();\n\t\tlet btnTitle = (defaults.weekends) ? __('Hide Weekends') : __('Show Weekends');\n\t\tconst btn = `<button class=\"btn btn-default btn-xs btn-weekend\">${btnTitle}</button>`;\n\t\tme.footnote_area.append(btn);\n\t},\n\tset_localStorage_option: function(option, value) {\n\t\tlocalStorage.removeItem(option);\n\t\tlocalStorage.setItem(option, value);\n\t},\n\tbind: function() {\n\t\tconst me = this;\n\t\tlet btn_group = me.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.on(\"click\", \".btn\", function() {\n\t\t\tlet value = ($(this).hasClass('fc-agendaWeek-button')) ? 'agendaWeek' : (($(this).hasClass('fc-agendaDay-button')) ? 'agendaDay' : 'month');\n\t\t\tme.set_localStorage_option(\"cal_defaultView\", value);\n\t\t});\n\n\t\tme.$wrapper.on(\"click\", \".btn-weekend\", function() {\n\t\t\tme.cal_options.weekends = !me.cal_options.weekends;\n\t\t\tme.$cal.fullCalendar('option', 'weekends', me.cal_options.weekends);\n\t\t\tme.set_localStorage_option(\"cal_weekends\", me.cal_options.weekends);\n\t\t\tme.set_css();\n\t\t\tme.setup_view_mode_button(me.cal_options);\n\t\t});\n\t},\n\tset_css: function() {\n\t\t// flatify buttons\n\t\tthis.$wrapper.find(\"button.fc-state-default\")\n\t\t\t.removeClass(\"fc-state-default\")\n\t\t\t.addClass(\"btn btn-default\");\n\n\t\tthis.$wrapper\n\t\t\t.find('.fc-month-button, .fc-agendaWeek-button, .fc-agendaDay-button')\n\t\t\t.wrapAll('<div class=\"btn-group\" />');\n\n\t\tthis.$wrapper.find('.fc-prev-button span')\n\t\t\t.attr('class', '').html(frappe.utils.icon('left'));\n\t\tthis.$wrapper.find('.fc-next-button span')\n\t\t\t.attr('class', '').html(frappe.utils.icon('right'));\n\n\t\tthis.$wrapper.find('.fc-today-button')\n\t\t\t.prepend(frappe.utils.icon('today'));\n\n\t\tthis.$wrapper.find('.fc-day-number').wrap('<div class=\"fc-day\"></div>');\n\n\t\tvar btn_group = this.$wrapper.find(\".fc-button-group\");\n\t\tbtn_group.find(\".fc-state-active\").addClass(\"active\");\n\n\t\tbtn_group.find(\".btn\").on(\"click\", function() {\n\t\t\tbtn_group.find(\".btn\").removeClass(\"active\");\n\t\t\t$(this).addClass(\"active\");\n\t\t});\n\t},\n\tfield_map: {\n\t\t\"id\": \"name\",\n\t\t\"start\": \"start\",\n\t\t\"end\": \"end\",\n\t\t\"allDay\": \"all_day\",\n\t\t\"convertToUserTz\": \"convert_to_user_tz\",\n\t},\n\tcolor_map: {\n\t\t\"danger\": \"red\",\n\t\t\"success\": \"green\",\n\t\t\"warning\": \"orange\",\n\t\t\"default\": \"blue\"\n\t},\n\tget_system_datetime: function(date) {\n\t\tdate._offset = (moment(date).tz(frappe.sys_defaults.time_zone)._offset);\n\t\treturn frappe.datetime.convert_to_system_tz(date);\n\t},\n\tsetup_options: function(defaults) {\n\t\tvar me = this;\n\t\tdefaults.meridiem = 'false';\n\t\tthis.cal_options = {\n\t\t\tlocale: frappe.boot.user.language || \"en\",\n\t\t\theader: {\n\t\t\t\tleft: 'prev, title, next',\n\t\t\t\tright: 'today, month, agendaWeek, agendaDay'\n\t\t\t},\n\t\t\teditable: true,\n\t\t\tselectable: true,\n\t\t\tselectHelper: true,\n\t\t\tforceEventDuration: true,\n\t\t\tdisplayEventTime: true,\n\t\t\tdefaultView: defaults.defaultView,\n\t\t\tweekends: defaults.weekends,\n\t\t\tnowIndicator: true,\n\t\t\tevents: function(start, end, timezone, callback) {\n\t\t\t\treturn frappe.call({\n\t\t\t\t\tmethod: me.get_events_method || \"frappe.desk.calendar.get_events\",\n\t\t\t\t\ttype: \"GET\",\n\t\t\t\t\targs: me.get_args(start, end),\n\t\t\t\t\tcallback: function(r) {\n\t\t\t\t\t\tvar events = r.message || [];\n\t\t\t\t\t\tevents = me.prepare_events(events);\n\t\t\t\t\t\tcallback(events);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t},\n\t\t\tdisplayEventEnd: true,\n\t\t\teventRender: function(event, element) {\n\t\t\t\telement.attr('title', event.tooltip);\n\t\t\t},\n\t\t\teventClick: function(event) {\n\t\t\t\t// edit event description or delete\n\t\t\t\tvar doctype = event.doctype || me.doctype;\n\t\t\t\tif(frappe.model.can_read(doctype)) {\n\t\t\t\t\tfrappe.set_route(\"Form\", doctype, event.name);\n\t\t\t\t}\n\t\t\t},\n\t\t\teventDrop: function(event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\teventResize: function(event, delta, revertFunc) {\n\t\t\t\tme.update_event(event, revertFunc);\n\t\t\t},\n\t\t\tselect: function(startDate, endDate, jsEvent, view) {\n\t\t\t\tif (view.name===\"month\" && (endDate - startDate)===86400000) {\n\t\t\t\t\t// detect single day click in month view\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar event = frappe.model.get_new_doc(me.doctype);\n\n\t\t\t\tevent[me.field_map.start] = me.get_system_datetime(startDate);\n\n\t\t\t\tif(me.field_map.end)\n\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(endDate);\n\n\t\t\t\tif(me.field_map.allDay) {\n\t\t\t\t\tvar all_day = (startDate._ambigTime && endDate._ambigTime) ? 1 : 0;\n\n\t\t\t\t\tevent[me.field_map.allDay] = all_day;\n\n\t\t\t\t\tif (all_day)\n\t\t\t\t\t\tevent[me.field_map.end] = me.get_system_datetime(moment(endDate).subtract(1, \"s\"));\n\t\t\t\t}\n\n\t\t\t\tfrappe.set_route(\"Form\", me.doctype, event.name);\n\t\t\t},\n\t\t\tdayClick: function(date, jsEvent, view) {\n\t\t\t\tif(view.name === 'month') {\n\t\t\t\t\tconst $date_cell = $('td[data-date=' + date.format('YYYY-MM-DD') + \"]\");\n\n\t\t\t\t\tif($date_cell.hasClass('date-clicked')) {\n\t\t\t\t\t\tme.$cal.fullCalendar('changeView', 'agendaDay');\n\t\t\t\t\t\tme.$cal.fullCalendar('gotoDate', date);\n\t\t\t\t\t\tme.$wrapper.find('.date-clicked').removeClass('date-clicked');\n\n\t\t\t\t\t\t// update \"active view\" btn\n\t\t\t\t\t\tme.$wrapper.find('.fc-month-button').removeClass('active');\n\t\t\t\t\t\tme.$wrapper.find('.fc-agendaDay-button').addClass('active');\n\t\t\t\t\t}\n\n\t\t\t\t\tme.$wrapper.find('.date-clicked').removeClass('date-clicked');\n\t\t\t\t\t$date_cell.addClass('date-clicked');\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\tif(this.options) {\n\t\t\t$.extend(this.cal_options, this.options);\n\t\t}\n\t},\n\tget_args: function(start, end) {\n\t\tvar args = {\n\t\t\tdoctype: this.doctype,\n\t\t\tstart: this.get_system_datetime(start),\n\t\t\tend: this.get_system_datetime(end),\n\t\t\tfields: this.fields,\n\t\t\tfilters: this.list_view.filter_area.get(),\n\t\t\tfield_map: this.field_map\n\t\t};\n\t\treturn args;\n\t},\n\trefresh: function() {\n\t\tthis.$cal.fullCalendar('refetchEvents');\n\t},\n\tprepare_events: function(events) {\n\t\tvar me = this;\n\n\t\treturn (events || []).map(d => {\n\t\t\td.id = d.name;\n\t\t\td.editable = frappe.model.can_write(d.doctype || me.doctype);\n\n\t\t\t// do not allow submitted/cancelled events to be moved / extended\n\t\t\tif(d.docstatus && d.docstatus > 0) {\n\t\t\t\td.editable = false;\n\t\t\t}\n\n\t\t\t$.each(me.field_map, function(target, source) {\n\t\t\t\td[target] = d[source];\n\t\t\t});\n\n\t\t\tif (!me.field_map.allDay) d.allDay = 1;\n\t\t\tif (!me.field_map.convertToUserTz) d.convertToUserTz = 1;\n\n\t\t\t// convert to user tz\n\t\t\tif (d.convertToUserTz) {\n\t\t\t\td.start = frappe.datetime.convert_to_user_tz(d.start);\n\t\t\t\td.end = frappe.datetime.convert_to_user_tz(d.end);\n\t\t\t}\n\n\t\t\t// show event on single day if start or end date is invalid\n\t\t\tif (!frappe.datetime.validate(d.start) && d.end) {\n\t\t\t\td.start = frappe.datetime.add_days(d.end, -1);\n\t\t\t}\n\n\t\t\tif (d.start && !frappe.datetime.validate(d.end)) {\n\t\t\t\td.end = frappe.datetime.add_days(d.start, 1);\n\t\t\t}\n\n\t\t\tme.fix_end_date_for_event_render(d);\n\t\t\tme.prepare_colors(d);\n\n\t\t\td.title = frappe.utils.html2text(d.title);\n\n\t\t\treturn d;\n\t\t});\n\t},\n\tprepare_colors: function(d) {\n\t\tlet color, color_name;\n\t\tif(this.get_css_class) {\n\t\t\tcolor_name = this.color_map[this.get_css_class(d)] || 'blue';\n\n\t\t\tif (color_name.startsWith(\"#\")) {\n\t\t\t\tcolor_name = frappe.ui.color.validate_hex(color_name) ?\n\t\t\t\t\tcolor_name : 'blue';\n\t\t\t}\n\n\t\t\td.backgroundColor = frappe.ui.color.get(color_name, 'extra-light');\n\t\t\td.textColor = frappe.ui.color.get(color_name, 'dark');\n\t\t} else {\n\t\t\tcolor = d.color;\n\t\t\tif (!frappe.ui.color.validate_hex(color) || !color) {\n\t\t\t\tcolor = frappe.ui.color.get('blue', 'extra-light');\n\t\t\t}\n\t\t\td.backgroundColor = color;\n\t\t\td.textColor = frappe.ui.color.get_contrast_color(color);\n\t\t}\n\t\treturn d;\n\t},\n\tupdate_event: function(event, revertFunc) {\n\t\tvar me = this;\n\t\tfrappe.model.remove_from_locals(me.doctype, event.name);\n\t\treturn frappe.call({\n\t\t\tmethod: me.update_event_method || \"frappe.desk.calendar.update_event\",\n\t\t\targs: me.get_update_args(event),\n\t\t\tcallback: function(r) {\n\t\t\t\tif(r.exc) {\n\t\t\t\t\tfrappe.show_alert(__(\"Unable to update event\"));\n\t\t\t\t\trevertFunc();\n\t\t\t\t}\n\t\t\t},\n\t\t\terror: function() {\n\t\t\t\trevertFunc();\n\t\t\t}\n\t\t});\n\t},\n\tget_update_args: function(event) {\n\t\tvar me = this;\n\t\tvar args = {\n\t\t\tname: event[this.field_map.id]\n\t\t};\n\n\t\targs[this.field_map.start] = me.get_system_datetime(event.start);\n\n\t\tif(this.field_map.allDay)\n\t\t\targs[this.field_map.allDay] = (event.start._ambigTime && event.end._ambigTime) ? 1 : 0;\n\n\t\tif(this.field_map.end) {\n\t\t\tif (!event.end) {\n\t\t\t\tevent.end = event.start.add(1, \"hour\");\n\t\t\t}\n\n\t\t\targs[this.field_map.end] = me.get_system_datetime(event.end);\n\n\t\t\tif (args[this.field_map.allDay]) {\n\t\t\t\targs[this.field_map.end] = me.get_system_datetime(moment(event.end).subtract(1, \"s\"));\n\t\t\t}\n\t\t}\n\n\t\targs.doctype = event.doctype || this.doctype;\n\n\t\treturn { args: args, field_map: this.field_map };\n\t},\n\n\tfix_end_date_for_event_render: function(event) {\n\t\tif (event.allDay) {\n\t\t\t// We use inclusive end dates. This workaround fixes the rendering of events\n\t\t\tevent.start = event.start ? $.fullCalendar.moment(event.start).stripTime() : null;\n\t\t\tevent.end = event.end ? $.fullCalendar.moment(event.end).add(1, \"day\").stripTime() : null;\n\t\t}\n\t}\n});\n","frappe.provide('frappe.views');\n\nfrappe.views.DashboardView = class DashboardView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Dashboard';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.page_title = __('{0} Dashboard', [__(this.doctype)]);\n\t\t\t\tthis.dashboard_settings = frappe.get_user_settings(this.doctype)['dashboard_settings'] || null;\n\t\t\t});\n\t}\n\n\trender() {\n\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_filters = true;\n\t\tthis.hide_sort_selector = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.chart_group || this.number_card_group) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.setup_dashboard_page();\n\t\tthis.setup_dashboard_customization();\n\t\tthis.make_dashboard();\n\t}\n\n\tsetup_dashboard_customization() {\n\t\tthis.page.add_menu_item(__('Customize Dashboard'), () => this.customize());\n\t\tthis.page.add_menu_item(__('Reset Dashboard Customizations'), () => this.reset_dashboard_customization());\n\t\tthis.add_customization_buttons();\n\t}\n\n\tsetup_dashboard_page() {\n\t\tconst chart_wrapper_html = `<div class=\"dashboard-view\"></div>`;\n\n\t\tthis.$frappe_list.html(chart_wrapper_html);\n\t\tthis.page.clear_secondary_action();\n\t\tthis.$dashboard_page = this.$page.find('.layout-main-section-wrapper').addClass('dashboard-page');\n\t\tthis.page.main.removeClass('frappe-card');\n\n\t\tthis.$dashboard_wrapper = this.$page.find('.dashboard-view');\n\t\tthis.$chart_header = this.$page.find('.dashboard-header');\n\n\t\tfrappe.utils.bind_actions_with_object(this.$dashboard_page, this);\n\t}\n\n\tadd_customization_buttons() {\n\t\tthis.save_customizations_button = this.page.add_button(\n\t\t\t__(\"Save Customizations\"),\n\t\t\t() => {\n\t\t\t\tthis.save_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t},\n\t\t\t{btn_class: 'btn-primary'}\n\t\t);\n\n\t\tthis.discard_customizations_button = this.page.add_button(\n\t\t\t__(\"Discard\"),\n\t\t\t() => {\n\t\t\t\tthis.discard_dashboard_customization();\n\t\t\t\tthis.page.standard_actions.show();\n\t\t\t}\n\t\t);\n\n\t\tthis.toggle_customization_buttons(false);\n\t}\n\n\tset_primary_action() {\n\t\t// Don't render Add doc button for dashboard view\n\t}\n\n\ttoggle_customization_buttons(show) {\n\t\tthis.save_customizations_button.toggle(show);\n\t\tthis.discard_customizations_button.toggle(show);\n\t}\n\n\tmake_dashboard() {\n\t\tif (this.dashboard_settings) {\n\t\t\tthis.charts = this.dashboard_settings.charts;\n\t\t\tthis.number_cards = this.dashboard_settings.number_cards;\n\t\t\tthis.render_dashboard();\n\t\t} else {\n\t\t\tfrappe.run_serially([\n\t\t\t\t() => this.fetch_dashboard_items(\n\t\t\t\t\t'Dashboard Chart',\n\t\t\t\t\t{\n\t\t\t\t\t\tchart_type: ['in', ['Count', 'Sum', 'Group By']],\n\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t},\n\t\t\t\t\t'charts'\n\t\t\t\t),\n\t\t\t\t() => this.fetch_dashboard_items('Number Card',\n\t\t\t\t\t{\n\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\tis_public: 1,\n\t\t\t\t\t},\n\t\t\t\t\t'number_cards'\n\t\t\t\t),\n\t\t\t\t() => this.render_dashboard()\n\t\t\t]);\n\t\t}\n\t}\n\n\trender_dashboard() {\n\t\tthis.$dashboard_wrapper.empty();\n\n\t\tfrappe.dashboard_utils.get_dashboard_settings().then(settings => {\n\t\t\tthis.dashboard_chart_settings = settings.chart_config ? JSON.parse(settings.chart_config) : {};\n\t\t\tthis.charts.map(chart => {\n\t\t\t\tchart.label = chart.chart_name;\n\t\t\t\tchart.chart_settings = this.dashboard_chart_settings[chart.chart_name] || {};\n\t\t\t});\n\t\t\tthis.render_dashboard_charts();\n\t\t});\n\t\tthis.render_number_cards();\n\n\t\tif (!this.charts.length && !this.number_cards.length) {\n\t\t\tthis.render_empty_state();\n\t\t}\n\t}\n\n\tfetch_dashboard_items(doctype, filters, obj_name) {\n\t\treturn frappe.db.get_list(doctype, {\n\t\t\tfilters: filters,\n\t\t\tfields: ['*']\n\t\t}).then(items => {\n\t\t\tthis[obj_name] = items;\n\t\t});\n\t}\n\n\trender_number_cards() {\n\t\tthis.number_card_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"number_card\",\n\t\t\tcolumns: 3,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t},\n\t\t\tdefault_values: {doctype: this.doctype},\n\t\t\twidgets: this.number_cards || [],\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.number_card_group.customize();\n\t}\n\n\trender_dashboard_charts() {\n\t\tthis.chart_group = new frappe.widget.WidgetGroup({\n\t\t\tcontainer: this.$dashboard_wrapper,\n\t\t\ttype: \"chart\",\n\t\t\tcolumns: 2,\n\t\t\theight: 240,\n\t\t\toptions: {\n\t\t\t\tallow_sorting: true,\n\t\t\t\tallow_create: true,\n\t\t\t\tallow_delete: true,\n\t\t\t\tallow_hiding: true,\n\t\t\t\tallow_resize: true,\n\t\t\t},\n\t\t\tcustom_dialog: () => this.show_add_chart_dialog(),\n\t\t\twidgets: this.charts,\n\t\t\tin_customize_mode: this.in_customize_mode || false,\n\t\t});\n\n\t\tthis.in_customize_mode && this.chart_group.customize();\n\t\tthis.chart_group.container.find('.widget-group-head').hide();\n\t}\n\n\trender_empty_state() {\n\t\tconst no_result_message_html =\n\t\t\t`<p>${__(\"You haven't added any Dashboard Charts or Number Cards yet.\")}\n\t\t\t<br>${__(\"Click On Customize to add your first widget\")}</p>`;\n\n\t\tconst customize_button =\n\t\t\t`<p><button class=\"btn btn-primary btn-sm\" data-action=\"customize\">\n\t\t\t\t${__('Customize')}\n\t\t\t</button></p>`;\n\n\t\tconst empty_state_image = '/assets/frappe/images/ui-states/list-empty-state.svg';\n\n\t\tconst empty_state_html = `<div class=\"msg-box no-border empty-dashboard\">\n\t\t\t<div>\n\t\t\t\t<img src=\"${empty_state_image}\" alt=\"Generic Empty State\" class=\"null-state\">\n\t\t\t</div>\n\t\t\t${no_result_message_html}\n\t\t\t${customize_button}\n\t\t</div>`;\n\n\t\tthis.$dashboard_wrapper.append(empty_state_html);\n\t\tthis.$empty_state = this.$dashboard_wrapper.find('.empty-dashboard');\n\t}\n\n\tcustomize() {\n\t\tif (this.in_customize_mode) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.page.standard_actions.hide();\n\n\t\tif (this.$empty_state) {\n\t\t\tthis.$empty_state.remove();\n\t\t}\n\n\t\tthis.toggle_customize(true);\n\t\tthis.in_customize_mode = true;\n\t\tthis.chart_group.customize();\n\t\tthis.number_card_group.customize();\n\t}\n\n\tget_widgets_to_save(widget_group) {\n\t\tconst config = widget_group.get_widget_config();\n\t\tlet widgets = [];\n\t\tconfig.order.map(widget_name => {\n\t\t\twidgets.push(config.widgets[widget_name]);\n\t\t});\n\t\treturn this.remove_duplicates(widgets);\n\t}\n\n\tsave_dashboard_customization() {\n\t\tthis.toggle_customize(false);\n\n\t\tconst charts = this.get_widgets_to_save(this.chart_group);\n\t\tconst number_cards = this.get_widgets_to_save(this.number_card_group);\n\n\t\tthis.dashboard_settings = {\n\t\t\tcharts: charts,\n\t\t\tnumber_cards: number_cards,\n\t\t};\n\n\t\tfrappe.model.user_settings.save(this.doctype, 'dashboard_settings', this.dashboard_settings);\n\t\tthis.make_dashboard();\n\t}\n\n\tdiscard_dashboard_customization() {\n\t\tthis.dashboard_settings = frappe.get_user_settings(this.doctype)['dashboard_settings'] || null;\n\t\tthis.toggle_customize(false);\n\t\tthis.render_dashboard();\n\t}\n\n\treset_dashboard_customization() {\n\t\tfrappe.confirm(__(\"Are you sure you want to reset all customizations?\"), () => {\n\t\t\tthis.dashboard_settings = null;\n\t\t\tfrappe.model.user_settings.save(\n\t\t\t\tthis.doctype, 'dashboard_settings', this.dashboard_settings\n\t\t\t).then(() => this.make_dashboard());\n\n\t\t\tthis.toggle_customize(false);\n\t\t});\n\t}\n\n\ttoggle_customize(show) {\n\t\tthis.toggle_customization_buttons(show);\n\t\tthis.in_customize_mode = show;\n\t}\n\n\tshow_add_chart_dialog() {\n\t\tlet fields = this.get_field_options();\n\t\tconst dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"Add a {0} Chart\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'new_or_existing',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tlabel: 'Choose an existing chart or create a new chart',\n\t\t\t\t\toptions: ['New Chart', 'Existing Chart'],\n\t\t\t\t\treqd: 1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart',\n\t\t\t\t\tfieldname: 'chart',\n\t\t\t\t\tfieldtype: 'Link',\n\t\t\t\t\tget_query: () => {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t'query': 'frappe.desk.doctype.dashboard_chart.dashboard_chart.get_charts_for_user',\n\t\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\t\tdocument_type: this.doctype,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t},\n\t\t\t\t\toptions: 'Dashboard Chart',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"Existing Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Label',\n\t\t\t\t\tfieldname: 'label',\n\t\t\t\t\tfieldtype: 'Data',\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Type',\n\t\t\t\t\tfieldname: 'chart_type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Time Series', 'Group By'],\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Chart Config',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Function',\n\t\t\t\t\tfieldname: 'chart_function',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Count', 'Sum', 'Average'],\n\t\t\t\t\tdefault: 'Count',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Timespan',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'timespan',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: ['Last Year', 'Last Quarter', 'Last Month', 'Last Week'],\n\t\t\t\t\tdefault: 'Last Year',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_2',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Value Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'based_on',\n\t\t\t\t\toptions: fields.value_fields,\n\t\t\t\t\tdepends_on: 'eval: doc.chart_function==\"Sum\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Time Series Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'based_on',\n\t\t\t\t\toptions: fields.date_fields,\n\t\t\t\t\tmandatory_depends_on: 'eval: doc.chart_type == \"Time Series\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Time Interval',\n\t\t\t\t\tfieldname: 'time_interval',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Time Series\"',\n\t\t\t\t\toptions: ['Yearly', 'Quarterly', 'Monthly', 'Weekly', 'Daily'],\n\t\t\t\t\tdefault: 'Monthly'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_2',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tlabel: 'Chart Config',\n\t\t\t\t\tdepends_on: 'eval: doc.chart_type == \"Group By\" && doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Group By Type',\n\t\t\t\t\tfieldname: 'group_by_type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Count', 'Sum', 'Average'],\n\t\t\t\t\tdefault: 'Count',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Aggregate Function Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'aggregate_function_based_on',\n\t\t\t\t\toptions: fields.aggregate_function_fields,\n\t\t\t\t\tdepends_on: 'eval: [\"Sum\", \"Avergage\"].includes(doc.group_by_type)',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_2',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Group By Based On',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\tfieldname: 'group_by_based_on',\n\t\t\t\t\toptions: fields.group_by_fields,\n\t\t\t\t\tdefault: 'Last Year',\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Number of Groups',\n\t\t\t\t\tfieldtype: 'Int',\n\t\t\t\t\tfieldname: 'number_of_groups',\n\t\t\t\t\tdefault: 0,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'sb_3',\n\t\t\t\t\tfieldtype: 'Section Break',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Type',\n\t\t\t\t\tfieldname: 'type',\n\t\t\t\t\tfieldtype: 'Select',\n\t\t\t\t\toptions: ['Line', 'Bar', 'Percentage', 'Pie'],\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: 'cb_1',\n\t\t\t\t\tfieldtype: 'Column Break'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tlabel: 'Chart Color',\n\t\t\t\t\tfieldname: 'color',\n\t\t\t\t\tfieldtype: 'Color',\n\t\t\t\t\tdepends_on: 'eval: doc.new_or_existing == \"New Chart\"',\n\t\t\t\t},\n\t\t\t],\n\t\t\tprimary_action_label: __('Add'),\n\t\t\tprimary_action: (values) => {\n\t\t\t\tlet chart = values;\n\t\t\t\tif (chart.new_or_existing == 'New Chart') {\n\t\t\t\t\tchart.chart_name = chart.label;\n\t\t\t\t\tchart.chart_type = chart.chart_type == 'Time Series' ? chart.chart_function : chart.chart_type;\n\t\t\t\t\tchart.document_type = this.doctype;\n\t\t\t\t\tchart.filters_json = '[]';\n\t\t\t\t\tfrappe.xcall('frappe.desk.doctype.dashboard_chart.dashboard_chart.create_dashboard_chart', {'args': chart}).then((doc)=> {\n\t\t\t\t\t\tthis.chart_group.new_widget.on_create({'chart_name': doc.chart_name, 'name': doc.chart_name, 'label': chart.label});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.chart_group.new_widget.on_create({'chart_name': chart.chart, 'label': chart.chart, 'name': chart.chart});\n\t\t\t\t}\n\t\t\t\tdialog.hide();\n\t\t\t}\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_field_options() {\n\t\tlet date_fields = [\n\t\t\t{label: __('Created On'), value: 'creation'},\n\t\t\t{label: __('Last Modified On'), value: 'modified'}\n\t\t];\n\t\tlet value_fields = [];\n\t\tlet group_by_fields = [];\n\t\tlet aggregate_function_fields = [];\n\n\t\tfrappe.get_meta(this.doctype).fields.map(df => {\n\t\t\tif (['Date', 'Datetime'].includes(df.fieldtype)) {\n\t\t\t\tdate_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t\tif (frappe.model.numeric_fieldtypes.includes(df.fieldtype)) {\n\t\t\t\tif (df.fieldtype == 'Currency') {\n\t\t\t\t\tif (!df.options || df.options !== 'Company:company:default_currency') {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvalue_fields.push({label: df.label, value: df.fieldname});\n\t\t\t\taggregate_function_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t\tif (['Link', 'Select'].includes(df.fieldtype)) {\n\t\t\t\tgroup_by_fields.push({label: df.label, value: df.fieldname});\n\t\t\t}\n\t\t});\n\n\t\treturn {\n\t\t\tdate_fields: date_fields,\n\t\t\tvalue_fields: value_fields,\n\t\t\tgroup_by_fields: group_by_fields,\n\t\t\taggregate_function_fields: aggregate_function_fields\n\t\t};\n\t}\n\n\tremove_duplicates(items) {\n\t\treturn items.filter((item, index) => items.indexOf(item) === index);\n\t}\n\n};\n","/**\n * frappe.views.ImageView\n */\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.ImageView = class ImageView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn \"Image\";\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = this.page_title + \" \" + __(\"Images\");\n\t\t});\n\t}\n\n\tsetup_view() {\n\t\tthis.setup_columns();\n\t\tthis.setup_check_events();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tthis.fields = [\n\t\t\t\"name\",\n\t\t\t...this.get_fields_in_list_view().map(el => el.fieldname),\n\t\t\tthis.meta.title_field,\n\t\t\tthis.meta.image_field,\n\t\t\t\"_liked_by\"\n\t\t];\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\t\tthis.items = this.data.map(d => {\n\t\t\t// absolute url if cordova, else relative\n\t\t\td._image_url = this.get_image_url(d);\n\t\t\treturn d;\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.get_attached_images().then(() => {\n\t\t\tthis.render_image_view();\n\n\t\t\tif (!this.gallery) {\n\t\t\t\tthis.setup_gallery();\n\t\t\t} else {\n\t\t\t\tthis.gallery.prepare_pswp_items(this.items, this.images_map);\n\t\t\t}\n\t\t});\n\t}\n\n\trender_image_view() {\n\t\tvar html = this.items.map(this.item_html.bind(this)).join(\"\");\n\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"image-view\");\n\n\t\tthis.$result.html(`\n\t\t\t<div class=\"image-view-container\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`);\n\n\t\tthis.render_count();\n\t}\n\n\titem_details_html(item) {\n\t\t// TODO: Image view field in DocType\n\t\tlet info_fields =\n\t\t\tthis.get_fields_in_list_view().map(el => el.fieldname) || [];\n\t\tconst title_field = this.meta.title_field || \"name\";\n\t\tinfo_fields = info_fields.filter(field => field !== title_field);\n\t\tlet info_html = `<div><ul class=\"list-unstyled image-view-info\">`;\n\t\tlet set = false;\n\t\tinfo_fields.forEach((field, index) => {\n\t\t\tif (item[field] && !set) {\n\t\t\t\tif (index == 0) info_html += `<li>${__(item[field])}</li>`;\n\t\t\t\telse info_html += `<li class=\"text-muted\">${__(item[field])}</li>`;\n\t\t\t\tset = true;\n\t\t\t}\n\t\t});\n\t\tinfo_html += `</ul></div>`;\n\t\treturn info_html;\n\t}\n\n\titem_html(item) {\n\t\titem._name = encodeURI(item.name);\n\t\tconst encoded_name = item._name;\n\t\tconst title = strip_html(item[this.meta.title_field || \"name\"]);\n\t\tconst escaped_title = frappe.utils.escape_html(title);\n\t\tconst _class = !item._image_url ? \"no-image\" : \"\";\n\t\tconst _html = item._image_url\n\t\t\t? `<img data-name=\"${encoded_name}\" src=\"${item._image_url}\" alt=\"${title}\">`\n\t\t\t: `<span class=\"placeholder-text\">\n\t\t\t\t${frappe.get_abbr(title)}\n\t\t\t</span>`;\n\n\t\tlet details = this.item_details_html(item);\n\n\t\tconst expand_button_html = item._image_url\n\t\t\t? `<div class=\"zoom-view\" data-name=\"${encoded_name}\">\n\t\t\t\t${frappe.utils.icon(\"expand\", \"xs\")}\n\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\treturn `\n\t\t\t<div class=\"image-view-item ellipsis\">\n\t\t\t\t<div class=\"image-view-header\">\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\"\n\t\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${escape(item.name)}\">\n\t\t\t\t\t\t${this.get_like_html(item)}\n\t\t\t\t\t</div>\n\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-body ${_class}\">\n\t\t\t\t\t<a data-name=\"${encoded_name}\"\n\t\t\t\t\t\ttitle=\"${encoded_name}\"\n\t\t\t\t\t\thref=\"${this.get_form_link(item)}\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<div class=\"image-field\"\n\t\t\t\t\t\t\tdata-name=\"${encoded_name}\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t${_html}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</a>\n\t\t\t\t\t${expand_button_html}\n\t\t\t\t</div>\n\t\t\t\t<div class=\"image-view-footer\">\n\t\t\t\t\t<div class=\"image-title\">\n\t\t\t\t\t\t<span class=\"ellipsis\" title=\"${escaped_title}\">\n\t\t\t\t\t\t\t<a class=\"ellipsis\" href=\"${this.get_form_link(item)}\"\n\t\t\t\t\t\t\t\ttitle=\"${escaped_title}\" data-doctype=\"${this.doctype}\" data-name=\"${item.name}\">\n\t\t\t\t\t\t\t\t${title}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</div>\n\t\t\t\t\t${details}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_attached_images() {\n\t\treturn frappe\n\t\t\t.call({\n\t\t\t\tmethod: \"frappe.core.doctype.file.file.get_attached_images\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: this.doctype,\n\t\t\t\t\tnames: this.items.map(i => i.name)\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then(r => {\n\t\t\t\tthis.images_map = Object.assign(\n\t\t\t\t\tthis.images_map || {},\n\t\t\t\t\tr.message\n\t\t\t\t);\n\t\t\t});\n\t}\n\n\tget_header_html() {\n\t\t// return this.get_header_html_skeleton(`\n\t\t// \t<div class=\"list-image-header\">\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"Select All\">\n\t\t// \t\t\t<div>${__(this.doctype)} &nbsp;</div>\n\t\t// \t\t\t(<span class=\"text-muted list-count\"></span>)\n\t\t// \t\t</div>\n\t\t// \t\t<div class=\"list-image-header-item\">\n\t\t// \t\t\t<div class=\"level-item list-liked-by-me\">\n\t\t// \t\t\t\t${frappe.utils.icon('heart', 'sm', 'like-icon')}\n\t\t// \t\t\t</div>\n\t\t// \t\t\t<div>${__('Liked')}</div>\n\t\t// \t\t</div>\n\t\t// \t</div>\n\t\t// `);\n\t}\n\n\tsetup_gallery() {\n\t\tvar me = this;\n\t\tthis.gallery = new frappe.views.GalleryView({\n\t\t\tdoctype: this.doctype,\n\t\t\titems: this.items,\n\t\t\twrapper: this.$result,\n\t\t\timages_map: this.images_map\n\t\t});\n\t\tthis.$result.on(\"click\", \".zoom-view\", function(e) {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\tvar name = $(this).data().name;\n\t\t\tname = decodeURIComponent(name);\n\t\t\tme.gallery.show(name);\n\t\t\treturn false;\n\t\t});\n\t}\n};\n\nfrappe.views.GalleryView = Class.extend({\n\tinit: function(opts) {\n\t\t$.extend(this, opts);\n\t\tvar me = this;\n\n\t\tthis.lib_ready = this.load_lib();\n\t\tthis.lib_ready.then(function() {\n\t\t\tme.prepare();\n\t\t});\n\t},\n\tprepare: function() {\n\t\t// keep only one pswp dom element\n\t\tthis.pswp_root = $(\"body > .pswp\");\n\t\tif (this.pswp_root.length === 0) {\n\t\t\tvar pswp = frappe.render_template(\"photoswipe_dom\");\n\t\t\tthis.pswp_root = $(pswp).appendTo(\"body\");\n\t\t}\n\t},\n\tprepare_pswp_items: function(_items, _images_map) {\n\t\tvar me = this;\n\n\t\tif (_items) {\n\t\t\t// passed when more button clicked\n\t\t\tthis.items = this.items.concat(_items);\n\t\t\tthis.images_map = _images_map;\n\t\t}\n\n\t\treturn new Promise(resolve => {\n\t\t\tconst items = this.items.map(function(i) {\n\t\t\t\tconst query = 'img[data-name=\"' + i._name + '\"]';\n\t\t\t\tlet el = me.wrapper.find(query).get(0);\n\n\t\t\t\tlet width, height;\n\t\t\t\tif (el) {\n\t\t\t\t\twidth = el.naturalWidth;\n\t\t\t\t\theight = el.naturalHeight;\n\t\t\t\t}\n\n\t\t\t\tif (!el) {\n\t\t\t\t\tel = me.wrapper\n\t\t\t\t\t\t.find('.image-field[data-name=\"' + i._name + '\"]')\n\t\t\t\t\t\t.get(0);\n\t\t\t\t\twidth = el.getBoundingClientRect().width;\n\t\t\t\t\theight = el.getBoundingClientRect().height;\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tsrc: i._image_url,\n\t\t\t\t\tmsrc: i._image_url,\n\t\t\t\t\tname: i.name,\n\t\t\t\t\tw: width,\n\t\t\t\t\th: height,\n\t\t\t\t\tel: el\n\t\t\t\t};\n\t\t\t});\n\t\t\tthis.pswp_items = items;\n\t\t\tresolve();\n\t\t});\n\t},\n\tshow: function(docname) {\n\t\tthis.lib_ready\n\t\t\t.then(() => this.prepare_pswp_items())\n\t\t\t.then(() => this._show(docname));\n\t},\n\t_show: function(docname) {\n\t\tconst me = this;\n\t\tconst items = this.pswp_items;\n\t\tconst item_index = items.findIndex(item => item.name === docname);\n\n\t\tvar options = {\n\t\t\tindex: item_index,\n\t\t\tgetThumbBoundsFn: function(index) {\n\t\t\t\tconst query = 'img[data-name=\"' + items[index]._name + '\"]';\n\t\t\t\tlet thumbnail = me.wrapper.find(query).get(0);\n\n\t\t\t\tif (!thumbnail) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar pageYScroll =\n\t\t\t\t\t\twindow.pageYOffset ||\n\t\t\t\t\t\tdocument.documentElement.scrollTop,\n\t\t\t\t\trect = thumbnail.getBoundingClientRect();\n\n\t\t\t\treturn {\n\t\t\t\t\tx: rect.left,\n\t\t\t\t\ty: rect.top + pageYScroll,\n\t\t\t\t\tw: rect.width\n\t\t\t\t};\n\t\t\t},\n\t\t\thistory: false,\n\t\t\tshareEl: false,\n\t\t\tshowHideOpacity: true\n\t\t};\n\n\t\t// init\n\t\tthis.pswp = new PhotoSwipe(\n\t\t\tthis.pswp_root.get(0),\n\t\t\tPhotoSwipeUI_Default,\n\t\t\titems,\n\t\t\toptions\n\t\t);\n\t\tthis.browse_images();\n\t\tthis.pswp.init();\n\t},\n\tbrowse_images: function() {\n\t\tconst $more_items = this.pswp_root.find(\".pswp__more-items\");\n\t\tconst images_map = this.images_map;\n\t\tlet last_hide_timeout = null;\n\n\t\tthis.pswp.listen(\"afterChange\", function() {\n\t\t\tconst images = images_map[this.currItem.name];\n\t\t\tif (!images || images.length === 1) {\n\t\t\t\t$more_items.html(\"\");\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\thide_more_items_after_2s();\n\t\t\tconst html = images.map(img_html).join(\"\");\n\t\t\t$more_items.html(html);\n\t\t});\n\n\t\tthis.pswp.listen(\"beforeChange\", hide_more_items);\n\t\tthis.pswp.listen(\"initialZoomOut\", hide_more_items);\n\t\tthis.pswp.listen(\"destroy\", () => {\n\t\t\t$(document).off(\"mousemove\", hide_more_items_after_2s);\n\t\t});\n\n\t\t// Replace current image on click\n\t\t$more_items.on(\"click\", \".pswp__more-item\", e => {\n\t\t\tconst img_el = e.target;\n\t\t\tconst index = this.pswp.items.findIndex(\n\t\t\t\ti => i.name === this.pswp.currItem.name\n\t\t\t);\n\n\t\t\tthis.pswp.goTo(index);\n\t\t\tthis.pswp.items.splice(index, 1, {\n\t\t\t\tsrc: img_el.src,\n\t\t\t\tw: img_el.naturalWidth,\n\t\t\t\th: img_el.naturalHeight,\n\t\t\t\tname: this.pswp.currItem.name\n\t\t\t});\n\t\t\tthis.pswp.invalidateCurrItems();\n\t\t\tthis.pswp.updateSize(true);\n\t\t});\n\n\t\t// hide more-images 2s after mousemove\n\t\t$(document).on(\"mousemove\", hide_more_items_after_2s);\n\n\t\tfunction hide_more_items_after_2s() {\n\t\t\tclearTimeout(last_hide_timeout);\n\t\t\tshow_more_items();\n\t\t\tlast_hide_timeout = setTimeout(hide_more_items, 2000);\n\t\t}\n\n\t\tfunction show_more_items() {\n\t\t\t$more_items.show();\n\t\t}\n\n\t\tfunction hide_more_items() {\n\t\t\t$more_items.hide();\n\t\t}\n\n\t\tfunction img_html(src) {\n\t\t\treturn `<div class=\"pswp__more-item\">\n\t\t\t\t<img src=\"${src}\">\n\t\t\t</div>`;\n\t\t}\n\t},\n\tload_lib: function() {\n\t\treturn new Promise(resolve => {\n\t\t\tvar asset_dir = \"assets/frappe/js/lib/photoswipe/\";\n\t\t\tfrappe.require(\n\t\t\t\t[\n\t\t\t\t\tasset_dir + \"photoswipe.css\",\n\t\t\t\t\tasset_dir + \"default-skin.css\",\n\t\t\t\t\tasset_dir + \"photoswipe.js\",\n\t\t\t\t\tasset_dir + \"photoswipe-ui-default.js\"\n\t\t\t\t],\n\t\t\t\tresolve\n\t\t\t);\n\t\t});\n\t}\n});\n","/**\n * frappe.views.MapView\n */\nfrappe.provide('frappe.utils.utils');\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.MapView = class MapView extends frappe.views.ListView {\n\tget view_name() {\n\t\treturn 'Map';\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\t\tthis.page_title = __('{0} Map', [this.page_title]);\n\t}\n\n\tsetup_view() {\n\t}\n\n\ton_filter_change() {\n\t\tthis.get_coords();\n\t}\n\n\trender() {\n\t\tthis.get_coords()\n\t\t\t.then(() => {\n\t\t\t\tthis.render_map_view();\n\t\t\t});\n\t\tthis.$paging_area.find('.level-left').append('<div></div>');\n\t}\n\n\trender_map_view() {\n\t\tthis.map_id = frappe.dom.get_unique_id();\n\n\t\tthis.$result.html(`<div id=\"${this.map_id}\" class=\"map-view-container\"></div>`);\n\n\t\tL.Icon.Default.imagePath = '/assets/frappe/images/leaflet/';\n\t\tthis.map = L.map(this.map_id).setView(frappe.utils.map_defaults.center,\n\t\t\tfrappe.utils.map_defaults.zoom);\n\n\t\tL.tileLayer(frappe.utils.map_defaults.tiles,\n\t\t\tfrappe.utils.map_defaults.options).addTo(this.map);\n\n\t\tL.control.scale().addTo(this.map);\n\t\tif (this.coords.features && this.coords.features.length) {\n\t\t\tthis.coords.features.forEach(\n\t\t\t\tcoords => L.geoJSON(coords).bindPopup(coords.properties.name).addTo(this.map)\n\t\t\t);\n\t\t\tlet lastCoords = this.coords.features[0].geometry.coordinates.reverse();\n\t\t\tthis.map.panTo(lastCoords, 8);\n\t\t}\n\t}\n\n\tget_coords() {\n\t\tlet get_coords_method = this.settings && this.settings.get_coords_method || 'frappe.geo.utils.get_coords';\n\n\t\tif (cur_list.meta.fields.find(i => i.fieldname === 'location' && i.fieldtype === 'Geolocation')) {\n\t\t\tthis.type = 'location_field';\n\t\t} else if  (cur_list.meta.fields.find(i => i.fieldname === \"latitude\") &&\n\t\t\tcur_list.meta.fields.find(i => i.fieldname === \"longitude\")) {\n\t\t\tthis.type = 'coordinates';\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod: get_coords_method,\n\t\t\targs: {\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tfilters: cur_list.filter_area.get(),\n\t\t\t\ttype: this.type\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tthis.coords = r.message;\n\n\t\t});\n\t}\n\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.css\",\n\t\t\t\"assets/frappe/js/lib/leaflet/leaflet.js\"\n\t\t];\n\t}\n\n\n};\n","export default class KanbanSettings {\n\tconstructor({ kanbanview, doctype, meta, settings }) {\n\t\tif (!doctype) {\n\t\t\tfrappe.throw(__(\"DocType required\"));\n\t\t}\n\n\t\tthis.kanbanview = kanbanview;\n\t\tthis.doctype = doctype;\n\t\tthis.meta = meta;\n\t\tthis.settings = settings;\n\t\tthis.dialog = null;\n\t\tthis.fields = this.settings && this.settings.fields;\n\n\t\tfrappe.model.with_doctype(\"List View Settings\", () => {\n\t\t\tthis.make();\n\t\t\tthis.get_fields();\n\t\t\tthis.setup_fields();\n\t\t\tthis.setup_remove_fields();\n\t\t\tthis.add_new_fields();\n\t\t\tthis.show_dialog();\n\t\t});\n\t}\n\n\tmake() {\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Settings\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"show_labels\",\n\t\t\t\t\tlabel: __(\"Show Labels\"),\n\t\t\t\t\tfieldtype: \"Check\",\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields_html\",\n\t\t\t\t\tfieldtype: \"HTML\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\tfieldtype: \"Code\",\n\t\t\t\t\thidden: 1\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\tthis.dialog.set_values(this.settings);\n\t\tthis.dialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tfrappe.show_alert({\n\t\t\t\tmessage: __(\"Saving\"),\n\t\t\t\tindicator: \"green\"\n\t\t\t});\n\n\t\t\tfrappe.call({\n\t\t\t\tmethod:\n\t\t\t\t\t\"frappe.desk.doctype.kanban_board.kanban_board.save_settings\",\n\t\t\t\targs: {\n\t\t\t\t\tboard_name: this.settings.name,\n\t\t\t\t\tsettings: this.dialog.get_values()\n\t\t\t\t},\n\t\t\t\tcallback: r => {\n\t\t\t\t\tthis.kanbanview.board = r.message;\n\t\t\t\t\tthis.kanbanview.render();\n\t\t\t\t\tthis.dialog.hide();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\trefresh() {\n\t\tthis.setup_fields();\n\t\tthis.add_new_fields();\n\t\tthis.setup_remove_fields();\n\t}\n\n\tshow_dialog() {\n\t\tif (!this.settings.fields) {\n\t\t\tthis.update_fields();\n\t\t}\n\n\t\tthis.dialog.show();\n\t}\n\n\tsetup_fields() {\n\t\tconst fields_html = this.dialog.get_field(\"fields_html\");\n\t\tconst wrapper = fields_html.$wrapper[0];\n\t\tlet fields = \"\";\n\n\t\tfor (let fieldname of this.fields) {\n\t\t\tlet field = this.get_docfield(fieldname);\n\n\t\t\tfields += `\n\t\t\t\t<div class=\"control-input flex align-center form-control fields_order sortable\"\n\t\t\t\t\tstyle=\"display: block; margin-bottom: 5px;\"\n\t\t\t\t\tdata-fieldname=\"${field.fieldname}\"\n\t\t\t\t\tdata-label=\"${field.label}\"\n\t\t\t\t\tdata-type=\"${field.type}\">\n\n\t\t\t\t\t<div class=\"row\">\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t${frappe.utils.icon(\"drag\", \"xs\", \"\", \"\", \"sortable-handle\")}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-10\" style=\"padding-left:0px;\">\n\t\t\t\t\t\t\t${__(field.label)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"col-md-1\">\n\t\t\t\t\t\t\t<a class=\"text-muted remove-field\" data-fieldname=\"${field.fieldname}\">\n\t\t\t\t\t\t\t\t${frappe.utils.icon(\"delete\", \"xs\")}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>`;\n\t\t}\n\n\t\tfields_html.html(`\n\t\t\t<div class=\"form-group\">\n\t\t\t\t<div class=\"clearfix\">\n\t\t\t\t\t<label class=\"control-label\" style=\"padding-right: 0px;\">Fields</label>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"control-input-wrapper\">\n\t\t\t\t${fields}\n\t\t\t\t</div>\n\t\t\t\t<p class=\"help-box small text-muted\">\n\t\t\t\t\t<a class=\"add-new-fields text-muted\">\n\t\t\t\t\t\t+ Add / Remove Fields\n\t\t\t\t\t</a>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t`);\n\n\t\tnew Sortable(\n\t\t\twrapper.getElementsByClassName(\"control-input-wrapper\")[0],\n\t\t\t{\n\t\t\t\thandle: \".sortable-handle\",\n\t\t\t\tdraggable: \".sortable\",\n\t\t\t\tonUpdate: params => {\n\t\t\t\t\tthis.fields.splice(\n\t\t\t\t\t\tparams.newIndex,\n\t\t\t\t\t\t0,\n\t\t\t\t\t\tthis.fields.splice(params.oldIndex, 1)[0]\n\t\t\t\t\t);\n\t\t\t\t\tthis.dialog.set_value(\n\t\t\t\t\t\t\"fields\",\n\t\t\t\t\t\tJSON.stringify(this.fields)\n\t\t\t\t\t);\n\t\t\t\t\tthis.refresh();\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t}\n\n\tadd_new_fields() {\n\t\tlet add_new_fields = this.get_dialog_fields_wrapper().getElementsByClassName(\n\t\t\t\"add-new-fields\"\n\t\t)[0];\n\t\tadd_new_fields.onclick = () => this.show_column_selector();\n\t}\n\n\tsetup_remove_fields() {\n\t\tlet remove_fields = this.get_dialog_fields_wrapper().getElementsByClassName(\n\t\t\t\"remove-field\"\n\t\t);\n\n\t\tfor (let idx = 0; idx < remove_fields.length; idx++) {\n\t\t\tremove_fields.item(idx).onclick = () =>\n\t\t\t\tthis.remove_fields(\n\t\t\t\t\tremove_fields.item(idx).getAttribute(\"data-fieldname\")\n\t\t\t\t);\n\t\t}\n\t}\n\n\tget_dialog_fields_wrapper() {\n\t\treturn this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t}\n\n\tremove_fields(fieldname) {\n\t\tthis.fields = this.fields.filter(field => field !== fieldname);\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\tthis.refresh();\n\t}\n\n\tupdate_fields() {\n\t\tconst wrapper = this.dialog.get_field(\"fields_html\").$wrapper[0];\n\t\tlet fields_order = wrapper.getElementsByClassName(\"fields_order\");\n\t\tthis.fields = [];\n\n\t\tfor (let idx = 0; idx < fields_order.length; idx++) {\n\t\t\tthis.fields.push(\n\t\t\t\tfields_order.item(idx).getAttribute(\"data-fieldname\")\n\t\t\t);\n\t\t}\n\n\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t}\n\n\tshow_column_selector() {\n\t\tlet dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __(\"{0} Fields\", [__(this.doctype)]),\n\t\t\tfields: [\n\t\t\t\t{\n\t\t\t\t\tlabel: __(\"Select Fields\"),\n\t\t\t\t\tfieldtype: \"MultiCheck\",\n\t\t\t\t\tfieldname: \"fields\",\n\t\t\t\t\toptions: this.get_multiselect_fields(),\n\t\t\t\t\tcolumns: 2\n\t\t\t\t}\n\t\t\t]\n\t\t});\n\t\tdialog.set_primary_action(__(\"Save\"), () => {\n\t\t\tthis.fields = dialog.get_values().fields || [];\n\t\t\tthis.dialog.set_value(\"fields\", JSON.stringify(this.fields));\n\t\t\tthis.refresh();\n\t\t\tdialog.hide();\n\t\t});\n\t\tdialog.show();\n\t}\n\n\tget_fields() {\n\t\tthis.fields = this.settings.fields;\n\t\tthis.fields.uniqBy(f => f.fieldname);\n\t}\n\n\tget_docfield(field_name) {\n\t\treturn (\n\t\t\tfrappe.meta.get_docfield(this.doctype, field_name) ||\n\t\t\tfrappe.model.get_std_field(field_name)\n\t\t);\n\t}\n\n\tget_multiselect_fields() {\n\t\tconst ignore_fields = [\n\t\t\t\"idx\",\n\t\t\t\"lft\",\n\t\t\t\"rgt\",\n\t\t\t\"old_parent\",\n\t\t\t\"_user_tags\",\n\t\t\t\"_liked_by\",\n\t\t\t\"_comments\",\n\t\t\t\"_assign\",\n\t\t\tthis.meta.title_field || \"name\"\n\t\t];\n\n\t\tconst ignore_fieldtypes = [\n\t\t\t\"Attach Image\",\n\t\t\t\"Text Editor\",\n\t\t\t\"HTML Editor\",\n\t\t\t\"Code\",\n\t\t\t\"Color\",\n\t\t\t...frappe.model.no_value_type\n\t\t];\n\n\t\treturn frappe.model.std_fields\n\t\t\t.concat(this.kanbanview.get_fields_in_list_view())\n\t\t\t.filter(\n\t\t\t\tfield =>\n\t\t\t\t\t!ignore_fields.includes(field.fieldname) &&\n\t\t\t\t\t!ignore_fieldtypes.includes(field.fieldtype)\n\t\t\t)\n\t\t\t.map(field => {\n\t\t\t\treturn {\n\t\t\t\t\tlabel: __(field.label),\n\t\t\t\t\tvalue: field.fieldname,\n\t\t\t\t\tchecked: this.fields.includes(field.fieldname)\n\t\t\t\t};\n\t\t\t});\n\t}\n}\n","frappe.provide(\"frappe.views\");\n\nfrappe.views.FileView = class FileView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 2) {\n\t\t\tconst view_user_settings = frappe.get_user_settings(\"File\", \"File\");\n\t\t\tfrappe.set_route(\n\t\t\t\t\"List\",\n\t\t\t\t\"File\",\n\t\t\t\tview_user_settings.last_folder || frappe.boot.home_folder\n\t\t\t);\n\t\t\treturn true;\n\t\t}\n\t\treturn redirect_to_home_if_invalid_route();\n\t}\n\n\tget view_name() {\n\t\treturn \"File\";\n\t}\n\n\tshow() {\n\t\tif (!redirect_to_home_if_invalid_route()) {\n\t\t\tsuper.show();\n\t\t}\n\t}\n\n\tsetup_view() {\n\t\tthis.render_header();\n\t\tthis.setup_events();\n\t\tthis.$page.find(\".layout-main-section-wrapper\").addClass(\"file-view\");\n\t\tthis.add_file_action_buttons();\n\t\tthis.page.add_button(__(\"Toggle Grid View\"), () => {\n\t\t\tfrappe.views.FileView.grid_view = !frappe.views.FileView.grid_view;\n\t\t\tthis.refresh();\n\t\t});\n\t}\n\n\tsetup_no_result_area() {\n\t\tthis.$no_result = $(`<div class=\"no-result\">\n\t\t\t<div class=\"breadcrumbs\">${this.get_breadcrumbs_html()}</div>\n\t\t\t<div class=\"text-muted flex justify-center align-center\">\n\t\t\t\t${this.get_no_result_message()}\n\t\t\t</div>\n\t\t</div>`).hide();\n\t\tthis.$frappe_list.append(this.$no_result);\n\t}\n\n\tget_args() {\n\t\tlet args = super.get_args();\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tObject.assign(args, {\n\t\t\t\torder_by: `is_folder desc, ${this.sort_by} ${this.sort_order}`\n\t\t\t});\n\t\t}\n\t\treturn args;\n\t}\n\n\tset_breadcrumbs() {\n\t\tconst route = frappe.get_route();\n\t\troute.splice(-1);\n\t\tconst last_folder = route[route.length - 1];\n\t\tif (last_folder === \"File\") return;\n\n\t\tfrappe.breadcrumbs.add({\n\t\t\ttype: \"Custom\",\n\t\t\tlabel: __(\"Home\"),\n\t\t\troute: \"/app/List/File/Home\"\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults().then(() => {\n\t\t\tthis.page_title = __(\"File Manager\");\n\n\t\t\tconst route = frappe.get_route();\n\t\t\tthis.current_folder = route.slice(2).join(\"/\");\n\t\t\tthis.filters = [[\"File\", \"folder\", \"=\", this.current_folder, true]];\n\t\t\tthis.order_by = this.view_user_settings.order_by || \"file_name asc\";\n\n\t\t\tthis.menu_items = this.menu_items.concat(this.file_menu_items());\n\t\t});\n\t}\n\n\tfile_menu_items() {\n\t\tconst items = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Home\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"New Folder\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tfrappe.prompt(\n\t\t\t\t\t\t__(\"Name\"),\n\t\t\t\t\t\tvalues => {\n\t\t\t\t\t\t\tif (values.value.indexOf(\"/\") > -1) {\n\t\t\t\t\t\t\t\tfrappe.throw(\n\t\t\t\t\t\t\t\t\t__(\n\t\t\t\t\t\t\t\t\t\t\"Folder name should not include '/' (slash)\"\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst data = {\n\t\t\t\t\t\t\t\tfile_name: values.value,\n\t\t\t\t\t\t\t\tfolder: this.current_folder\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tfrappe.call({\n\t\t\t\t\t\t\t\tmethod:\n\t\t\t\t\t\t\t\t\t\"frappe.core.doctype.file.file.create_new_folder\",\n\t\t\t\t\t\t\t\targs: data\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t},\n\t\t\t\t\t\t__(\"Enter folder name\"),\n\t\t\t\t\t\t__(\"Create\")\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Import Zip\"),\n\t\t\t\taction: () => {\n\t\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\t\tfolder: this.current_folder,\n\t\t\t\t\t\trestrictions: {\n\t\t\t\t\t\t\tallowed_file_types: [\".zip\"]\n\t\t\t\t\t\t},\n\t\t\t\t\t\ton_success: file => {\n\t\t\t\t\t\t\tfrappe.show_alert(__(\"Unzipping files...\"));\n\t\t\t\t\t\t\tfrappe\n\t\t\t\t\t\t\t\t.call(\n\t\t\t\t\t\t\t\t\t\"frappe.core.doctype.file.file.unzip_file\",\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tname: file.name\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.then(r => {\n\t\t\t\t\t\t\t\t\tif (r.message) {\n\t\t\t\t\t\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t\t\t\t\t\t__(\"Unzipped {0} files\", [\n\t\t\t\t\t\t\t\t\t\t\t\tr.message\n\t\t\t\t\t\t\t\t\t\t\t])\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\treturn items;\n\t}\n\n\tadd_file_action_buttons() {\n\t\tthis.$cut_button = this.page\n\t\t\t.add_button(__(\"Cut\"), () => {\n\t\t\t\tfrappe.file_manager.cut(\n\t\t\t\t\tthis.get_checked_items(),\n\t\t\t\t\tthis.current_folder\n\t\t\t\t);\n\t\t\t\tthis.$checks.parents(\".file-wrapper\").addClass(\"cut\");\n\t\t\t})\n\t\t\t.hide();\n\n\t\tthis.$paste_btn = this.page\n\t\t\t.add_button(__(\"Paste\"), () =>\n\t\t\t\tfrappe.file_manager.paste(this.current_folder)\n\t\t\t)\n\t\t\t.hide();\n\t}\n\n\tset_fields() {\n\t\tthis.fields = this.meta.fields\n\t\t\t.filter(\n\t\t\t\tdf => frappe.model.is_value_type(df.fieldtype) && !df.hidden\n\t\t\t)\n\t\t\t.map(df => df.fieldname)\n\t\t\t.concat([\"name\", \"modified\", \"creation\"]);\n\t}\n\n\tprepare_data(data) {\n\t\tsuper.prepare_data(data);\n\n\t\tthis.data = this.data.map(d => this.prepare_datum(d));\n\n\t\t// Bring folders to the top\n\t\tconst { sort_by } = this.sort_selector;\n\t\tif (sort_by === \"file_name\") {\n\t\t\tthis.data.sort((a, b) => {\n\t\t\t\tif (a.is_folder && !b.is_folder) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\tif (!a.is_folder && b.is_folder) {\n\t\t\t\t\treturn 1;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t}\n\n\tprepare_datum(d) {\n\t\tlet icon_class = \"\";\n\t\tlet type = \"\";\n\t\tif (d.is_folder) {\n\t\t\ticon_class = \"folder-normal\";\n\t\t\ttype = \"folder\";\n\t\t} else if (frappe.utils.is_image_file(d.file_name)) {\n\t\t\ticon_class = \"image\";\n\t\t\ttype = \"image\";\n\t\t} else {\n\t\t\ticon_class = \"file\";\n\t\t\ttype = \"file\";\n\t\t}\n\n\t\tlet title = d.file_name || d.file_url;\n\t\ttitle = title.slice(0, 60);\n\t\td._title = title;\n\t\td.icon_class = icon_class;\n\t\td._type = type;\n\n\t\td.subject_html = `\n\t\t\t${frappe.utils.icon(icon_class)}\n\t\t\t<span>${title}</span>\n\t\t\t${d.is_private ? '<i class=\"fa fa-lock fa-fw text-warning\"></i>' : \"\"}\n\t\t`;\n\t\treturn d;\n\t}\n\n\tbefore_render() {\n\t\tsuper.before_render();\n\t\tfrappe.model.user_settings.save(\n\t\t\t\"File\",\n\t\t\t\"grid_view\",\n\t\t\tfrappe.views.FileView.grid_view\n\t\t);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_folder: this.current_folder\n\t\t});\n\t}\n\n\trender() {\n\t\tthis.$result.empty().removeClass(\"file-grid-view\");\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render();\n\t\t\tthis.render_header();\n\t\t}\n\t}\n\n\tafter_render() {}\n\n\trender_list() {\n\t\tif (frappe.views.FileView.grid_view) {\n\t\t\tthis.render_grid_view();\n\t\t} else {\n\t\t\tsuper.render_list();\n\t\t}\n\t}\n\n\trender_grid_view() {\n\t\tlet html = this.data\n\t\t\t.map(d => {\n\t\t\t\tconst icon_class = d.icon_class + \"-large\";\n\t\t\t\tlet file_body_html =\n\t\t\t\t\td._type == \"image\"\n\t\t\t\t\t\t? `<div class=\"file-image\"><img src=\"${\n\t\t\t\t\t\t\td.file_url\n\t\t\t\t\t\t}\" alt=\"${d.file_name}\"></div>`\n\t\t\t\t\t\t: frappe.utils.icon(icon_class, {\n\t\t\t\t\t\t\twidth: \"40px\",\n\t\t\t\t\t\t\theight: \"45px\"\n\t\t\t\t\t\t});\n\t\t\t\tconst name = escape(d.name);\n\t\t\t\tconst draggable = d.type == \"Folder\" ? false : true;\n\t\t\t\treturn `\n\t\t\t\t<a href=\"${this.get_route_url(d)}\"\n\t\t\t\t\tdraggable=\"${draggable}\" class=\"file-wrapper ellipsis\" data-name=\"${name}\">\n\t\t\t\t\t<div class=\"file-header\">\n\t\t\t\t\t\t<input class=\"level-item list-row-checkbox hidden-xs\" type=\"checkbox\" data-name=\"${name}\">\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-body\">\n\t\t\t\t\t\t${file_body_html}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class=\"file-footer\">\n\t\t\t\t\t\t<div class=\"file-title ellipsis\">${d._title}</div>\n\t\t\t\t\t\t<div class=\"file-creation\">${this.get_creation_date(d)}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</a>\n\t\t\t`;\n\t\t\t})\n\t\t\t.join(\"\");\n\n\t\tthis.$result.addClass(\"file-grid-view\");\n\t\tthis.$result.empty().html(\n\t\t\t`<div class=\"file-grid\">\n\t\t\t\t${html}\n\t\t\t</div>`\n\t\t);\n\t}\n\n\tget_breadcrumbs_html() {\n\t\tconst route = frappe.router.parse();\n\t\tconst folders = route.slice(2);\n\n\t\treturn folders\n\t\t\t.map((folder, i) => {\n\t\t\t\tif (i === folders.length - 1) {\n\t\t\t\t\treturn `<span>${folder}</span>`;\n\t\t\t\t}\n\t\t\t\tconst route = folders.reduce((acc, curr, j) => {\n\t\t\t\t\tif (j <= i) {\n\t\t\t\t\t\tacc += \"/\" + curr;\n\t\t\t\t\t}\n\t\t\t\t\treturn acc;\n\t\t\t\t}, \"/app/file/view\");\n\n\t\t\t\treturn `<a href=\"${route}\">${folder}</a>`;\n\t\t\t})\n\t\t\t.join(\"&nbsp;/&nbsp;\");\n\t}\n\n\tget_header_html() {\n\t\tconst breadcrumbs_html = this.get_breadcrumbs_html();\n\n\t\tlet header_selector_html = !frappe.views.FileView.grid_view\n\t\t\t? `<input class=\"level-item list-check-all hidden-xs\" type=\"checkbox\" title=\"${__(\n\t\t\t\t\"Select All\"\n\t\t\t)}\">`\n\t\t\t: \"\";\n\n\t\tlet header_columns_html = !frappe.views.FileView.grid_view\n\t\t\t? `<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Size\")}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"list-row-col ellipsis hidden-xs\">\n\t\t\t\t\t<span>${__(\"Created\")}</span>\n\t\t\t\t</div>`\n\t\t\t: \"\";\n\n\t\tlet subject_html = `\n\t\t\t<div class=\"list-row-col list-subject level\">\n\t\t\t\t${header_selector_html}\n\t\t\t\t<span class=\"level-item\">${breadcrumbs_html}</span>\n\t\t\t</div>\n\t\t\t${header_columns_html}\n\t\t`;\n\n\t\treturn this.get_header_html_skeleton(\n\t\t\tsubject_html,\n\t\t\t'<span class=\"list-count\"></span>'\n\t\t);\n\t}\n\n\tget_route_url(file) {\n\t\treturn file.is_folder\n\t\t\t? \"/app/List/File/\" + file.name\n\t\t\t: this.get_form_link(file);\n\t}\n\n\tget_creation_date(file) {\n\t\tconst [date] = file.creation.split(\" \");\n\t\tlet created_on;\n\t\tif (date === frappe.datetime.now_date()) {\n\t\t\tcreated_on = comment_when(file.creation);\n\t\t} else {\n\t\t\tcreated_on = frappe.datetime.str_to_user(date);\n\t\t}\n\t\treturn created_on;\n\t}\n\n\tget_left_html(file) {\n\t\tfile = this.prepare_datum(file);\n\t\tconst file_size = file.file_size\n\t\t\t? frappe.form.formatters.FileSize(file.file_size)\n\t\t\t: \"\";\n\t\tconst route_url = this.get_route_url(file);\n\n\t\treturn `\n\t\t\t<div class=\"list-row-col ellipsis list-subject level\">\n\t\t\t\t<span class=\"level-item file-select\">\n\t\t\t\t\t<input class=\"list-row-checkbox\"\n\t\t\t\t\t\ttype=\"checkbox\" data-name=\"${file.name}\">\n\t\t\t\t</span>\n\t\t\t\t<span class=\"level-item  ellipsis\" title=\"${frappe.utils.escape_html(file.file_name)}\">\n\t\t\t\t\t<a class=\"ellipsis\" href=\"${route_url}\" title=\"${frappe.utils.escape_html(file.file_name)}\">\n\t\t\t\t\t\t${file.subject_html}\n\t\t\t\t\t</a>\n\t\t\t\t</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${file_size}</span>\n\t\t\t</div>\n\t\t\t<div class=\"list-row-col ellipsis hidden-xs text-muted\">\n\t\t\t\t<span>${this.get_creation_date(file)}</span>\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_right_html(file) {\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${comment_when(file.modified)}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tsetup_events() {\n\t\tsuper.setup_events();\n\t\tthis.setup_drag_events();\n\t}\n\n\tsetup_drag_events() {\n\t\tthis.$result.on(\"dragstart\", \".files .file-wrapper\", e => {\n\t\t\te.stopPropagation();\n\t\t\te.originalEvent.dataTransfer.setData(\n\t\t\t\t\"Text\",\n\t\t\t\t$(e.currentTarget).attr(\"data-name\")\n\t\t\t);\n\t\t\te.target.style.opacity = \"0.4\";\n\t\t\tfrappe.file_manager.cut(\n\t\t\t\t[{ name: $(e.currentTarget).attr(\"data-name\") }],\n\t\t\t\tthis.current_folder\n\t\t\t);\n\t\t});\n\n\t\tthis.$result.on(\n\t\t\t\"dragover\",\n\t\t\te => {\n\t\t\t\te.preventDefault();\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tthis.$result.on(\"dragend\", \".files .file-wrapper\", e => {\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\te.target.style.opacity = \"1\";\n\t\t});\n\n\t\tthis.$result.on(\"drop\", e => {\n\t\t\te.stopPropagation();\n\t\t\te.preventDefault();\n\t\t\tconst $el = $(e.target).parents(\".file-wrapper\");\n\n\t\t\tlet dataTransfer = e.originalEvent.dataTransfer;\n\t\t\tif (!dataTransfer) return;\n\n\t\t\tif (dataTransfer.files && dataTransfer.files.length > 0) {\n\t\t\t\tnew frappe.ui.FileUploader({\n\t\t\t\t\tfiles: dataTransfer.files,\n\t\t\t\t\tfolder: this.current_folder\n\t\t\t\t});\n\t\t\t} else if (dataTransfer.getData(\"Text\")) {\n\t\t\t\tif ($el.parents(\".folders\").length !== 0) {\n\t\t\t\t\tconst file_name = dataTransfer.getData(\"Text\");\n\t\t\t\t\tconst folder_name = decodeURIComponent(\n\t\t\t\t\t\t$el.attr(\"data-name\")\n\t\t\t\t\t);\n\t\t\t\t\tfrappe.file_manager.paste(folder_name);\n\t\t\t\t\tfrappe.show_alert(\n\t\t\t\t\t\t`File ${file_name} moved to ${folder_name}`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\ttoggle_result_area() {\n\t\tsuper.toggle_result_area();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ton_row_checked() {\n\t\tsuper.on_row_checked();\n\t\tthis.toggle_cut_paste_buttons();\n\t}\n\n\ttoggle_cut_paste_buttons() {\n\t\tconst hide_paste_btn =\n\t\t\t!frappe.file_manager.can_paste ||\n\t\t\tfrappe.file_manager.old_folder === this.current_folder;\n\t\tconst hide_cut_btn = !(this.$checks && this.$checks.length > 0);\n\n\t\tthis.$paste_btn.toggle(!hide_paste_btn);\n\t\tthis.$cut_button.toggle(!hide_cut_btn);\n\t}\n};\n\nfrappe.views.FileView.grid_view =\n\tfrappe.get_user_settings(\"File\").grid_view || false;\n\nfunction redirect_to_home_if_invalid_route() {\n\tconst route = frappe.get_route();\n\tif (route[2] === \"List\") {\n\t\t// Remove List/File/List from route history to avoid redirect loop on going back\n\t\tfrappe.route_history.pop();\n\n\t\t// if the user somehow redirects to List/File/List\n\t\t// redirect back to Home\n\t\tfrappe.set_route(\"List\", \"File\", \"Home\");\n\t\treturn true;\n\t}\n\treturn false;\n}\n","// Copyright (c) 2018, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\nfrappe.provide('frappe.views');\nfrappe.provide(\"frappe.interaction_settings\");\n\nfrappe.views.InteractionComposer = class InteractionComposer {\n\tconstructor(opts) {\n\t\t$.extend(this, opts);\n\t\tthis.make();\n\t}\n\n\tmake() {\n\t\tlet me = this;\n\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: (me.title || me.subject || __(\"New Activity\")),\n\t\t\tno_submit_on_enter: true,\n\t\t\tfields: me.get_fields(),\n\t\t\tprimary_action_label: __('Create'),\n\t\t\tprimary_action: function() {\n\t\t\t\tme.create_action();\n\t\t\t}\n\t\t});\n\n\t\t$(document).on(\"upload_complete\", function(event, attachment) {\n\t\t\tif(me.dialog.display) {\n\t\t\t\tlet wrapper = $(me.dialog.fields_dict.select_attachments.wrapper);\n\n\t\t\t\t// find already checked items\n\t\t\t\tlet checked_items = wrapper.find('[data-file-name]:checked').map(function() {\n\t\t\t\t\treturn $(this).attr(\"data-file-name\");\n\t\t\t\t});\n\n\t\t\t\t// reset attachment list\n\t\t\t\tme.render_attach();\n\n\t\t\t\t// check latest added\n\t\t\t\tchecked_items.push(attachment.name);\n\n\t\t\t\t$.each(checked_items, function(i, filename) {\n\t\t\t\t\twrapper.find('[data-file-name=\"'+ filename +'\"]').prop(\"checked\", true);\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\tme.prepare();\n\t\tme.dialog.show();\n\t}\n\n\tget_fields() {\n\t\tlet me = this;\n\t\tlet interaction_docs = Object.keys(get_doc_mappings());\n\n\t\tlet fields = [\n\t\t\t{label:__(\"Reference\"), fieldtype:\"Select\",\n\t\t\t\tfieldname:\"interaction_type\", options: interaction_docs,\n\t\t\t\treqd: 1,\n\t\t\t\tonchange: () => {\n\t\t\t\t\tlet values = me.get_values();\n\t\t\t\t\tme.get_fields().forEach(field => {\n\t\t\t\t\t\tif (field.fieldname != \"interaction_type\") {\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"reqd\", 0);\n\t\t\t\t\t\t\tme.dialog.set_df_property(field.fieldname, \"hidden\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tme.set_reqd_hidden_fields(values);\n\t\t\t\t\tme.get_event_categories();\n\t\t\t\t}\n\t\t\t},\n\t\t\t{label:__(\"Category\"), fieldtype:\"Select\",\n\t\t\t\tfieldname:\"category\", options: \"\", hidden: 1},\n\t\t\t{label:__(\"Public\"), fieldtype:\"Check\",\n\t\t\t\tfieldname:\"public\", default: \"1\"},\n\t\t\t{fieldtype: \"Column Break\"},\n\t\t\t{label:__(\"Date\"), fieldtype:\"Datetime\",\n\t\t\t\tfieldname:\"due_date\"},\n\t\t\t{label:__(\"Assigned To\"), fieldtype:\"Link\",\n\t\t\t\tfieldname:\"assigned_to\", options:\"User\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Summary\"), fieldtype:\"Data\",\n\t\t\t\tfieldname:\"summary\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{fieldtype:\"Text Editor\", fieldname:\"description\"},\n\t\t\t{fieldtype: \"Section Break\"},\n\t\t\t{label:__(\"Select Attachments\"), fieldtype:\"HTML\",\n\t\t\t\tfieldname:\"select_attachments\"}\n\t\t];\n\n\t\treturn fields;\n\n\t}\n\n\tget_event_categories() {\n\t\tlet me = this;\n\t\tfrappe.model.with_doctype('Event', () => {\n\t\t\tlet categories = frappe.meta.get_docfield(\"Event\", \"event_category\").options.split(\"\\n\");\n\t\t\tme.dialog.get_input(\"category\").empty().add_options(categories);\n\t\t});\n\t}\n\n\tprepare() {\n\t\tthis.setup_attach();\n\t}\n\n\tset_reqd_hidden_fields(values) {\n\t\tlet me = this;\n\t\tif (values&&\"interaction_type\" in values) {\n\t\t\tlet doc_mapping = get_doc_mappings();\n\t\t\tdoc_mapping[values.interaction_type][\"reqd_fields\"].forEach(value => {\n\t\t\t\tme.dialog.set_df_property(value, 'reqd', 1);\n\t\t\t});\n\n\t\t\tdoc_mapping[values.interaction_type][\"hidden_fields\"].forEach(value => {\n\t\t\t\tme.dialog.set_df_property(value, 'hidden', 1);\n\t\t\t});\n\t\t}\n\t}\n\n\tsetup_attach() {\n\t\tvar fields = this.dialog.fields_dict;\n\t\tvar attach = $(fields.select_attachments.wrapper);\n\n\t\tif (!this.attachments) {\n\t\t\tthis.attachments = [];\n\t\t}\n\n\t\tlet args = {\n\t\t\tfolder: 'Home/Attachments',\n\t\t\ton_success: attachment => this.attachments.push(attachment)\n\t\t};\n\n\t\tif (this.frm) {\n\t\t\targs = {\n\t\t\t\tdoctype: this.frm.doctype,\n\t\t\t\tdocname: this.frm.docname,\n\t\t\t\tfolder: 'Home/Attachments',\n\t\t\t\ton_success: attachment => {\n\t\t\t\t\tthis.frm.attachments.attachment_uploaded(attachment);\n\t\t\t\t\tthis.render_attach();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t$(\"<h6 class='text-muted add-attachment' style='margin-top: 12px; cursor:pointer;'>\"\n\t\t\t+__(\"Select Attachments\")+\"</h6><div class='attach-list'></div>\\\n\t\t\t<p class='add-more-attachments'>\\\n\t\t\t<a class='text-muted small'><i class='octicon octicon-plus' style='font-size: 12px'></i> \"\n\t\t\t+__(\"Add Attachment\")+\"</a></p>\").appendTo(attach.empty());\n\t\tattach\n\t\t\t.find(\".add-more-attachments a\")\n\t\t\t.on('click',() => new frappe.ui.FileUploader(args));\n\t\tthis.render_attach();\n\t}\n\n\trender_attach(){\n\t\tlet fields = this.dialog.fields_dict;\n\t\tlet attach = $(fields.select_attachments.wrapper).find(\".attach-list\").empty();\n\n\t\tlet files = [];\n\t\tif (this.attachments && this.attachments.length) {\n\t\t\tfiles = files.concat(this.attachments);\n\t\t}\n\t\tif (cur_frm) {\n\t\t\tfiles = files.concat(cur_frm.get_files());\n\t\t}\n\n\t\tif(files.length) {\n\t\t\t$.each(files, function(i, f) {\n\t\t\t\tif (!f.file_name) return;\n\t\t\t\tf.file_url = frappe.urllib.get_full_url(f.file_url);\n\n\t\t\t\t$(repl('<p class=\"checkbox\">'\n\t\t\t\t\t+\t'<label><span><input type=\"checkbox\" data-file-name=\"%(name)s\"></input></span>'\n\t\t\t\t\t+\t\t'<span class=\"small\">%(file_name)s</span>'\n\t\t\t\t\t+\t' <a href=\"%(file_url)s\" target=\"_blank\" class=\"text-muted small\">'\n\t\t\t\t\t+\t\t'<i class=\"fa fa-share\" style=\"vertical-align: middle; margin-left: 3px;\"></i>'\n\t\t\t\t\t+ '</label></p>', f))\n\t\t\t\t\t.appendTo(attach);\n\t\t\t});\n\t\t}\n\t}\n\n\tcreate_action() {\n\t\tlet me = this;\n\t\tlet btn = me.dialog.get_primary_btn();\n\n\t\tlet form_values = this.get_values();\n\t\tif(!form_values) return;\n\n\t\tlet selected_attachments =\n\t\t\t$.map($(me.dialog.wrapper).find(\"[data-file-name]:checked\"), function(element){\n\t\t\t\treturn $(element).attr(\"data-file-name\");\n\t\t\t});\n\n\t\tme.create_interaction(btn, form_values, selected_attachments);\n\t}\n\n\tget_values() {\n\t\tlet me = this;\n\t\tlet values = this.dialog.get_values(true);\n\t\tif (values) {\n\t\t\tvalues[\"reference_doctype\"] = me.frm.doc.doctype;\n\t\t\tvalues[\"reference_document\"] = me.frm.doc.name;\n\t\t}\n\n\t\treturn values;\n\t}\n\n\tcreate_interaction(btn, form_values, selected_attachments) {\n\t\tlet me = this;\n\t\tme.dialog.hide();\n\n\t\tlet field_map = get_doc_mappings();\n\t\tlet interaction_values = {};\n\t\tObject.keys(form_values).forEach(value => {\n\t\t\tinteraction_values[field_map[form_values.interaction_type][\"field_map\"][value]] = form_values[value];\n\t\t});\n\n\t\tif (\"event_type\" in interaction_values){\n\t\t\tinteraction_values[\"event_type\"] = (form_values.public == 1) ? \"Public\" : \"Private\";\n\t\t}\n\t\tif (interaction_values[\"doctype\"] == \"Event\") {\n\t\t\tinteraction_values[\"event_participants\"] = [{\"reference_doctype\": form_values.reference_doctype,\n\t\t\t\t\"reference_docname\": form_values.reference_document}];\n\t\t}\n\t\tif (!(\"owner\" in interaction_values)){\n\t\t\tinteraction_values[\"owner\"] = frappe.session.user;\n\t\t}\n\t\tif (!(\"assigned_by\" in interaction_values) && interaction_values[\"doctype\"] == \"ToDo\") {\n\t\t\tinteraction_values[\"assigned_by\"] = frappe.session.user;\n\t\t}\n\t\treturn frappe.call({\n\t\t\tmethod:\"frappe.client.insert\",\n\t\t\targs: { doc: interaction_values},\n\t\t\tbtn: btn,\n\t\t\tcallback: function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"{0} created successfully\", [form_values.interaction_type]),\n\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t});\n\t\t\t\t\tif (\"assigned_to\" in form_values) {\n\t\t\t\t\t\tme.assign_document(r.message, form_values[\"assigned_to\"]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (selected_attachments) {\n\t\t\t\t\t\tme.add_attachments(r.message, selected_attachments);\n\t\t\t\t\t}\n\t\t\t\t\tif (cur_frm) {\n\t\t\t\t\t\tcur_frm.reload_doc();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.msgprint(__(\"There were errors while creating the document. Please try again.\"));\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n\n\tassign_document(doc, assignee) {\n\t\tif (doc.doctype != \"ToDo\") {\n\t\t\tfrappe.call({\n\t\t\t\tmethod:'frappe.desk.form.assign_to.add',\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: doc.doctype,\n\t\t\t\t\tname: doc.name,\n\t\t\t\t\tassign_to: JSON.stringify([assignee]),\n\t\t\t\t},\n\t\t\t\tcallback:function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document has been assigned to {0}\", [assignee]),\n\t\t\t\t\t\t\tindicator: 'green'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\t\tmessage: __(\"The document could not be correctly assigned\"),\n\t\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t}\n\n\tadd_attachments(doc, attachments) {\n\t\tfrappe.call({\n\t\t\tmethod:'frappe.utils.file_manager.add_attachments',\n\t\t\targs: {\n\t\t\t\tdoctype: doc.doctype,\n\t\t\t\tname: doc.name,\n\t\t\t\tattachments: JSON.stringify(attachments)\n\t\t\t},\n\t\t\tcallback:function(r) {\n\t\t\t\tif(!r.exc) {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tfrappe.show_alert({\n\t\t\t\t\t\tmessage: __(\"The attachments could not be correctly linked to the new document\"),\n\t\t\t\t\t\tindicator: 'orange'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t}\n};\n\nfunction get_doc_mappings() {\n\tconst doc_map = {\n\t\t\"Event\": {\n\t\t\t\"field_map\": {\n\t\t\t\t\"interaction_type\": \"doctype\",\n\t\t\t\t\"summary\": \"subject\",\n\t\t\t\t\"description\": \"description\",\n\t\t\t\t\"category\": \"event_category\",\n\t\t\t\t\"due_date\": \"starts_on\",\n\t\t\t\t\"public\": \"event_type\"\n\t\t\t},\n\t\t\t\"reqd_fields\": [\"summary\", \"due_date\"],\n\t\t\t\"hidden_fields\": []\n\t\t} ,\n\t\t\"ToDo\": {\n\t\t\t\"field_map\": {\n\t\t\t\t\"interaction_type\": \"doctype\",\n\t\t\t\t\"description\": \"description\",\n\t\t\t\t\"due_date\": \"date\",\n\t\t\t\t\"reference_doctype\": \"reference_type\",\n\t\t\t\t\"reference_document\": \"reference_name\",\n\t\t\t\t\"assigned_to\": \"owner\"\n\t\t\t},\n\t\t\t\"reqd_fields\": [\"description\"],\n\t\t\t\"hidden_fields\": [\"public\", \"category\"]\n\t\t}\n\t};\n\n\treturn doc_map;\n}\n","import KanbanSettings from \"./kanban_settings\";\n\nfrappe.provide('frappe.views');\n\nfrappe.views.KanbanView = class KanbanView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (route.length === 3) {\n\t\t\tconst doctype = route[1];\n\t\t\tconst user_settings = frappe.get_user_settings(doctype)['Kanban'] || {};\n\t\t\tif (!user_settings.last_kanban_board) {\n\t\t\t\tfrappe.msgprint({\n\t\t\t\t\ttitle: __('Error'),\n\t\t\t\t\tindicator: 'red',\n\t\t\t\t\tmessage: __('Missing parameter Kanban Board Name')\n\t\t\t\t});\n\t\t\t\tfrappe.set_route('List', doctype, 'List');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\troute.push(user_settings.last_kanban_board);\n\t\t\tfrappe.set_route(route);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tget view_name() {\n\t\treturn 'Kanban';\n\t}\n\n\tsetup_defaults() {\n\t\treturn super.setup_defaults()\n\t\t\t.then(() => {\n\t\t\t\tthis.board_name = frappe.get_route()[3];\n\t\t\t\tthis.page_title = __(this.board_name);\n\t\t\t\tthis.card_meta = this.get_card_meta();\n\t\t\t\tthis.page_length = 0;\n\n\t\t\t\tthis.menu_items.push({\n\t\t\t\t\tlabel: __('Save filters'),\n\t\t\t\t\taction: () => {\n\t\t\t\t\t\tthis.save_kanban_board_filters();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn this.get_board();\n\t\t\t});\n\t}\n\n\tsetup_paging_area() {\n\t\t// pass\n\t}\n\n\ttoggle_result_area() {\n\t\tthis.$result.toggle(this.data.length > 0);\n\t}\n\n\tget_board() {\n\t\treturn frappe.db.get_doc('Kanban Board', this.board_name)\n\t\t\t.then(board => {\n\t\t\t\tthis.board = board;\n\t\t\t\tthis.board.filters_array = JSON.parse(this.board.filters || '[]');\n\t\t\t\tthis.board.fields = JSON.parse(this.board.fields || '[]');\n\t\t\t\tthis.filters = this.board.filters_array;\n\t\t\t});\n\t}\n\n\tbefore_refresh() {\n\n\t}\n\n\tsetup_page() {\n\t\tthis.hide_sidebar = true;\n\t\tthis.hide_page_form = true;\n\t\tthis.hide_card_layout = true;\n\t\tsuper.setup_page();\n\t}\n\n\tsetup_view() {\n\t\tif (this.board.columns.length > 5) {\n\t\t\tthis.page.container.addClass('full-width');\n\t\t}\n\t\tthis.setup_realtime_updates();\n\t\tthis.setup_like();\n\t}\n\n\tset_fields() {\n\t\tsuper.set_fields();\n\t\tthis._add_field(this.card_meta.title_field);\n\t}\n\n\tbefore_render() {\n\t\tfrappe.model.user_settings.save(this.doctype, 'last_view', this.view_name);\n\t\tthis.save_view_user_settings({\n\t\t\tlast_kanban_board: this.board_name\n\t\t});\n\t}\n\n\trender_list() {\n\n\t}\n\n\ton_filter_change() {\n\t\tif (JSON.stringify(this.board.filters_array) !== JSON.stringify(this.filter_area.get())) {\n\t\t\tthis.page.set_indicator(__('Not Saved'), 'orange');\n\t\t} else {\n\t\t\tthis.page.clear_indicator();\n\t\t}\n\t}\n\n\tsave_kanban_board_filters() {\n\t\tconst filters = this.filter_area.get();\n\n\t\tfrappe.call({\n\t\t\tmethod: 'frappe.desk.doctype.kanban_board.kanban_board.save_filters',\n\t\t\targs: {\n\t\t\t\tboard_name: this.board_name,\n\t\t\t\tfilters: filters\n\t\t\t}\n\t\t}).then(r => {\n\t\t\tif (r.exc) {\n\t\t\t\tfrappe.show_alert({\n\t\t\t\t\tindicator: 'red',\n\t\t\t\t\tmessage: __('There was an error saving filters')\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tfrappe.show_alert({\n\t\t\t\tindicator: 'green',\n\t\t\t\tmessage: __('Filters saved')\n\t\t\t});\n\n\t\t\tthis.board.filters_array = filters;\n\t\t\tthis.on_filter_change();\n\t\t});\n\t}\n\n\tget_fields() {\n\t\tthis.fields.push([this.board.field_name, this.board.reference_doctype]);\n\t\treturn super.get_fields();\n\t}\n\n\trender() {\n\t\tconst board_name = this.board_name;\n\t\tif (this.kanban && board_name === this.kanban.board_name) {\n\t\t\tthis.kanban.update(this.data);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.kanban = new frappe.views.KanbanBoard({\n\t\t\tdoctype: this.doctype,\n\t\t\tboard: this.board,\n\t\t\tboard_name: board_name,\n\t\t\tcards: this.data,\n\t\t\tcard_meta: this.card_meta,\n\t\t\twrapper: this.$result,\n\t\t\tcur_list: this,\n\t\t\tuser_settings: this.view_user_settings\n\t\t});\n\t}\n\n\tget_card_meta() {\n\t\tvar meta = frappe.get_meta(this.doctype);\n\t\tvar doc = frappe.model.get_new_doc(this.doctype);\n\t\tvar title_field = null;\n\t\tvar quick_entry = false;\n\n\t\tif (this.meta.title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, this.meta.title_field);\n\t\t}\n\n\t\tthis.meta.fields.forEach((df) => {\n\t\t\tconst is_valid_field =\n\t\t\t\tin_list(['Data', 'Text', 'Small Text', 'Text Editor'], df.fieldtype)\n\t\t\t\t&& !df.hidden;\n\n\t\t\tif (is_valid_field && !title_field) {\n\t\t\t\t// can be mapped to textarea\n\t\t\t\ttitle_field = df;\n\t\t\t}\n\t\t});\n\n\t\t// quick entry\n\t\tvar mandatory = meta.fields.filter((df) => df.reqd && !doc[df.fieldname]);\n\n\t\tif (mandatory.some(df => frappe.model.table_fields.includes(df.fieldtype)) || mandatory.length > 1) {\n\t\t\tquick_entry = true;\n\t\t}\n\n\t\tif (!title_field) {\n\t\t\ttitle_field = frappe.meta.get_field(this.doctype, 'name');\n\t\t}\n\n\t\treturn {\n\t\t\tquick_entry: quick_entry,\n\t\t\ttitle_field: title_field\n\t\t};\n\t}\n\n\tget_view_settings() {\n\t\treturn {\n\t\t\tlabel: __(\"Kanban Settings\", null, \"Button in kanban view menu\"),\n\t\t\taction: () => this.show_kanban_settings(),\n\t\t\tstandard: true,\n\t\t};\n\t}\n\n\tshow_kanban_settings() {\n\t\tfrappe.model.with_doctype(this.doctype, () => {\n\t\t\tnew KanbanSettings({\n\t\t\t\tkanbanview: this,\n\t\t\t\tdoctype: this.doctype,\n\t\t\t\tsettings: this.board,\n\t\t\t\tmeta: frappe.get_meta(this.doctype)\n\t\t\t});\n\t\t});\n\t}\n\n\tget required_libs() {\n\t\treturn [\n\t\t\t'assets/frappe/js/lib/fluxify.min.js',\n\t\t\t'assets/frappe/js/frappe/views/kanban/kanban_board.js'\n\t\t];\n\t}\n};\n\n\nfrappe.views.KanbanView.get_kanbans = function (doctype) {\n\tlet kanbans = [];\n\n\treturn get_kanban_boards()\n\t\t.then((kanban_boards) => {\n\t\t\tif (kanban_boards) {\n\t\t\t\tkanban_boards.forEach(board => {\n\t\t\t\t\tlet route = `/app/${frappe.router.slug(board.reference_doctype)}/view/kanban/${board.name}`;\n\t\t\t\t\tkanbans.push({ name: board.name, route: route });\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn kanbans;\n\t\t});\n\n\tfunction get_kanban_boards() {\n\t\treturn frappe.call('frappe.desk.doctype.kanban_board.kanban_board.get_kanban_boards', { doctype })\n\t\t\t.then(r => r.message);\n\t}\n};\n\n\nfrappe.views.KanbanView.show_kanban_dialog = function (doctype) {\n\tlet dialog = new_kanban_dialog();\n\tdialog.show();\n\n\tfunction make_kanban_board(board_name, field_name, project) {\n\t\treturn frappe.call({\n\t\t\tmethod: 'frappe.desk.doctype.kanban_board.kanban_board.quick_kanban_board',\n\t\t\targs: {\n\t\t\t\tdoctype,\n\t\t\t\tboard_name,\n\t\t\t\tfield_name,\n\t\t\t\tproject\n\t\t\t},\n\t\t\tcallback: function (r) {\n\t\t\t\tvar kb = r.message;\n\t\t\t\tif (kb.filters) {\n\t\t\t\t\tfrappe.provide('frappe.kanban_filters');\n\t\t\t\t\tfrappe.kanban_filters[kb.kanban_board_name] = kb.filters;\n\t\t\t\t}\n\t\t\t\tfrappe.set_route('List', doctype, 'Kanban', kb.kanban_board_name);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction new_kanban_dialog() {\n\t\t/* Kanban dialog can show either \"Save\" or \"Customize Form\" option depending if any Select fields exist in the DocType for Kanban creation\n\t\t */\n\n\t\tconst select_fields = frappe.get_meta(doctype).fields.filter((df) => {\n\t\t\treturn df.fieldtype === \"Select\" && df.fieldname !== \"kanban_column\";\n\t\t});\n\t\tconst dialog_fields = get_fields_for_dialog(select_fields);\n\t\tconst to_save = select_fields.length > 0;\n\t\tconst primary_action_label = to_save ? __(\"Save\") : __(\"Customize Form\");\n\t\tconst dialog_title = to_save ? __(\"New Kanban Board\") : __(\"No Select Field Found\");\n\n\t\tlet primary_action = () => {\n\t\t\tif (to_save) {\n\t\t\t\tconst values = dialog.get_values();\n\t\t\t\tmake_kanban_board(values.board_name, values.field_name, values.project).then(\n\t\t\t\t\t() => dialog.hide(),\n\t\t\t\t\t(err) => frappe.msgprint(err)\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tfrappe.set_route(\"Form\", \"Customize Form\", {\"doc_type\": doctype});\n\t\t\t}\n\t\t};\n\n\t\treturn new frappe.ui.Dialog({\n\t\t\ttitle: dialog_title,\n\t\t\tfields: dialog_fields,\n\t\t\tprimary_action_label,\n\t\t\tprimary_action\n\t\t});\n\t}\n\n\n\tfunction get_fields_for_dialog(select_fields) {\n\t\tif (!select_fields.length) {\n\t\t\treturn [\n\t\t\t\t{\n\t\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\t\toptions: `\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<p class=\"text-medium\">\n\t\t\t\t\t\t${__(\n\t\t\t\t\t\t\t'No fields found that can be used as a Kanban Column. Use the Customize Form to add a Custom Field of type \"Select\".'\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t`,\n\t\t\t\t},\n\t\t\t];\n\t\t}\n\n\t\tlet fields = [\n\t\t\t{\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tfieldname: \"board_name\",\n\t\t\t\tlabel: __(\"Kanban Board Name\"),\n\t\t\t\treqd: 1,\n\t\t\t\tdescription: [\"Note\", \"ToDo\"].includes(doctype)\n\t\t\t\t\t? __(\"This Kanban Board will be private\")\n\t\t\t\t\t: \"\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tfieldname: \"field_name\",\n\t\t\t\tlabel: __(\"Columns based on\"),\n\t\t\t\toptions: select_fields.map((df) => ({ label: df.label, value: df.fieldname })),\n\t\t\t\tdefault: select_fields[0],\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t];\n\n\t\tif (doctype === 'Task') {\n\t\t\tfields.push({\n\t\t\t\tfieldtype: 'Link',\n\t\t\t\tfieldname: 'project',\n\t\t\t\tlabel: __('Project'),\n\t\t\t\toptions: 'Project'\n\t\t\t});\n\t\t}\n\n\t\treturn fields;\n\t}\n};\n","/**\n * frappe.views.InboxView\n */\n\nfrappe.provide(\"frappe.views\");\n\nfrappe.views.InboxView = class InboxView extends frappe.views.ListView {\n\tstatic load_last_view() {\n\t\tconst route = frappe.get_route();\n\t\tif (!route[3] && frappe.boot.email_accounts.length) {\n\t\t\tlet email_account;\n\t\t\tif (frappe.boot.email_accounts[0].email_id == \"All Accounts\") {\n\t\t\t\temail_account = \"All Accounts\";\n\t\t\t} else {\n\t\t\t\temail_account = frappe.boot.email_accounts[0].email_account;\n\t\t\t}\n\t\t\tfrappe.set_route(\"List\", \"Communication\", \"Inbox\", email_account);\n\t\t\treturn true;\n\t\t} else if (!route[3] || (route[3] !== \"All Accounts\" && !is_valid(route[3]))) {\n\t\t\tfrappe.throw(__('No email account associated with the User. Please add an account under User > Email Inbox.'));\n\t\t}\n\t\treturn false;\n\n\t\tfunction is_valid(email_account) {\n\t\t\treturn frappe.boot.email_accounts.find(d => d.email_account === email_account);\n\t\t}\n\t}\n\n\tget view_name() {\n\t\treturn 'Inbox';\n\t}\n\n\tshow() {\n\t\tsuper.show();\n\t\t// save email account in user_settings\n\t\tthis.save_view_user_settings({\n\t\t\tlast_email_account: this.current_email_account\n\t\t});\n\t}\n\n\tsetup_defaults() {\n\t\tsuper.setup_defaults();\n\n\t\t// initialize with saved order by\n\t\tthis.sort_by = this.view_user_settings.sort_by || 'communication_date';\n\t\tthis.sort_order = this.view_user_settings.sort_order || 'desc';\n\n\t\tthis.email_account = frappe.get_route()[3];\n\t\tthis.page_title = this.email_account;\n\t\tthis.filters = this.get_inbox_filters();\n\t}\n\n\tsetup_columns() {\n\t\t// setup columns for list view\n\t\tthis.columns = [];\n\t\tthis.columns.push({\n\t\t\ttype: 'Subject',\n\t\t\tdf: {\n\t\t\t\tlabel: __('Subject'),\n\t\t\t\tfieldname: 'subject'\n\t\t\t}\n\t\t});\n\t\tthis.columns.push({\n\t\t\ttype: 'Field',\n\t\t\tdf: {\n\t\t\t\tlabel: this.is_sent_emails ? __(\"To\") : __(\"From\"),\n\t\t\t\tfieldname: this.is_sent_emails ? 'recipients' : 'sender'\n\t\t\t}\n\t\t});\n\t}\n\n\tget_seen_class(doc) {\n\t\tconst seen =\n\t\t\tBoolean(doc.seen) || JSON.parse(doc._seen || '[]').includes(frappe.session.user)\n\t\t\t\t? ''\n\t\t\t\t: 'bold';\n\t\treturn seen;\n\t}\n\n\tget is_sent_emails() {\n\t\tconst f = this.filter_area.get()\n\t\t\t.find(filter => filter[1] === 'sent_or_received');\n\t\treturn f && f[3] === 'Sent';\n\t}\n\n\trender_header() {\n\t\tthis.$result.find('.list-row-head').remove();\n\t\tthis.$result.prepend(this.get_header_html());\n\t}\n\n\trender() {\n\t\tthis.setup_columns();\n\t\tthis.render_header();\n\t\tthis.render_list();\n\t\tthis.on_row_checked();\n\t\tthis.render_count();\n\t}\n\n\tget_meta_html(email) {\n\t\tconst attachment = email.has_attachment ?\n\t\t\t`<span class=\"fa fa-paperclip fa-large\" title=\"${__('Has Attachments')}\"></span>` : '';\n\n\t\tlet link = \"\";\n\t\tif (email.reference_doctype && email.reference_doctype !== this.doctype) {\n\t\t\tlink = `<a class=\"text-muted grey\"\n\t\t\t\thref=\"${frappe.utils.get_form_link(email.reference_doctype, email.reference_name)}\"\n\t\t\t\ttitle=\"${__('Linked with {0}', [email.reference_doctype])}\">\n\t\t\t\t<i class=\"fa fa-link fa-large\"></i>\n\t\t\t</a>`;\n\t\t}\n\n\t\tconst communication_date = comment_when(email.communication_date, true);\n\t\tconst status =\n\t\t\temail.status == \"Closed\" ? `<span class=\"fa fa-check fa-large\" title=\"${__(email.status)}\"></span>` :\n\t\t\t\temail.status == \"Replied\" ? `<span class=\"fa fa-mail-reply fa-large\" title=\"${__(email.status)}\"></span>` :\n\t\t\t\t\t\"\";\n\n\t\treturn `\n\t\t\t<div class=\"level-item list-row-activity\">\n\t\t\t\t${link}\n\t\t\t\t${attachment}\n\t\t\t\t${status}\n\t\t\t\t${communication_date}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tget_inbox_filters() {\n\t\tvar email_account = this.email_account;\n\t\tvar default_filters = [\n\t\t\t[\"Communication\", \"communication_type\", \"=\", \"Communication\", true],\n\t\t\t[\"Communication\", \"communication_medium\", \"=\", \"Email\", true],\n\t\t];\n\t\tvar filters = [];\n\t\tif (email_account === \"Sent\") {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Sent\", true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t} else if (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"email_status\", \"=\", email_account, true],\n\t\t\t\t[\"Communication\", \"email_account\", \"in\", frappe.boot.all_accounts, true]\n\t\t\t]);\n\t\t} else {\n\t\t\tvar op = \"=\";\n\t\t\tif (email_account == \"All Accounts\") {\n\t\t\t\top = \"in\";\n\t\t\t\temail_account = frappe.boot.all_accounts;\n\t\t\t}\n\n\t\t\tfilters = default_filters.concat([\n\t\t\t\t[\"Communication\", \"sent_or_received\", \"=\", \"Received\", true],\n\t\t\t\t[\"Communication\", \"status\", \"=\", \"Open\", true],\n\t\t\t\t[\"Communication\", \"email_account\", op, email_account, true],\n\t\t\t\t[\"Communication\", \"email_status\", \"not in\", \"Spam,Trash\", true],\n\t\t\t]);\n\t\t}\n\n\t\treturn filters;\n\t}\n\n\tget_no_result_message() {\n\t\tvar email_account = this.email_account;\n\t\tvar args;\n\t\tif (in_list([\"Spam\", \"Trash\"], email_account)) {\n\t\t\treturn __(\"No {0} mail\", [email_account]);\n\t\t} else if (!email_account && !frappe.boot.email_accounts.length) {\n\t\t\t// email account is not configured\n\t\t\targs = {\n\t\t\t\tdoctype: \"Email Account\",\n\t\t\t\tmsg: __(\"No Email Account\"),\n\t\t\t\tlabel: __(\"New Email Account\"),\n\t\t\t};\n\t\t} else {\n\t\t\t// no sent mail\n\t\t\targs = {\n\t\t\t\tdoctype: \"Communication\",\n\t\t\t\tmsg: __(\"No Emails\"),\n\t\t\t\tlabel: __(\"Compose Email\")\n\t\t\t};\n\t\t}\n\n\t\tconst html = frappe.model.can_create(args.doctype) ?\n\t\t\t`<p>${args.msg}</p>\n\t\t\t<p>\n\t\t\t\t<button class=\"btn btn-primary btn-sm btn-new-doc\">\n\t\t\t\t\t${args.label}\n\t\t\t\t</button>\n\t\t\t</p>\n\t\t\t` :\n\t\t\t`<p>${ __(\"No Email Accounts Assigned\") }</p>`;\n\n\t\treturn `\n\t\t\t<div class=\"msg-box no-border\">\n\t\t\t\t${html}\n\t\t\t</div>\n\t\t`;\n\t}\n\n\tmake_new_doc() {\n\t\tif (!this.email_account && !frappe.boot.email_accounts.length) {\n\t\t\tfrappe.route_options = {\n\t\t\t\t'email_id': frappe.session.user_email\n\t\t\t};\n\t\t\tfrappe.new_doc('Email Account');\n\t\t} else {\n\t\t\tnew frappe.views.CommunicationComposer();\n\t\t}\n\t}\n};\n","// Copyright (c) 2015, Frappe Technologies Pvt. Ltd. and Contributors\n// MIT License. See license.txt\n\nfrappe.provide(\"frappe.treeview_settings\");\nfrappe.provide('frappe.views.trees');\nwindow.cur_tree = null;\n\nfrappe.views.TreeFactory = class TreeFactory extends frappe.views.Factory {\n\tmake(route) {\n\t\tfrappe.model.with_doctype(route[1], function() {\n\t\t\tvar options = {\n\t\t\t\tdoctype: route[1],\n\t\t\t\tmeta: frappe.get_meta(route[1])\n\t\t\t};\n\n\t\t\tif (!frappe.treeview_settings[route[1]] && !frappe.meta.get_docfield(route[1], \"is_group\")) {\n\t\t\t\tfrappe.msgprint(__(\"Tree view is not available for {0}\", [route[1]] ));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t$.extend(options, frappe.treeview_settings[route[1]] || {});\n\t\t\tfrappe.views.trees[options.doctype] = new frappe.views.TreeView(options);\n\t\t});\n\t}\n\n\ton_show() {\n\t\t/**\n\t\t * When the the treeview is visited using the previous button,\n\t\t * the framework just show the treeview element that is hidden.\n\t\t * Due to this, the data of the tree can be old.\n\t\t * To deal with this, the tree will be refreshed whenever the\n\t\t * treeview is visible.\n\t\t */\n\t\tlet route = frappe.get_route();\n\t\tlet treeview = frappe.views.trees[route[1]];\n\t\ttreeview && treeview.make_tree();\n\t}\n}\n\nfrappe.views.TreeView = Class.extend({\n\tinit: function(opts) {\n\t\tvar me = this;\n\n\t\tthis.opts = {};\n\t\tthis.opts.get_tree_root = true;\n\t\tthis.opts.show_expand_all = true;\n\t\t$.extend(this.opts, opts);\n\t\tthis.doctype = opts.doctype;\n\t\tthis.args = {doctype: me.doctype};\n\t\tthis.page_name = frappe.get_route_str();\n\t\tthis.get_tree_nodes =  me.opts.get_tree_nodes || \"frappe.desk.treeview.get_children\";\n\n\t\tthis.get_permissions();\n\t\tthis.make_page();\n\t\tthis.make_filters();\n\t\tthis.root_value = null;\n\n\t\tif (me.opts.get_tree_root) {\n\t\t\tthis.get_root();\n\t\t}\n\n\t\tthis.onload();\n\t\tthis.set_menu_item();\n\t\tthis.set_primary_action();\n\t},\n\tget_permissions: function(){\n\t\tthis.can_read = frappe.model.can_read(this.doctype);\n\t\tthis.can_create = frappe.boot.user.can_create.indexOf(this.doctype) !== -1 ||\n\t\t\t\t\tfrappe.boot.user.in_create.indexOf(this.doctype) !== -1;\n\t\tthis.can_write = frappe.model.can_write(this.doctype);\n\t\tthis.can_delete = frappe.model.can_delete(this.doctype);\n\t},\n\tmake_page: function() {\n\t\tvar me = this;\n\t\tthis.parent = frappe.container.add_page(this.page_name);\n\t\tfrappe.ui.make_app_page({parent:this.parent, single_column:true});\n\n\t\tthis.page = this.parent.page;\n\t\tfrappe.container.change_to(this.page_name);\n\t\tfrappe.breadcrumbs.add(me.opts.breadcrumb || locals.DocType[me.doctype].module, me.doctype);\n\n\t\tthis.set_title();\n\n\t\tthis.page.main.css({\n\t\t\t\"min-height\": \"300px\",\n\t\t});\n\n\t\tthis.page.main.addClass('frappe-card');\n\n\t\tif(this.opts.show_expand_all) {\n\t\t\tthis.page.add_inner_button(__('Expand All'), function() {\n\t\t\t\tme.tree.load_children(me.tree.root_node, true);\n\t\t\t});\n\t\t}\n\n\t\tif(this.opts.view_template) {\n\t\t\tvar row = $('<div class=\"row\"><div>').appendTo(this.page.main);\n\t\t\tthis.body = $('<div class=\"col-sm-6 col-xs-12\"></div>').appendTo(row);\n\t\t\tthis.node_view = $('<div class=\"col-sm-6 hidden-xs\"></div>').appendTo(row);\n\t\t} else {\n\t\t\tthis.body = this.page.main;\n\t\t}\n\t},\n\tset_title: function() {\n\t\tthis.page.set_title(this.opts.title || __('{0} Tree', [__(this.doctype)]));\n\t},\n\tonload: function() {\n\t\tvar me = this;\n\t\tthis.opts.onload && this.opts.onload(me);\n\t},\n\tmake_filters: function() {\n\t\tvar me = this;\n\t\tfrappe.treeview_settings.filters = []\n\t\t$.each(this.opts.filters || [], function(i, filter) {\n\t\t\tif (frappe.route_options && frappe.route_options[filter.fieldname]) {\n\t\t\t\tfilter.default = frappe.route_options[filter.fieldname];\n\t\t\t}\n\n\t\t\tif (!filter.disable_onchange) {\n\t\t\t\tfilter.change = function() {\n\t\t\t\t\tfilter.onchange && filter.onchange();\n\t\t\t\t\tvar val = this.get_value();\n\t\t\t\t\tme.args[filter.fieldname] = val;\n\t\t\t\t\tif (val) {\n\t\t\t\t\t\tme.root_label = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = me.opts.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.set_title();\n\t\t\t\t\tme.make_tree();\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tme.page.add_field(filter);\n\n\t\t\tif (filter.default) {\n\t\t\t\t$(\"[data-fieldname='\"+filter.fieldname+\"']\").trigger(\"change\");\n\t\t\t}\n\t\t});\n\t},\n\tget_root: function() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: me.get_tree_nodes,\n\t\t\targs: me.args,\n\t\t\tcallback: function(r) {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tif (r.message.length > 1) {\n\t\t\t\t\t\tme.root_label = me.doctype;\n\t\t\t\t\t\tme.root_value = \"\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tme.root_label = r.message[0][\"value\"];\n\t\t\t\t\t\tme.root_value = me.root_label;\n\t\t\t\t\t}\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t},\n\tmake_tree: function() {\n\t\t$(this.parent).find(\".tree\").remove();\n\n\t\tvar use_label = this.args[this.opts.root_label] || this.root_label || this.opts.root_label;\n\t\tvar use_value = this.root_value;\n\t\tif (use_value == null) {\n\t\t\tuse_value = use_label;\n\t\t}\n\t\tthis.tree = new frappe.ui.Tree({\n\t\t\tparent: this.body,\n\t\t\tlabel: use_label,\n\t\t\troot_value: use_value,\n\t\t\texpandable: true,\n\n\t\t\targs: this.args,\n\t\t\tmethod: this.get_tree_nodes,\n\n\t\t\t// array of button props: {label, condition, click, btnClass}\n\t\t\ttoolbar: this.get_toolbar(),\n\n\t\t\tget_label: this.opts.get_label,\n\t\t\ton_render: this.opts.onrender,\n\t\t\ton_get_node: this.opts.on_get_node,\n\t\t\ton_click: (node) => { this.select_node(node); },\n\t\t});\n\n\t\tcur_tree = this.tree;\n\t\tthis.post_render();\n\t},\n\n\trebuild_tree: function() {\n\t\tlet me = this;\n\n\t\tfrappe.call({\n\t\t\t\"method\": \"frappe.utils.nestedset.rebuild_tree\",\n\t\t\t\"args\": {\n\t\t\t\t'doctype': me.doctype,\n\t\t\t\t'parent_field': \"parent_\"+me.doctype.toLowerCase().replace(/ /g, '_'),\n\t\t\t},\n\t\t\t\"callback\": function(r) {\n\t\t\t\tif (!r.exc) {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tpost_render: function() {\n\t\tvar me = this;\n\t\tme.opts.post_render && me.opts.post_render(me);\n\t},\n\n\tselect_node: function(node) {\n\t\tvar me = this;\n\t\tif(this.opts.click) {\n\t\t\tthis.opts.click(node);\n\t\t}\n\t\tif(this.opts.view_template) {\n\t\t\tthis.node_view.empty();\n\t\t\t$(frappe.render_template(me.opts.view_template,\n\t\t\t\t{data:node.data, doctype:me.doctype})).appendTo(this.node_view);\n\t\t}\n\t},\n\tget_toolbar: function() {\n\t\tvar me = this;\n\n\t\tvar toolbar = [\n\t\t\t{\n\t\t\t\tlabel:__(me.can_write? \"Edit\": \"Details\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\treturn !node.is_root && me.can_read;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.set_route(\"Form\", me.doctype, node.label);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Add Child\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\treturn me.can_create && node.expandable && !node.hide_add;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tme.new_node();\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Rename\"),\n\t\t\t\tcondition: function(node) {\n\t\t\t\t\tlet allow_rename = true;\n\t\t\t\t\tif (me.doctype && frappe.get_meta(me.doctype)) {\n\t\t\t\t\t\tif(!frappe.get_meta(me.doctype).allow_rename) allow_rename = false;\n\t\t\t\t\t}\n\t\t\t\t\treturn !node.is_root && me.can_write && allow_rename;\n\t\t\t\t},\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.model.rename_doc(me.doctype, node.label, function(new_name) {\n\t\t\t\t\t\tnode.$tree_link.find('a').text(new_name);\n\t\t\t\t\t\tnode.label = new_name;\n\t\t\t\t\t\tme.tree.refresh();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel:__(\"Delete\"),\n\t\t\t\tcondition: function(node) { return !node.is_root && me.can_delete; },\n\t\t\t\tclick: function(node) {\n\t\t\t\t\tfrappe.model.delete_doc(me.doctype, node.label, function() {\n\t\t\t\t\t\tnode.parent.remove();\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tbtnClass: \"hidden-xs\"\n\t\t\t}\n\t\t]\n\n\t\tif(this.opts.toolbar && this.opts.extend_toolbar) {\n\t\t\ttoolbar = toolbar.filter(btn => {\n\t\t\t\treturn !me.opts.toolbar.find(d => d[\"label\"]==btn[\"label\"]);\n\t\t\t});\n\t\t\treturn toolbar.concat(this.opts.toolbar)\n\t\t} else if (this.opts.toolbar && !this.opts.extend_toolbar) {\n\t\t\treturn this.opts.toolbar\n\t\t} else {\n\t\t\treturn toolbar\n\t\t}\n\t},\n\tnew_node: function() {\n\t\tvar me = this;\n\t\tvar node = me.tree.get_selected_node();\n\n\t\tif(!(node && node.expandable)) {\n\t\t\tfrappe.msgprint(__(\"Select a group node first.\"));\n\t\t\treturn;\n\t\t}\n\n\t\tthis.prepare_fields();\n\n\t\t// the dialog\n\t\tvar d = new frappe.ui.Dialog({\n\t\t\ttitle: __('New {0}',[__(me.doctype)]),\n\t\t\tfields: me.fields\n\t\t});\n\n\t\tvar args = $.extend({}, me.args);\n\t\targs[\"parent_\"+me.doctype.toLowerCase().replace(/ /g,'_')] = me.args[\"parent\"];\n\n\t\td.set_value(\"is_group\", 0);\n\t\td.set_values(args);\n\n\t\t// create\n\t\td.set_primary_action(__(\"Create New\"), function() {\n\t\t\tvar btn = this;\n\t\t\tvar v = d.get_values();\n\t\t\tif(!v) return;\n\n\t\t\tv.parent = node.label;\n\t\t\tv.doctype = me.doctype;\n\n\t\t\tif(node.is_root){\n\t\t\t\tv['is_root'] = node.is_root;\n\t\t\t}\n\t\t\telse{\n\t\t\t\tv['is_root'] = false;\n\t\t\t}\n\n\t\t\td.hide();\n\t\t\tfrappe.dom.freeze(__('Creating {0}', [me.doctype]));\n\n\t\t\t$.extend(args, v)\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: me.opts.add_tree_node || \"frappe.desk.treeview.add_node\",\n\t\t\t\targs: args,\n\t\t\t\tcallback: function(r) {\n\t\t\t\t\tif(!r.exc) {\n\t\t\t\t\t\tme.tree.load_children(node);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tfrappe.dom.unfreeze();\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t\td.show();\n\t},\n\tprepare_fields: function(){\n\t\tvar me = this;\n\n\t\tthis.fields = [\n\t\t\t{fieldtype:'Check', fieldname:'is_group', label:__('Group Node'),\n\t\t\t\tdescription: __(\"Further nodes can be only created under 'Group' type nodes\")}\n\t\t]\n\n\t\tif (this.opts.fields) {\n\t\t\tthis.fields = this.opts.fields;\n\t\t}\n\n\t\tthis.ignore_fields = this.opts.ignore_fields || [];\n\n\t\tvar mandatory_fields = $.map(me.opts.meta.fields, function(d) {\n\t\t\treturn (d.reqd || d.bold && !d.read_only) ? d : null });\n\n\t\tvar opts_field_names = this.fields.map(function(d) {\n\t\t\treturn d.fieldname\n\t\t})\n\n\t\tmandatory_fields.map(function(d) {\n\t\t\tif($.inArray(d.fieldname, me.ignore_fields) === -1 && $.inArray(d.fieldname, opts_field_names) === -1) {\n\t\t\t\tme.fields.push(d)\n\t\t\t}\n\t\t})\n\t},\n\tprint_tree: function() {\n\t\tif(!frappe.model.can_print(this.doctype)) {\n\t\t\tfrappe.msgprint(__(\"You are not allowed to print this report\"));\n\t\t\treturn false;\n\t\t}\n\t\tvar tree = $(\".tree:visible\").html();\n\t\tvar me = this;\n\t\tfrappe.ui.get_print_settings(false, function(print_settings) {\n\t\t\tvar title =  __(me.docname || me.doctype);\n\t\t\tfrappe.render_tree({title: title, tree: tree, print_settings:print_settings});\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"frappe.core.doctype.access_log.access_log.make_access_log\",\n\t\t\t\targs: {\n\t\t\t\t\tdoctype: me.doctype,\n\t\t\t\t\treport_name: me.page_name,\n\t\t\t\t\tpage: tree,\n\t\t\t\t\tmethod: 'Print'\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t},\n\tset_primary_action: function() {\n\t\tvar me = this;\n\t\tif (!this.opts.disable_add_node && this.can_create) {\n\t\t\tme.page.set_primary_action(__(\"New\"), function() {\n\t\t\t\tme.new_node();\n\t\t\t}, \"add\");\n\t\t}\n\t},\n\tset_menu_item: function() {\n\t\tvar me = this;\n\n\t\tthis.menu_items = [\n\t\t\t{\n\t\t\t\tlabel: __('View List'),\n\t\t\t\taction: function() {\n\t\t\t\t\tfrappe.set_route('List', me.doctype);\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Print'),\n\t\t\t\taction: function() {\n\t\t\t\t\tme.print_tree();\n\t\t\t\t}\n\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __('Refresh'),\n\t\t\t\taction: function() {\n\t\t\t\t\tme.make_tree();\n\t\t\t\t}\n\t\t\t},\n\t\t];\n\n\t\tif (frappe.user.has_role('System Manager') &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"lft\") &&\n\t\t\tfrappe.meta.has_field(me.doctype, \"rgt\")) {\n\t\t\tthis.menu_items.push(\n\t\t\t\t{\n\t\t\t\t\tlabel: __('Rebuild Tree'),\n\t\t\t\t\taction: function() {\n\t\t\t\t\t\tme.rebuild_tree();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (me.opts.menu_items) {\n\t\t\tme.menu_items.push.apply(me.menu_items, me.opts.menu_items)\n\t\t}\n\n\t\t$.each(me.menu_items, function(i, menu_item){\n\t\t\tvar has_perm = true;\n\t\t\tif(menu_item[\"condition\"]) {\n\t\t\t\thas_perm = eval(menu_item[\"condition\"]);\n\t\t\t}\n\n\t\t\tif (has_perm) {\n\t\t\t\tme.page.add_menu_item(menu_item[\"label\"], menu_item[\"action\"]);\n\t\t\t}\n\t\t});\n\t}\n});\n\n\n\n\n\n\n\n\n"],"names":["frappe","has_indicator","doctype","model","is_submittable","listview_settings","get_indicator","workflow","get_state_fieldname","meta","has_field","doc","__unsaved","__","workflows","without_workflow","settings","workflow_fieldname","value","colour","locals","style","Success","Warning","Danger","Primary","Inverse","Info","docstatus","has_indicator_for_draft","has_indicator_for_cancelled","indicator","status","utils","guess_colour","enabled","disabled","ui","Filter","[object Object]","opts","$","extend","this","undefined","filter_utils","set_conditions","set_conditions_from_config","make","conditions","nested_set_conditions","push","ref","invalid_condition_map","Date","Datetime","Data","Select","Link","Currency","Color","Check","map","c","filter","Code","HTML Editor","Markdown Editor","Password","Rating","boot","additional_filters_config","filters_config","Object","keys","let","key","label","fieldtype","valid_for_fieldtypes","includes","filter_edit_area","render_template","parent","appendTo","find","make_select","set_events","setup","fieldselect","FieldSelect","parent_doctype","_parent_doctype","filter_fields","input_class","select","fieldname","set_field","set_value","on","remove","on_change","change","field","condition","get_condition","add_condition_help","empty","df","const","set_values","is_new","promise","Promise","resolve","addClass","update_filter_tag","hidden","then","$filter_tag","hide","_filter_value_set","set_filter_button_text","make_tag","original_type","set_condition","Array","isArray","join","trim","cur","k","original_docfield","fields_by_name","console","warn","copy_dict","read_only","is_filter","hidden_due_to_dependency","get_default_condition","set_fieldtype","options","selected_doctype","selected_fieldname","args","depends_on","field_name","filter_value","filter_list","get_filter_value","xcall","get_field","make_field","old_fieldtype","old_text","get_value","hide_invalid_conditions","toggle_nested_set_conditions","field_area","get","f","form","make_control","only_input","refresh","bind_filter_field_events","$input","wrapper","keydown","e","which","get_selected_value","val","trigger_change","$condition_field","description","html","get_filter_tag_element","insertAfter","bind_tag","bind","filter_button","closest","show","toggle","get_filter_button_text","get_formatted_value","icon","invalid_conditions","show_condition","nested_set_doctypes","forEach","0","1","2","cint","format","only_value","strip","indexOf","startsWith","endsWith","in_list","split","v","reqd","ignore_link_validation","toLowerCase","get_timespan_options","periods","period_map","Last","This","Next","period","p","FilterGroup","filters","window","fltr","make_popover","append","get_filter_area_template","set_filter_events","init_filter_popover","set_clear_all_filters_event","set_popover_events","filter_x_button","toggle_empty_filters","base_list","filter_area","clear","clear_filters","update_filter_button","popover","content","template","trigger","container","placement","offset","document","body","is","in_datepicker","target","length","parents","hide_popover","hide_empty_filters","add_filters_to_popover","add_filter","apply","router","update_filters","filters_applied","button_label","toggleClass","promises","run_serially","validate_args","is_new_filter","arguments","push_new_filter","std_fields_list","msgprint","message","bold","filter_exists","_push_new_filter","index","update","filter_items","exists","f_value","equal","arrays_equal","slice","get_filters","reduce","acc","assign","from","set_standard_filter","non_standard_filters","add_filters","list_view","Class","init","me","select_input","awesomplete","Awesomplete","minChars","maxItems","autoFirst","list","item","repl","data","originalEvent","text","get_item","i","add_field_option","build_options","parts","each","table_fields","std_filters","std_fields","d","doctype_obj","istable","concat","with_blank","main_table_fields","docfield_list","sort","get_meta","perm","has_perm","permlevel","table_df","child_table_fields","link_field","get_docfields","table","no_value_type","Tags","tagsList","onTagAdd","onTagRemove","onTagClick","onChange","placeholder","$ul","$inputWrapper","get_list_element","$placeholder","deactivate","select_tag","tagValue","xss_sanitise","addTag","keypress","keyCode","focusout","activate","focus","addTags","$tag","get_tag","insertBefore","splice","labels","$element","class_name","$li","get_data_pill","pill_wrapper","removeTag","TagEditor","setup_tags","user_tags","initialized","tags","tag","refreshing","call","method","get_args","callback","r","fetch_tags","setup_awesomplete","setup_complete","input","attr","frm","txt","dt","dn","docname","clearTags","setTimeout","is_liked","get_liked_by","session","user","liked","_liked_by","JSON","parse","toggle_like","$btn","name","add","hasClass","css","quiet","exc","querySelectorAll","like","dataset","classList","liked_by","idx","stringify","click_toggle_like","$count","siblings","not_liked","setup_like_popover","$parent","selector","check_not_liked","dom","is_touchscreen","target_element","animation","decodeURI","liked_by_list","avatar","full_name","children","click","ev","currentTarget","set_route","provide","views","BaseList","before_refresh","init_promise","tasks","setup_defaults","set_stats","setup_fields","setup_page","setup_side_bar","setup_main_section","setup_view","setup_view_menu","fn","page_name","get_route_str","page_title","doctype_layout","user_settings","get_user_settings","start","page_length","can_create","can_write","fields","sort_by","sort_field","sort_order","primary_action","secondary_action","menu_items","action","class","list_view_settings","set_fields","build_fields","title_field","_add_field","is_value_type","in_list_view","Boolean","uniqBy","stats","workflow_state_fieldname","page","$page","hide_card_layout","main","page_form","removeClass","hide_page_form","hide_sidebar","setup_page_head","set_title","set_menu_items","set_breadcrumbs","icon_map","Image","List","Report","Calendar","Gantt","Kanban","Dashboard","Map","desk_settings","view_switcher","views_menu","add_custom_button_group","view_name","views_list","ListViewSelect","sidebar","list_sidebar","$secondary_action","set_secondary_action","refresh_button","add_action_icon","set_default_secondary_action","$item","add_menu_item","standard","shortcut","breadcrumbs","module","ListSidebar","show_sidebar","localStorage","show_or_hide_sidebar","setup_list_wrapper","setup_filter_area","setup_sort_selector","setup_result_area","setup_no_result_area","setup_freeze_area","setup_paging_area","$frappe_list","hide_filters","FilterArea","set","hide_sort_selector","sort_selector","SortSelector","$filter_section","onchange","on_sort_change","$result","$no_result","get_no_result_message","$freeze","$paging_area","$this","selected_page_count","get_full_column_name","name_field","get_filters_for_args","replace","not set","get_fields","order_by","get_sql_string","view","group_by","get_group_by","freeze","freeze_on_refresh","freeze_message","get_call_args","prepare_data","toggle_result_area","before_render","render","after_render","reset_defaults","dict","values","show_more","names","get_checked_items","custom_actions","$filter_list_wrapper","trigger_refresh","make_standard_filters","make_filter_list","standard_filters","get_standard_filters","on_filter_change","fields_dict","out","get_filter","standard_filters_wrapper","refresh_list_view","custom_filter_configs","config","doctype_fields","in_standard_filter","unshift","default_value","defaults","get_user_default","default","add_field","default_filters","view_modes","is_valid","view_mode","BulkOperations","throw","docs","print_settings","get_doc","allow_print_for_draft","allow_print_for_cancelled","valid_docs","has_role","dialog","Dialog","title","get_letterhead_options","get_print_formats","get_print_sizes","pdf_page_size","pdf_page_height","pdf_page_width","set_primary_action","pdf_options","default_print_format","with_letterhead","letter_sel","print_format","print_sel","json_string","letterhead","page_size","page_height","page_width","page-height","page-width","page-size","open","encodeURIComponent","letterhead_options","limit_page_length","async","docnames","done","items","failed","_server_messages","play_sound","assign_to","AssignToDialog","obj","bulk_assign","re_assign","field_mappings","field_options","status_regex","default_field","test","set_value_field","show_help_text","disable_primary_action","enable_primary_action","show_alert","primary_action_label","dialogObj","new_df","match","replace_field","set_df_property","get_data","db","get_link_options","get_values","set_message","ListSettings","listview","subject_field","with_doctype","get_listview_fields","setup_remove_fields","add_new_fields","show_dialog","removed_listview_fields","removed_fields","refresh_columns","update_fields","field_count","fields_html","$wrapper","total_fields","parseInt","is_sortable","show_sortable_handle","can_remove","Sortable","getElementsByClassName","handle","draggable","onUpdate","onclick","column_selector","remove_fields","getAttribute","existing_fields","set_removed_fields","get_removed_listview_fields","fields_order","reset_listview_fields","get_doctype_fields","columns","set_subject_field","set_status_field","get_docfield","set_list_view_fields","type","multiselect_fields","checked","new_fields","column","ListView","route","get_route","last_view","super","disable_scroll_to_top","has_permissions","view_user_settings","saved_filters","validate_filters","get_menu_items","toggle_paging","patch_refresh_and_load_lib","get_list_view_settings","valid_fields","set_actions_menu_items","actions_menu_items","get_actions_menu_items","workflow_action_menu_items","get_workflow_action_menu_items","workflow_action_items","add_actions_menu_item","is_workflow_action","match_rules_list","get_match_rules","restricted_list","show_restrictions","condition_list","get_fields_in_list_view","image_field","add_fields","track_seen","throttle","load_lib","required_libs","require","setInterval","doctype_name","make_new_doc","clear_primary_action","is_non_std_field","new_doc","setup_columns","render_header","render_skeleton","setup_events","onload","show_restricted_list_indicator_if_applicable","refresh_header","update_checkbox","$checkbox_actions","$check_all_checkbox","prop","$checks","get_df","fields_in_list_view","reorder_listview_fields","innerWidth","hide_name_column","fld","col","documentation","help_link","get_documentation_link","no_result_message","new_button_label","empty_state_image","disable_count","with_comment_count","route_options","parse_filters_from_route_options","toggle_actions_menu_button","show_actions_menu","toggle_workflow_actions","hide_actions_menu","prepend","get_header_html","$row","get_list_row_html_skeleton","save","save_view_user_settings","setup_new_doc_event","render_list","set_rows_as_checked","on_row_checked","render_count","_idx","get_list_row_html","get_count_str","str","subject_html","$columns","is_numeric_field","get_header_html_skeleton","left","right","get_column_html","get_meta_html","get_left_html","get_right_html","get_indicator_html","tags_shown","_user_tags","get_tags_html","translated_doctypes","_value","css_class","Subject","Field","column_html","get_subject_html","fetch_from","strip_html","escape_html","Math","round","formatters","limit","colored","color","get_palette","settings_button","button","get_description","get_label","modified","comment_when","assigned_to","assigned_users","_assign","avatar_group","filterable","_comment_count","get_indicator_dot","current_count","count_without_children","count","total_count","get_form_link","slug","cstr","_seen","heart_class","u","user_info","fullname","div","createElement","innerHTML","querySelector","setAttribute","formatter","seen","get_seen_class","get_like_html","checkbox","link","href","textValue","html2text","textContent","url","image","cordova","is_url","base_url","setup_filterable","setup_list_click","setup_tag_event","setup_check_events","setup_like","setup_realtime_updates","setup_action_handler","setup_keyboard_navigation","focus_next","activeElement","next","focus_prev","prev","check_row","get_list_row_if_focused","is_current_page","is_input_focused","handle_navigation","direction","add_shortcut","$list_row","metaKey","ctrlKey","stopPropagation","filters_to_apply","datetime","get_today","$target","$check","preventDefault","pathname","$button","shiftKey","$checkbox_cursor","name_1","name_2","findIndex","min_index","max_index","toggle_tags","pending_document_refreshes","disable_auto_refresh","socketio","doctype_subscribe","realtime","is_being_edited","debounce","process_document_refreshes","cur_list","call_args","datum","a","b","a_value","b_value","return_value","el","$list_head_subject","preview_label","only_docnames","check","unescape","query_params","full_url","location","get_share_url","copy_to_clipboard","can_import","reference_doctype","can_set_user_permissions","allow","user_roles","custom","doc_type","toggle_side_bar","share_url","developer_mode","get_view_settings","show_list_settings","workflow_actions","has_workflow","get_all_transition_actions","checked_items","actions","bulk_operations","is_field_editable","field_doc","some","has_editable_fields","edit","apply_assignment_rule","add_tags","can_print","print","has_submit_permission","confirm","submit_or_cancel","can_cancel","can_delete","toString","delete","value_array","get_doctype_for_field","j","on_update","event","trigger_list_update","get_list_view","ListFactory","Factory","issingle","set_re_route","to_title_case","view_class","load_last_view","change_to","make_page","set_cur_list","re_route_to_view","set_module_breadcrumb","last_route","route_history","history","go","prev_route","module_links","set_doctype_module","set_current_view","setup_views","add_custom_menu_item","current_view","kanban_board","email_account","calendar_name","current_view_handler","reports","get_reports","default_action","setup_dropdown_in_sidebar","calendar","get_calendars","calendars","Inbox","email_accounts","accounts","get_email_accounts","has_common","Tree","treeview_settings","is_tree","setup_kanban_boards","KanbanView","get_kanbans","kanbans","setup_kanban_switcher","get_coords_method","add_view_to_menu","views_wrapper","$dropdown","get_page_name","kanban_switcher","show_kanban_dialog","added","reports_to_add","add_reports","ref_doctype","report_type","all_reports","localeCompare","fetch_kanban_board","board","isEmptyObject","last_opened_kanban","last_kanban_board","get_list","result","accounts_to_add","account","email_id","display_name","ListFilter","can_add_global","$input_area","$list_filters","$saved_filters","$saved_filters_preview","saved_filters_hidden","filter_input","render_input","is_global_input","bind_save_filter","bind_toggle_saved_filters","bind_click_filter","bind_remove_filter","get_list_filters","filter_template","set_description","toggle_saved_filters","$filter","set_applied_filter","get_filters_values","applied_filters","remove_filter","remove_filters","has_value","filter_name_exists","save_filter","help_text","filter_name","insert","for_user","get_current_filters","delete_doc","or_filters","sidebar_content","setup_list_filter","setup_list_group_by","disable_sidebar_stats","reload_stats","show_list_link","dropdown","divider","get_divider","list_filter","get_shortcut_group","list_group_by","ListGroupBy","dropdown_options","set_loading_state","render_stat","stats_dropdown","setup_search","tag_list","existing","get_stats","make_wrapper","group_by_fields","render_group_by_items","make_group_by_fields_modal","setup_dropdown","setup_filter_by","get_group_by_dropdown_fields","$body","docfield","get_group_by_count","field_count_list","applied_filter","render_dropdown_items","set_empty_state","current_filters","f_arr","field_counts","current_user","standard_html","applied_filter_html","dropdown_items_html","get_dropdown_html","dropdown_html","applied","is_selected","decodeURIComponent","apply_filter","operator","GanttView","calendar_settings","gantt","field_map","prepare_tasks","progress","isFunction","end","id","dependencies","depends_on_tasks","validate_hex","substr","is_milestone","render_gantt","gantt_view_mode","bar_height","bar_corner_radius","resize_handle_width","resize_handle_height","resize_handle_corner_radius","resize_handle_offset","date_format","on_click","task","on_date_change","moment","on_progress_change","progress_fieldname","on_view_change","mode","custom_popup_html","_start","_end","gantt_custom_popup_html","setup_view_mode_buttons","set_colors","view_is","change_view_mode","t","custom_class","bar_color","get_contrast_color","CalendarView","last_calendar","get_calendar_preferences","with_doc","start_date_field","end_date_field","allDay","all_day","assets","user_language","language","get_default_options","defaultView","getItem","weekends","setup_options","setup_view_mode_button","clear_user_actions","can_read","$cal","fullCalendar","footnote_area","set_footnote","border-top","cal_options","set_css","detach","btn","set_localStorage_option","option","removeItem","setItem","wrapAll","wrap","btn_group","convertToUserTz","color_map","danger","success","warning","get_system_datetime","date","_offset","tz","sys_defaults","time_zone","convert_to_system_tz","meridiem","locale","header","editable","selectable","selectHelper","forceEventDuration","displayEventTime","nowIndicator","events","timezone","get_events_method","prepare_events","displayEventEnd","eventRender","element","tooltip","eventClick","eventDrop","delta","revertFunc","update_event","eventResize","startDate","endDate","jsEvent","get_new_doc","_ambigTime","subtract","dayClick","$date_cell","source","convert_to_user_tz","validate","add_days","fix_end_date_for_event_render","prepare_colors","color_name","get_css_class","backgroundColor","textColor","remove_from_locals","update_event_method","get_update_args","error","stripTime","DashboardView","dashboard_settings","chart_group","number_card_group","setup_dashboard_page","setup_dashboard_customization","make_dashboard","customize","reset_dashboard_customization","add_customization_buttons","clear_secondary_action","$dashboard_page","$dashboard_wrapper","$chart_header","bind_actions_with_object","save_customizations_button","add_button","save_dashboard_customization","standard_actions","btn_class","discard_customizations_button","discard_dashboard_customization","toggle_customization_buttons","charts","number_cards","render_dashboard","fetch_dashboard_items","chart_type","document_type","is_public","dashboard_utils","get_dashboard_settings","dashboard_chart_settings","chart_config","chart","chart_name","chart_settings","render_dashboard_charts","render_number_cards","render_empty_state","obj_name","widget","WidgetGroup","allow_sorting","allow_create","allow_delete","allow_hiding","default_values","widgets","in_customize_mode","height","allow_resize","custom_dialog","show_add_chart_dialog","empty_state_html","$empty_state","toggle_customize","widget_group","get_widget_config","order","widget_name","remove_duplicates","get_widgets_to_save","get_field_options","get_query","query","mandatory_depends_on","value_fields","date_fields","aggregate_function_fields","new_or_existing","chart_function","filters_json","new_widget","on_create","numeric_fieldtypes","ImageView","_image_url","get_image_url","get_attached_images","render_image_view","gallery","prepare_pswp_items","images_map","setup_gallery","item_html","info_fields","info_html","_name","encodeURI","encoded_name","escaped_title","_class","_html","get_abbr","details","item_details_html","expand_button_html","escape","GalleryView","lib_ready","prepare","pswp_root","pswp","_items","_images_map","width","naturalWidth","naturalHeight","getBoundingClientRect","src","msrc","w","h","pswp_items","_show","getThumbBoundsFn","thumbnail","pageYScroll","pageYOffset","documentElement","scrollTop","rect","x","y","top","shareEl","showHideOpacity","PhotoSwipe","PhotoSwipeUI_Default","browse_images","$more_items","last_hide_timeout","hide_more_items_after_2s","clearTimeout","hide_more_items","img_html","listen","images","currItem","off","img_el","goTo","invalidateCurrItems","updateSize","asset_dir","MapView","get_coords","render_map_view","map_id","get_unique_id","L","Icon","Default","imagePath","setView","map_defaults","center","zoom","tileLayer","tiles","addTo","control","scale","coords","features","geoJSON","bindPopup","properties","lastCoords","geometry","coordinates","reverse","panTo","KanbanSettings","kanbanview","board_name","params","newIndex","oldIndex","get_dialog_fields_wrapper","show_column_selector","get_multiselect_fields","get_std_field","ignore_fields","ignore_fieldtypes","redirect_to_home_if_invalid_route","pop","get_doc_mappings","Event","interaction_type","summary","category","due_date","public","reqd_fields","hidden_fields","ToDo","reference_document","card_meta","get_card_meta","save_kanban_board_filters","get_board","filters_array","set_indicator","clear_indicator","kanban","KanbanBoard","cards","quick_entry","mandatory","show_kanban_settings","kanban_boards","select_fields","dialog_fields","to_save","dialog_title","get_fields_for_dialog","project","kb","kanban_filters","kanban_board_name","err","InboxView","last_email_account","current_email_account","get_inbox_filters","is_sent_emails","email","attachment","has_attachment","reference_name","communication_date","all_accounts","op","msg","CommunicationComposer","user_email","FileView","last_folder","home_folder","add_file_action_buttons","grid_view","get_breadcrumbs_html","current_folder","file_menu_items","prompt","file_name","folder","FileUploader","restrictions","allowed_file_types","on_success","file","$cut_button","file_manager","cut","$paste_btn","paste","prepare_datum","is_folder","icon_class","is_image_file","file_url","_title","_type","is_private","render_grid_view","file_body_html","get_route_url","get_creation_date","folders","curr","breadcrumbs_html","creation","now_date","str_to_user","file_size","FileSize","route_url","setup_drag_events","dataTransfer","setData","opacity","$el","files","getData","folder_name","toggle_cut_paste_buttons","hide_paste_btn","can_paste","old_folder","hide_cut_btn","cur_tree","TreeFactory","trees","TreeView","treeview","make_tree","get_tree_root","show_expand_all","get_tree_nodes","get_permissions","make_filters","root_value","get_root","set_menu_item","in_create","add_page","make_app_page","single_column","breadcrumb","DocType","min-height","add_inner_button","tree","load_children","root_node","view_template","row","node_view","disable_onchange","root_label","use_label","use_value","expandable","toolbar","get_toolbar","on_render","onrender","on_get_node","node","select_node","post_render","rebuild_tree","parent_field","is_root","hide_add","new_node","btnClass","allow_rename","rename_doc","new_name","$tree_link","extend_toolbar","get_selected_node","prepare_fields","add_tree_node","always","unfreeze","mandatory_fields","opts_field_names","inArray","print_tree","get_print_settings","render_tree","report_name","disable_add_node","menu_item","eval","InteractionComposer","subject","no_submit_on_enter","create_action","display","select_attachments","render_attach","filename","interaction_docs","set_reqd_hidden_fields","get_event_categories","categories","get_input","add_options","setup_attach","doc_mapping","attach","attachments","attachment_uploaded","cur_frm","get_files","urllib","get_full_url","get_primary_btn","form_values","selected_attachments","create_interaction","interaction_values","reference_docname","assign_document","add_attachments","reload_doc","assignee"],"mappings":"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"}